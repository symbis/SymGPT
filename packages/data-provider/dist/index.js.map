{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/types/assistants.ts","../src/feedback.ts","../src/schemas.ts","../src/types/files.ts","../src/models.ts","../src/file-config.ts","../src/types/agents.ts","../src/mcp.ts","../src/config.ts","../src/types/runs.ts","../src/bedrock.ts","../src/parsers.ts","../src/azure.ts","../src/artifacts.ts","../src/generate.ts","../src/permissions.ts","../src/roles.ts","../src/types/web.ts","../src/accessPermissions.ts","../src/keys.ts","../src/headers-helpers.ts","../src/api-endpoints.ts","../src/request.ts","../src/data-service.ts","../src/actions.ts","../src/parameterSettings.ts","../src/createPayload.ts","../src/ocr.ts"],"sourcesContent":["export const envVarRegex = /^\\${(.+)}$/;\n\n/** Extracts the environment variable name from a template literal string */\nexport function extractVariableName(value: string): string | null {\n  if (!value) {\n    return null;\n  }\n\n  const match = value.trim().match(envVarRegex);\n  return match ? match[1] : null;\n}\n\n/** Extracts the value of an environment variable from a string. */\nexport function extractEnvVariable(value: string) {\n  if (!value) {\n    return value;\n  }\n\n  // Trim the input\n  const trimmed = value.trim();\n\n  // Special case: if it's just a single environment variable\n  const singleMatch = trimmed.match(envVarRegex);\n  if (singleMatch) {\n    const varName = singleMatch[1];\n    return process.env[varName] || trimmed;\n  }\n\n  // For multiple variables, process them using a regex loop\n  const regex = /\\${([^}]+)}/g;\n  let result = trimmed;\n\n  // First collect all matches and their positions\n  const matches = [];\n  let match;\n  while ((match = regex.exec(trimmed)) !== null) {\n    matches.push({\n      fullMatch: match[0],\n      varName: match[1],\n      index: match.index,\n    });\n  }\n\n  // Process matches in reverse order to avoid position shifts\n  for (let i = matches.length - 1; i >= 0; i--) {\n    const { fullMatch, varName, index } = matches[i];\n    const envValue = process.env[varName] || fullMatch;\n\n    // Replace at exact position\n    result = result.substring(0, index) + envValue + result.substring(index + fullMatch.length);\n  }\n\n  return result;\n}\n","import type { OpenAPIV3 } from 'openapi-types';\nimport type { AssistantsEndpoint, AgentProvider } from 'src/schemas';\nimport type { ContentTypes } from './runs';\nimport type { Agents } from './agents';\nimport type { TFile } from './files';\nimport { ArtifactModes } from 'src/artifacts';\n\nexport type Schema = OpenAPIV3.SchemaObject & { description?: string };\nexport type Reference = OpenAPIV3.ReferenceObject & { description?: string };\n\nexport type Metadata = {\n  avatar?: string;\n  author?: string;\n} & {\n  [key: string]: unknown;\n};\n\nexport enum Tools {\n  execute_code = 'execute_code',\n  code_interpreter = 'code_interpreter',\n  file_search = 'file_search',\n  web_search = 'web_search',\n  retrieval = 'retrieval',\n  function = 'function',\n  memory = 'memory',\n}\n\nexport enum EToolResources {\n  code_interpreter = 'code_interpreter',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  image_edit = 'image_edit',\n  ocr = 'ocr',\n}\n\nexport type Tool = {\n  [type: string]: Tools;\n};\n\nexport type FunctionTool = {\n  type: Tools;\n  function?: {\n    description: string;\n    name: string;\n    parameters: Record<string, unknown>;\n    strict?: boolean;\n    additionalProperties?: boolean; // must be false if strict is true https://platform.openai.com/docs/guides/structured-outputs/some-type-specific-keywords-are-not-yet-supported\n  };\n};\n\n/**\n * A set of resources that are used by the assistant's tools. The resources are\n * specific to the type of tool. For example, the `code_interpreter` tool requires\n * a list of file IDs, while the `file_search` tool requires a list of vector store\n * IDs.\n */\nexport interface ToolResources {\n  code_interpreter?: CodeInterpreterResource;\n  file_search?: FileSearchResource;\n}\nexport interface CodeInterpreterResource {\n  /**\n   * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n   * available to the `code_interpreter`` tool. There can be a maximum of 20 files\n   * associated with the tool.\n   */\n  file_ids?: Array<string>;\n}\n\nexport interface FileSearchResource {\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * attached to this assistant. There can be a maximum of 1 vector store attached to\n   * the assistant.\n   */\n  vector_store_ids?: Array<string>;\n}\n\n/* Assistant types */\n\nexport type Assistant = {\n  id: string;\n  created_at: number;\n  description: string | null;\n  file_ids?: string[];\n  instructions: string | null;\n  conversation_starters?: string[];\n  metadata: Metadata | null;\n  model: string;\n  name: string | null;\n  object: string;\n  tools?: FunctionTool[];\n  tool_resources?: ToolResources;\n};\n\nexport type TAssistantsMap = Record<AssistantsEndpoint, Record<string, Assistant>>;\n\nexport type AssistantCreateParams = {\n  model: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[];\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  endpoint: AssistantsEndpoint;\n  version: number | string;\n  append_current_datetime?: boolean;\n};\n\nexport type AssistantUpdateParams = {\n  model?: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[] | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  endpoint: AssistantsEndpoint;\n  append_current_datetime?: boolean;\n};\n\nexport type AssistantListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  endpoint: AssistantsEndpoint;\n};\n\nexport type AssistantListResponse = {\n  object: string;\n  data: Assistant[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type File = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'assistants' | 'assistants_output';\n};\n\n/* Agent types */\n\nexport type AgentParameterValue = number | string | null;\n\nexport type AgentModelParameters = {\n  model?: string;\n  temperature: AgentParameterValue;\n  maxContextTokens: AgentParameterValue;\n  max_context_tokens: AgentParameterValue;\n  max_output_tokens: AgentParameterValue;\n  top_p: AgentParameterValue;\n  frequency_penalty: AgentParameterValue;\n  presence_penalty: AgentParameterValue;\n};\n\nexport interface AgentBaseResource {\n  /**\n   * A list of file IDs made available to the tool.\n   */\n  file_ids?: Array<string>;\n  /**\n   * A list of files already fetched.\n   */\n  files?: Array<TFile>;\n}\n\nexport interface AgentToolResources {\n  [EToolResources.image_edit]?: AgentBaseResource;\n  [EToolResources.execute_code]?: ExecuteCodeResource;\n  [EToolResources.file_search]?: AgentFileResource;\n  [EToolResources.ocr]?: AgentBaseResource;\n}\n/**\n * A resource for the execute_code tool.\n * Contains file IDs made available to the tool (max 20 files) and already fetched files.\n */\nexport type ExecuteCodeResource = AgentBaseResource;\n\nexport interface AgentFileResource extends AgentBaseResource {\n  /**\n   * The ID of the vector store attached to this agent. There\n   * can be a maximum of 1 vector store attached to the agent.\n   */\n  vector_store_ids?: Array<string>;\n}\nexport type SupportContact = {\n  name?: string;\n  email?: string;\n};\n\nexport type Agent = {\n  _id?: string;\n  id: string;\n  name: string | null;\n  author?: string | null;\n  /** The original custom endpoint name, lowercased */\n  endpoint?: string | null;\n  authorName?: string | null;\n  description: string | null;\n  created_at: number;\n  avatar: AgentAvatar | null;\n  instructions: string | null;\n  additional_instructions?: string | null;\n  tools?: string[];\n  projectIds?: string[];\n  tool_kwargs?: Record<string, unknown>;\n  metadata?: Record<string, unknown>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n  conversation_starters?: string[];\n  /** @deprecated Use ACL permissions instead */\n  isCollaborative?: boolean;\n  tool_resources?: AgentToolResources;\n  agent_ids?: string[];\n  end_after_tools?: boolean;\n  hide_sequential_outputs?: boolean;\n  artifacts?: ArtifactModes;\n  recursion_limit?: number;\n  isPublic?: boolean;\n  version?: number;\n  category?: string;\n  support_contact?: SupportContact;\n};\n\nexport type TAgentsMap = Record<string, Agent | undefined>;\n\nexport type AgentCreateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n} & Pick<\n  Agent,\n  | 'agent_ids'\n  | 'end_after_tools'\n  | 'hide_sequential_outputs'\n  | 'artifacts'\n  | 'recursion_limit'\n  | 'category'\n  | 'support_contact'\n>;\n\nexport type AgentUpdateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  provider?: AgentProvider;\n  model?: string | null;\n  model_parameters?: AgentModelParameters;\n  projectIds?: string[];\n  removeProjectIds?: string[];\n  isCollaborative?: boolean;\n} & Pick<\n  Agent,\n  | 'agent_ids'\n  | 'end_after_tools'\n  | 'hide_sequential_outputs'\n  | 'artifacts'\n  | 'recursion_limit'\n  | 'category'\n  | 'support_contact'\n>;\n\nexport type AgentListParams = {\n  limit?: number;\n  requiredPermission: number;\n  category?: string;\n  search?: string;\n  cursor?: string;\n  promoted?: 0 | 1;\n};\n\nexport type AgentListResponse = {\n  object: string;\n  data: Agent[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n  after?: string;\n};\n\nexport type AgentFile = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'agents' | 'agents_output';\n};\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n * Includes the tool call ID, the code interpreter definition, and the type of tool call.\n */\nexport type CodeToolCall = {\n  id: string; // The ID of the tool call.\n  code_interpreter: {\n    input: string; // The input to the Code Interpreter tool call.\n    outputs: Array<Record<string, unknown>>; // The outputs from the Code Interpreter tool call.\n  };\n  type: 'code_interpreter'; // The type of tool call, always 'code_interpreter'.\n};\n\n/**\n * Details of a Function tool call the run step was involved in.\n * Includes the tool call ID, the function definition, and the type of tool call.\n */\nexport type FunctionToolCall = {\n  id: string; // The ID of the tool call object.\n  function: {\n    arguments: string; // The arguments passed to the function.\n    name: string; // The name of the function.\n    output: string | null; // The output of the function, null if not submitted.\n  };\n  type: 'function'; // The type of tool call, always 'function'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type RetrievalToolCall = {\n  id: string; // The ID of the tool call object.\n  retrieval: unknown; // An empty object for now.\n  type: 'retrieval'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type FileSearchToolCall = {\n  id: string; // The ID of the tool call object.\n  file_search: unknown; // An empty object for now.\n  type: 'file_search'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of the tool calls involved in a run step.\n * Can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n */\nexport type ToolCallsStepDetails = {\n  tool_calls: Array<CodeToolCall | RetrievalToolCall | FileSearchToolCall | FunctionToolCall>; // An array of tool calls the run step was involved in.\n  type: 'tool_calls'; // Always 'tool_calls'.\n};\n\nexport type ImageFile = TFile & {\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content.\n   */\n  file_id: string;\n  filename: string;\n  filepath: string;\n  height: number;\n  width: number;\n  /**\n   * Prompt used to generate the image if applicable.\n   */\n  prompt?: string;\n  /**\n   * Additional metadata used to generate or about the image/tool_call.\n   */\n  metadata?: Record<string, unknown>;\n};\n\n// FileCitation.ts\nexport type FileCitation = {\n  end_index: number;\n  file_citation: FileCitationDetails;\n  start_index: number;\n  text: string;\n  type: 'file_citation';\n};\n\nexport type FileCitationDetails = {\n  file_id: string;\n  quote: string;\n};\n\nexport type FilePath = {\n  end_index: number;\n  file_path: FilePathDetails;\n  start_index: number;\n  text: string;\n  type: 'file_path';\n};\n\nexport type FilePathDetails = {\n  file_id: string;\n};\n\nexport type Text = {\n  annotations?: Array<FileCitation | FilePath>;\n  value: string;\n};\n\nexport enum AnnotationTypes {\n  FILE_CITATION = 'file_citation',\n  FILE_PATH = 'file_path',\n}\n\nexport enum StepStatus {\n  IN_PROGRESS = 'in_progress',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport enum MessageContentTypes {\n  TEXT = 'text',\n  IMAGE_FILE = 'image_file',\n}\n\n//enum for RunStatus\n// The status of the run: queued, in_progress, requires_action, cancelling, cancelled, failed, completed, or expired.\nexport enum RunStatus {\n  QUEUED = 'queued',\n  IN_PROGRESS = 'in_progress',\n  REQUIRES_ACTION = 'requires_action',\n  CANCELLING = 'cancelling',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport type PartMetadata = {\n  progress?: number;\n  asset_pointer?: string;\n  status?: string;\n  action?: boolean;\n  auth?: string;\n  expires_at?: number;\n};\n\nexport type ContentPart = (\n  | CodeToolCall\n  | RetrievalToolCall\n  | FileSearchToolCall\n  | FunctionToolCall\n  | Agents.AgentToolCall\n  | ImageFile\n  | Text\n) &\n  PartMetadata;\n\nexport type TMessageContentParts =\n  | { type: ContentTypes.ERROR; text?: string | (Text & PartMetadata); error?: string }\n  | { type: ContentTypes.THINK; think: string | (Text & PartMetadata) }\n  | { type: ContentTypes.TEXT; text: string | (Text & PartMetadata); tool_call_ids?: string[] }\n  | {\n      type: ContentTypes.TOOL_CALL;\n      tool_call: (\n        | CodeToolCall\n        | RetrievalToolCall\n        | FileSearchToolCall\n        | FunctionToolCall\n        | Agents.AgentToolCall\n      ) &\n        PartMetadata;\n    }\n  | { type: ContentTypes.IMAGE_FILE; image_file: ImageFile & PartMetadata }\n  | Agents.AgentUpdate\n  | Agents.MessageContentImageUrl;\n\nexport type StreamContentData = TMessageContentParts & {\n  /** The index of the current content part */\n  index: number;\n  /** The current text content was already served but edited to replace elements therein */\n  edited?: boolean;\n};\n\nexport type TContentData = StreamContentData & {\n  messageId: string;\n  conversationId: string;\n  userMessageId: string;\n  thread_id: string;\n  stream?: boolean;\n};\n\nexport const actionDelimiter = '_action_';\nexport const actionDomainSeparator = '---';\nexport const hostImageIdSuffix = '_host_copy';\nexport const hostImageNamePrefix = 'host_copy_';\n\nexport type AssistantAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport type AssistantDocument = {\n  user: string;\n  assistant_id: string;\n  conversation_starters?: string[];\n  avatar?: AssistantAvatar;\n  access_level?: number;\n  file_ids?: string[];\n  actions?: string[];\n  createdAt?: Date;\n  updatedAt?: Date;\n  append_current_datetime?: boolean;\n};\n\n/* Agent types */\n\nexport type AgentAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport enum FilePurpose {\n  Vision = 'vision',\n  FineTune = 'fine-tune',\n  FineTuneResults = 'fine-tune-results',\n  Assistants = 'assistants',\n  AssistantsOutput = 'assistants_output',\n}\n\nexport const defaultOrderQuery: {\n  order: 'desc';\n  limit: 100;\n} = {\n  order: 'desc',\n  limit: 100,\n};\n\nexport enum AssistantStreamEvents {\n  ThreadCreated = 'thread.created',\n  ThreadRunCreated = 'thread.run.created',\n  ThreadRunQueued = 'thread.run.queued',\n  ThreadRunInProgress = 'thread.run.in_progress',\n  ThreadRunRequiresAction = 'thread.run.requires_action',\n  ThreadRunCompleted = 'thread.run.completed',\n  ThreadRunFailed = 'thread.run.failed',\n  ThreadRunCancelling = 'thread.run.cancelling',\n  ThreadRunCancelled = 'thread.run.cancelled',\n  ThreadRunExpired = 'thread.run.expired',\n  ThreadRunStepCreated = 'thread.run.step.created',\n  ThreadRunStepInProgress = 'thread.run.step.in_progress',\n  ThreadRunStepCompleted = 'thread.run.step.completed',\n  ThreadRunStepFailed = 'thread.run.step.failed',\n  ThreadRunStepCancelled = 'thread.run.step.cancelled',\n  ThreadRunStepExpired = 'thread.run.step.expired',\n  ThreadRunStepDelta = 'thread.run.step.delta',\n  ThreadMessageCreated = 'thread.message.created',\n  ThreadMessageInProgress = 'thread.message.in_progress',\n  ThreadMessageCompleted = 'thread.message.completed',\n  ThreadMessageIncomplete = 'thread.message.incomplete',\n  ThreadMessageDelta = 'thread.message.delta',\n  ErrorEvent = 'error',\n}\n","import { z } from 'zod';\n\nexport type TFeedbackRating = 'thumbsUp' | 'thumbsDown';\nexport const FEEDBACK_RATINGS = ['thumbsUp', 'thumbsDown'] as const;\n\nexport const FEEDBACK_REASON_KEYS = [\n  // Down\n  'not_matched',\n  'inaccurate',\n  'bad_style',\n  'missing_image',\n  'unjustified_refusal',\n  'not_helpful',\n  'other',\n  // Up\n  'accurate_reliable',\n  'creative_solution',\n  'clear_well_written',\n  'attention_to_detail',\n] as const;\n\nexport type TFeedbackTagKey = (typeof FEEDBACK_REASON_KEYS)[number];\n\nexport interface TFeedbackTag {\n  key: TFeedbackTagKey;\n  label: string;\n  direction: TFeedbackRating;\n  icon: string;\n}\n\n// --- Tag Registry ---\nexport const FEEDBACK_TAGS: TFeedbackTag[] = [\n  // Thumbs Down\n  {\n    key: 'not_matched',\n    label: 'com_ui_feedback_tag_not_matched',\n    direction: 'thumbsDown',\n    icon: 'AlertCircle',\n  },\n  {\n    key: 'inaccurate',\n    label: 'com_ui_feedback_tag_inaccurate',\n    direction: 'thumbsDown',\n    icon: 'AlertCircle',\n  },\n  {\n    key: 'bad_style',\n    label: 'com_ui_feedback_tag_bad_style',\n    direction: 'thumbsDown',\n    icon: 'PenTool',\n  },\n  {\n    key: 'missing_image',\n    label: 'com_ui_feedback_tag_missing_image',\n    direction: 'thumbsDown',\n    icon: 'ImageOff',\n  },\n  {\n    key: 'unjustified_refusal',\n    label: 'com_ui_feedback_tag_unjustified_refusal',\n    direction: 'thumbsDown',\n    icon: 'Ban',\n  },\n  {\n    key: 'not_helpful',\n    label: 'com_ui_feedback_tag_not_helpful',\n    direction: 'thumbsDown',\n    icon: 'ThumbsDown',\n  },\n  {\n    key: 'other',\n    label: 'com_ui_feedback_tag_other',\n    direction: 'thumbsDown',\n    icon: 'HelpCircle',\n  },\n  // Thumbs Up\n  {\n    key: 'accurate_reliable',\n    label: 'com_ui_feedback_tag_accurate_reliable',\n    direction: 'thumbsUp',\n    icon: 'CheckCircle',\n  },\n  {\n    key: 'creative_solution',\n    label: 'com_ui_feedback_tag_creative_solution',\n    direction: 'thumbsUp',\n    icon: 'Lightbulb',\n  },\n  {\n    key: 'clear_well_written',\n    label: 'com_ui_feedback_tag_clear_well_written',\n    direction: 'thumbsUp',\n    icon: 'PenTool',\n  },\n  {\n    key: 'attention_to_detail',\n    label: 'com_ui_feedback_tag_attention_to_detail',\n    direction: 'thumbsUp',\n    icon: 'Search',\n  },\n];\n\nexport function getTagsForRating(rating: TFeedbackRating): TFeedbackTag[] {\n  return FEEDBACK_TAGS.filter((tag) => tag.direction === rating);\n}\n\nexport const feedbackTagKeySchema = z.enum(FEEDBACK_REASON_KEYS);\nexport const feedbackRatingSchema = z.enum(FEEDBACK_RATINGS);\n\nexport const feedbackSchema = z.object({\n  rating: feedbackRatingSchema,\n  tag: feedbackTagKeySchema,\n  text: z.string().max(1024).optional(),\n});\n\nexport type TMinimalFeedback = z.infer<typeof feedbackSchema>;\n\nexport type TFeedback = {\n  rating: TFeedbackRating;\n  tag: TFeedbackTag | undefined;\n  text?: string;\n};\n\nexport function toMinimalFeedback(feedback: TFeedback | undefined): TMinimalFeedback | undefined {\n  if (!feedback?.rating || !feedback?.tag || !feedback.tag.key) {\n    return undefined;\n  }\n\n  return {\n    rating: feedback.rating,\n    tag: feedback.tag.key,\n    text: feedback.text,\n  };\n}\n\nexport function getTagByKey(key: TFeedbackTagKey | undefined): TFeedbackTag | undefined {\n  if (!key) {\n    return undefined;\n  }\n  return FEEDBACK_TAGS.find((tag) => tag.key === key);\n}\n","import { z } from 'zod';\nimport { Tools } from './types/assistants';\nimport type { TMessageContentParts, FunctionTool, FunctionToolCall } from './types/assistants';\nimport { TFeedback, feedbackSchema } from './feedback';\nimport type { SearchResultData } from './types/web';\nimport type { TFile } from './types/files';\n\nexport const isUUID = z.string().uuid();\n\nexport enum AuthType {\n  OVERRIDE_AUTH = 'override_auth',\n  USER_PROVIDED = 'user_provided',\n  SYSTEM_DEFINED = 'system_defined',\n}\n\nexport const authTypeSchema = z.nativeEnum(AuthType);\n\nexport enum EModelEndpoint {\n  azureOpenAI = 'azureOpenAI',\n  openAI = 'openAI',\n  google = 'google',\n  anthropic = 'anthropic',\n  assistants = 'assistants',\n  azureAssistants = 'azureAssistants',\n  agents = 'agents',\n  custom = 'custom',\n  bedrock = 'bedrock',\n  /** @deprecated */\n  chatGPTBrowser = 'chatGPTBrowser',\n  /** @deprecated */\n  gptPlugins = 'gptPlugins',\n}\n\nexport const paramEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.agents,\n  EModelEndpoint.openAI,\n  EModelEndpoint.bedrock,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.google,\n]);\n\nexport enum BedrockProviders {\n  AI21 = 'ai21',\n  Amazon = 'amazon',\n  Anthropic = 'anthropic',\n  Cohere = 'cohere',\n  Meta = 'meta',\n  MistralAI = 'mistral',\n  StabilityAI = 'stability',\n  DeepSeek = 'deepseek',\n}\n\nexport const getModelKey = (endpoint: EModelEndpoint | string, model: string) => {\n  if (endpoint === EModelEndpoint.bedrock) {\n    const parts = model.split('.');\n    const provider = [parts[0], parts[1]].find((part) =>\n      Object.values(BedrockProviders).includes(part as BedrockProviders),\n    );\n    return (provider ?? parts[0]) as BedrockProviders;\n  }\n  return model;\n};\n\nexport const getSettingsKeys = (endpoint: EModelEndpoint | string, model: string) => {\n  const endpointKey = endpoint;\n  const modelKey = getModelKey(endpointKey, model);\n  const combinedKey = `${endpointKey}-${modelKey}`;\n  return [combinedKey, endpointKey];\n};\n\nexport type AssistantsEndpoint = EModelEndpoint.assistants | EModelEndpoint.azureAssistants;\n\nexport const isAssistantsEndpoint = (_endpoint?: AssistantsEndpoint | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint.toLowerCase().endsWith(EModelEndpoint.assistants);\n};\n\nexport type AgentProvider = Exclude<keyof typeof EModelEndpoint, EModelEndpoint.agents> | string;\n\nexport const isAgentsEndpoint = (_endpoint?: EModelEndpoint.agents | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint === EModelEndpoint.agents;\n};\n\nexport const isParamEndpoint = (\n  endpoint: EModelEndpoint | string,\n  endpointType?: EModelEndpoint | string,\n): boolean => {\n  if (paramEndpoints.has(endpoint)) {\n    return true;\n  }\n\n  if (endpointType != null) {\n    return paramEndpoints.has(endpointType);\n  }\n\n  return false;\n};\n\nexport enum ImageDetail {\n  low = 'low',\n  auto = 'auto',\n  high = 'high',\n}\n\nexport enum ReasoningEffort {\n  none = '',\n  minimal = 'minimal',\n  low = 'low',\n  medium = 'medium',\n  high = 'high',\n}\n\nexport enum ReasoningSummary {\n  none = '',\n  auto = 'auto',\n  concise = 'concise',\n  detailed = 'detailed',\n}\n\nexport enum Verbosity {\n  none = '',\n  low = 'low',\n  medium = 'medium',\n  high = 'high',\n}\n\nexport const imageDetailNumeric = {\n  [ImageDetail.low]: 0,\n  [ImageDetail.auto]: 1,\n  [ImageDetail.high]: 2,\n};\n\nexport const imageDetailValue = {\n  0: ImageDetail.low,\n  1: ImageDetail.auto,\n  2: ImageDetail.high,\n};\n\nexport const eImageDetailSchema = z.nativeEnum(ImageDetail);\nexport const eReasoningEffortSchema = z.nativeEnum(ReasoningEffort);\nexport const eReasoningSummarySchema = z.nativeEnum(ReasoningSummary);\nexport const eVerbositySchema = z.nativeEnum(Verbosity);\n\nexport const defaultAssistantFormValues = {\n  assistant: '',\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  conversation_starters: [],\n  model: '',\n  functions: [],\n  code_interpreter: false,\n  image_vision: false,\n  retrieval: false,\n  append_current_datetime: false,\n};\n\nexport const defaultAgentFormValues = {\n  agent: {},\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  model: '',\n  model_parameters: {},\n  tools: [],\n  provider: {},\n  projectIds: [],\n  artifacts: '',\n  /** @deprecated Use ACL permissions instead */\n  isCollaborative: false,\n  recursion_limit: undefined,\n  [Tools.execute_code]: false,\n  [Tools.file_search]: false,\n  [Tools.web_search]: false,\n  category: 'general',\n  support_contact: {\n    name: '',\n    email: '',\n  },\n};\n\nexport const ImageVisionTool: FunctionTool = {\n  type: Tools.function,\n  [Tools.function]: {\n    name: 'image_vision',\n    description: 'Get detailed text descriptions for all current image attachments.',\n    parameters: {\n      type: 'object',\n      properties: {},\n      required: [],\n    },\n  },\n};\n\nexport const isImageVisionTool = (tool: FunctionTool | FunctionToolCall) =>\n  tool.type === 'function' && tool.function?.name === ImageVisionTool.function?.name;\n\nexport const openAISettings = {\n  model: {\n    default: 'gpt-4o-mini' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  top_p: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  presence_penalty: {\n    min: -2 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  frequency_penalty: {\n    min: -2 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto as const,\n    min: 0 as const,\n    max: 2 as const,\n    step: 1 as const,\n  },\n};\n\nexport const googleSettings = {\n  model: {\n    default: 'gemini-1.5-flash-latest' as const,\n  },\n  maxOutputTokens: {\n    min: 1 as const,\n    max: 64000 as const,\n    step: 1 as const,\n    default: 8192 as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  topP: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 0.95 as const,\n  },\n  topK: {\n    min: 1 as const,\n    max: 40 as const,\n    step: 1 as const,\n    default: 40 as const,\n  },\n  thinking: {\n    default: true as const,\n  },\n  thinkingBudget: {\n    min: -1 as const,\n    max: 32768 as const,\n    step: 1 as const,\n    /** `-1` = Dynamic Thinking, meaning the model will adjust\n     * the budget based on the complexity of the request.\n     */\n    default: -1 as const,\n  },\n};\n\nconst ANTHROPIC_MAX_OUTPUT = 128000 as const;\nconst DEFAULT_MAX_OUTPUT = 8192 as const;\nconst LEGACY_ANTHROPIC_MAX_OUTPUT = 4096 as const;\nexport const anthropicSettings = {\n  model: {\n    default: 'claude-3-5-sonnet-latest' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  promptCache: {\n    default: true as const,\n  },\n  thinking: {\n    default: true as const,\n  },\n  thinkingBudget: {\n    min: 1024 as const,\n    step: 100 as const,\n    max: 200000 as const,\n    default: 2000 as const,\n  },\n  maxOutputTokens: {\n    min: 1 as const,\n    max: ANTHROPIC_MAX_OUTPUT,\n    step: 1 as const,\n    default: DEFAULT_MAX_OUTPUT,\n    reset: (modelName: string) => {\n      if (/claude-3[-.]5-sonnet/.test(modelName) || /claude-3[-.]7/.test(modelName)) {\n        return DEFAULT_MAX_OUTPUT;\n      }\n\n      return 4096;\n    },\n    set: (value: number, modelName: string) => {\n      if (\n        !(/claude-3[-.]5-sonnet/.test(modelName) || /claude-3[-.]7/.test(modelName)) &&\n        value > LEGACY_ANTHROPIC_MAX_OUTPUT\n      ) {\n        return LEGACY_ANTHROPIC_MAX_OUTPUT;\n      }\n\n      return value;\n    },\n  },\n  topP: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 0.7 as const,\n  },\n  topK: {\n    min: 1 as const,\n    max: 40 as const,\n    step: 1 as const,\n    default: 5 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  legacy: {\n    maxOutputTokens: {\n      min: 1 as const,\n      max: LEGACY_ANTHROPIC_MAX_OUTPUT,\n      step: 1 as const,\n      default: LEGACY_ANTHROPIC_MAX_OUTPUT,\n    },\n  },\n  web_search: {\n    default: false as const,\n  },\n};\n\nexport const agentsSettings = {\n  model: {\n    default: 'gpt-3.5-turbo-test' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  top_p: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  presence_penalty: {\n    min: -2 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  frequency_penalty: {\n    min: -2 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto as const,\n  },\n};\n\nexport const endpointSettings = {\n  [EModelEndpoint.openAI]: openAISettings,\n  [EModelEndpoint.google]: googleSettings,\n  [EModelEndpoint.anthropic]: anthropicSettings,\n  [EModelEndpoint.agents]: agentsSettings,\n  [EModelEndpoint.bedrock]: agentsSettings,\n};\n\nconst google = endpointSettings[EModelEndpoint.google];\n\nexport const eModelEndpointSchema = z.nativeEnum(EModelEndpoint);\n\nexport const extendedModelEndpointSchema = z.union([eModelEndpointSchema, z.string()]);\n\nexport const tPluginAuthConfigSchema = z.object({\n  authField: z.string(),\n  label: z.string(),\n  description: z.string(),\n});\n\nexport type TPluginAuthConfig = z.infer<typeof tPluginAuthConfigSchema>;\n\nexport const tPluginSchema = z.object({\n  name: z.string(),\n  pluginKey: z.string(),\n  description: z.string().optional(),\n  icon: z.string().optional(),\n  authConfig: z.array(tPluginAuthConfigSchema).optional(),\n  authenticated: z.boolean().optional(),\n  chatMenu: z.boolean().optional(),\n  isButton: z.boolean().optional(),\n  toolkit: z.boolean().optional(),\n});\n\nexport type TPlugin = z.infer<typeof tPluginSchema>;\n\nexport type TInput = {\n  inputStr: string;\n};\n\nexport type TResPlugin = {\n  plugin: string;\n  input: string;\n  thought: string;\n  loading?: boolean;\n  outputs?: string;\n  latest?: string;\n  inputs?: TInput[];\n};\n\nexport const tExampleSchema = z.object({\n  input: z.object({\n    content: z.string(),\n  }),\n  output: z.object({\n    content: z.string(),\n  }),\n});\n\nexport type TExample = z.infer<typeof tExampleSchema>;\n\nexport enum EAgent {\n  functions = 'functions',\n  classic = 'classic',\n}\n\nexport const agentOptionSettings = {\n  model: {\n    default: 'gpt-4o-mini',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0,\n  },\n  agent: {\n    default: EAgent.functions,\n    options: [EAgent.functions, EAgent.classic],\n  },\n  skipCompletion: {\n    default: true,\n  },\n};\n\nexport const eAgentOptionsSchema = z.nativeEnum(EAgent);\n\nexport const tAgentOptionsSchema = z.object({\n  agent: z.string().default(EAgent.functions),\n  skipCompletion: z.boolean().default(agentOptionSettings.skipCompletion.default),\n  model: z.string(),\n  temperature: z.number().default(agentOptionSettings.temperature.default),\n});\n\nexport const tMessageSchema = z.object({\n  messageId: z.string(),\n  endpoint: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  conversationId: z.string().nullable(),\n  parentMessageId: z.string().nullable(),\n  responseMessageId: z.string().nullable().optional(),\n  overrideParentMessageId: z.string().nullable().optional(),\n  bg: z.string().nullable().optional(),\n  model: z.string().nullable().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  sender: z.string().optional(),\n  text: z.string(),\n  /** @deprecated */\n  generation: z.string().nullable().optional(),\n  isCreatedByUser: z.boolean(),\n  error: z.boolean().optional(),\n  clientTimestamp: z.string().optional(),\n  createdAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  updatedAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  current: z.boolean().optional(),\n  unfinished: z.boolean().optional(),\n  searchResult: z.boolean().optional(),\n  finish_reason: z.string().optional(),\n  /* assistant */\n  thread_id: z.string().optional(),\n  /* frontend components */\n  iconURL: z.string().nullable().optional(),\n  feedback: feedbackSchema.optional(),\n});\n\nexport type MemoryArtifact = {\n  key: string;\n  value?: string;\n  tokenCount?: number;\n  type: 'update' | 'delete' | 'error';\n};\n\nexport type TAttachmentMetadata = {\n  type?: Tools;\n  messageId: string;\n  toolCallId: string;\n  [Tools.web_search]?: SearchResultData;\n  [Tools.file_search]?: SearchResultData;\n  [Tools.memory]?: MemoryArtifact;\n};\n\nexport type TAttachment =\n  | (TFile & TAttachmentMetadata)\n  | (Pick<TFile, 'filename' | 'filepath' | 'conversationId'> & {\n      expiresAt: number;\n    } & TAttachmentMetadata);\n\nexport type TMessage = z.input<typeof tMessageSchema> & {\n  children?: TMessage[];\n  plugin?: TResPlugin | null;\n  plugins?: TResPlugin[];\n  content?: TMessageContentParts[];\n  files?: Partial<TFile>[];\n  depth?: number;\n  siblingIndex?: number;\n  attachments?: TAttachment[];\n  clientTimestamp?: string;\n  feedback?: TFeedback;\n};\n\nexport const coerceNumber = z.union([z.number(), z.string()]).transform((val) => {\n  if (typeof val === 'string') {\n    return val.trim() === '' ? undefined : parseFloat(val);\n  }\n  return val;\n});\n\ntype DocumentTypeValue =\n  | null\n  | boolean\n  | number\n  | string\n  | DocumentTypeValue[]\n  | { [key: string]: DocumentTypeValue };\n\nconst DocumentType: z.ZodType<DocumentTypeValue> = z.lazy(() =>\n  z.union([\n    z.null(),\n    z.boolean(),\n    z.number(),\n    z.string(),\n    z.array(z.lazy(() => DocumentType)),\n    z.record(z.lazy(() => DocumentType)),\n  ]),\n);\n\nexport const tConversationSchema = z.object({\n  conversationId: z.string().nullable(),\n  endpoint: eModelEndpointSchema.nullable(),\n  endpointType: eModelEndpointSchema.nullable().optional(),\n  isArchived: z.boolean().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  user: z.string().optional(),\n  messages: z.array(z.string()).optional(),\n  tools: z.union([z.array(tPluginSchema), z.array(z.string())]).optional(),\n  modelLabel: z.string().nullable().optional(),\n  userLabel: z.string().optional(),\n  model: z.string().nullable().optional(),\n  promptPrefix: z.string().nullable().optional(),\n  temperature: z.number().optional(),\n  topP: z.number().optional(),\n  topK: z.number().optional(),\n  top_p: z.number().optional(),\n  frequency_penalty: z.number().optional(),\n  presence_penalty: z.number().optional(),\n  parentMessageId: z.string().optional(),\n  maxOutputTokens: coerceNumber.optional(),\n  maxContextTokens: coerceNumber.optional(),\n  max_tokens: coerceNumber.optional(),\n  /* Anthropic */\n  promptCache: z.boolean().optional(),\n  system: z.string().optional(),\n  thinking: z.boolean().optional(),\n  thinkingBudget: coerceNumber.optional(),\n  /* artifacts */\n  artifacts: z.string().optional(),\n  /* google */\n  context: z.string().nullable().optional(),\n  examples: z.array(tExampleSchema).optional(),\n  /* DB */\n  tags: z.array(z.string()).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  /* Files */\n  resendFiles: z.boolean().optional(),\n  file_ids: z.array(z.string()).optional(),\n  /* vision */\n  imageDetail: eImageDetailSchema.optional(),\n  /* OpenAI: Reasoning models only */\n  reasoning_effort: eReasoningEffortSchema.optional().nullable(),\n  reasoning_summary: eReasoningSummarySchema.optional().nullable(),\n  /* OpenAI: Verbosity control */\n  verbosity: eVerbositySchema.optional().nullable(),\n  /* OpenAI: use Responses API */\n  useResponsesApi: z.boolean().optional(),\n  /* OpenAI Responses API / Anthropic API / Google API */\n  web_search: z.boolean().optional(),\n  /* disable streaming */\n  disableStreaming: z.boolean().optional(),\n  /* assistant */\n  assistant_id: z.string().optional(),\n  /* agents */\n  agent_id: z.string().optional(),\n  /* AWS Bedrock */\n  region: z.string().optional(),\n  maxTokens: coerceNumber.optional(),\n  additionalModelRequestFields: DocumentType.optional(),\n  /* assistants */\n  instructions: z.string().optional(),\n  additional_instructions: z.string().optional(),\n  append_current_datetime: z.boolean().optional(),\n  /** Used to overwrite active conversation settings when saving a Preset */\n  presetOverride: z.record(z.unknown()).optional(),\n  stop: z.array(z.string()).optional(),\n  /* frontend components */\n  greeting: z.string().optional(),\n  spec: z.string().nullable().optional(),\n  iconURL: z.string().nullable().optional(),\n  /* temporary chat */\n  expiredAt: z.string().nullable().optional(),\n  /** @deprecated */\n  resendImages: z.boolean().optional(),\n  /** @deprecated */\n  agentOptions: tAgentOptionsSchema.nullable().optional(),\n  /** @deprecated Prefer `modelLabel` over `chatGptLabel` */\n  chatGptLabel: z.string().nullable().optional(),\n});\n\nexport const tPresetSchema = tConversationSchema\n  .omit({\n    conversationId: true,\n    createdAt: true,\n    updatedAt: true,\n    title: true,\n  })\n  .merge(\n    z.object({\n      conversationId: z.string().nullable().optional(),\n      presetId: z.string().nullable().optional(),\n      title: z.string().nullable().optional(),\n      defaultPreset: z.boolean().optional(),\n      order: z.number().optional(),\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport const tConvoUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n    createdAt: z.string().optional(),\n    updatedAt: z.string().optional(),\n  }),\n);\n\nexport const tQueryParamsSchema = tConversationSchema\n  .pick({\n    // librechat settings\n    /** The model spec to be used */\n    spec: true,\n    /** The AI context window, overrides the system-defined window as determined by `model` value */\n    maxContextTokens: true,\n    /**\n     * Whether or not to re-submit files from previous messages on subsequent messages\n     * */\n    resendFiles: true,\n    /**\n     * @endpoints openAI, custom, azureOpenAI\n     *\n     * System parameter that only affects the above endpoints.\n     * Image detail for re-sizing according to OpenAI spec, defaults to `auto`\n     * */\n    imageDetail: true,\n    /**\n     * AKA Custom Instructions, dynamically added to chat history as a system message;\n     * for `bedrock` endpoint, this is used as the `system` model param if the provider uses it;\n     * for `assistants` endpoint, this is used as the `additional_instructions` model param:\n     * https://platform.openai.com/docs/api-reference/runs/createRun#runs-createrun-additional_instructions\n     * ; otherwise, a message with `system` role is added to the chat history\n     */\n    promptPrefix: true,\n    // Model parameters\n    /** @endpoints openAI, custom, azureOpenAI, google, anthropic, assistants, azureAssistants, bedrock */\n    model: true,\n    /** @endpoints openAI, custom, azureOpenAI, google, anthropic, bedrock */\n    temperature: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    presence_penalty: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    frequency_penalty: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    stop: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    top_p: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    max_tokens: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    reasoning_effort: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    reasoning_summary: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    verbosity: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    useResponsesApi: true,\n    /** @endpoints openAI, anthropic, google */\n    web_search: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    disableStreaming: true,\n    /** @endpoints google, anthropic, bedrock */\n    topP: true,\n    /** @endpoints google, anthropic */\n    topK: true,\n    /** @endpoints google, anthropic */\n    maxOutputTokens: true,\n    /** @endpoints anthropic */\n    promptCache: true,\n    thinking: true,\n    thinkingBudget: true,\n    /** @endpoints bedrock */\n    region: true,\n    /** @endpoints bedrock */\n    maxTokens: true,\n    /** @endpoints agents */\n    agent_id: true,\n    /** @endpoints assistants, azureAssistants */\n    assistant_id: true,\n    /** @endpoints assistants, azureAssistants */\n    append_current_datetime: true,\n    /**\n     * @endpoints assistants, azureAssistants\n     *\n     * Overrides existing assistant instructions, only used for the current run:\n     * https://platform.openai.com/docs/api-reference/runs/createRun#runs-createrun-instructions\n     * */\n    instructions: true,\n  })\n  .merge(\n    z.object({\n      /** @endpoints openAI, custom, azureOpenAI, google, anthropic, assistants, azureAssistants, bedrock, agents */\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport type TPreset = z.infer<typeof tPresetSchema>;\n\nexport type TSetOption = (\n  param: number | string,\n) => (newValue: number | string | boolean | string[] | Partial<TPreset>) => void;\n\nexport type TConversation = z.infer<typeof tConversationSchema> & {\n  presetOverride?: Partial<TPreset>;\n  disableParams?: boolean;\n};\n\nexport const tSharedLinkSchema = z.object({\n  conversationId: z.string(),\n  shareId: z.string(),\n  messages: z.array(z.string()),\n  isPublic: z.boolean(),\n  title: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\nexport type TSharedLink = z.infer<typeof tSharedLinkSchema>;\n\nexport const tConversationTagSchema = z.object({\n  _id: z.string(),\n  user: z.string(),\n  tag: z.string(),\n  description: z.string().optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  count: z.number(),\n  position: z.number(),\n});\nexport type TConversationTag = z.infer<typeof tConversationTagSchema>;\n\nexport const googleBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  promptPrefix: true,\n  examples: true,\n  temperature: true,\n  maxOutputTokens: true,\n  artifacts: true,\n  topP: true,\n  topK: true,\n  thinking: true,\n  thinkingBudget: true,\n  web_search: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n});\n\nexport const googleSchema = googleBaseSchema\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj))\n  .catch(() => ({}));\n\n/**\n   * TODO: Map the following fields:\n  - presence_penalty -> presencePenalty\n  - frequency_penalty -> frequencyPenalty\n  - stop -> stopSequences\n   */\nexport const googleGenConfigSchema = z\n  .object({\n    maxOutputTokens: coerceNumber.optional(),\n    temperature: coerceNumber.optional(),\n    topP: coerceNumber.optional(),\n    topK: coerceNumber.optional(),\n    presencePenalty: coerceNumber.optional(),\n    frequencyPenalty: coerceNumber.optional(),\n    stopSequences: z.array(z.string()).optional(),\n    thinkingConfig: z\n      .object({\n        includeThoughts: z.boolean().optional(),\n        thinkingBudget: coerceNumber.optional(),\n      })\n      .optional(),\n    web_search: z.boolean().optional(),\n  })\n  .strip()\n  .optional();\n\nconst gptPluginsBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  chatGptLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  artifacts: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  tools: true,\n  agentOptions: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n});\n\nexport const gptPluginsSchema = gptPluginsBaseSchema\n  .transform((obj) => {\n    const result = {\n      ...obj,\n      model: obj.model ?? 'gpt-3.5-turbo',\n      chatGptLabel: obj.chatGptLabel ?? obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? 0.8,\n      top_p: obj.top_p ?? 1,\n      presence_penalty: obj.presence_penalty ?? 0,\n      frequency_penalty: obj.frequency_penalty ?? 0,\n      tools: obj.tools ?? [],\n      agentOptions: obj.agentOptions ?? {\n        agent: EAgent.functions,\n        skipCompletion: true,\n        model: 'gpt-3.5-turbo',\n        temperature: 0,\n      },\n      iconURL: obj.iconURL ?? undefined,\n      greeting: obj.greeting ?? undefined,\n      spec: obj.spec ?? undefined,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    };\n\n    if (obj.modelLabel != null && obj.modelLabel !== '') {\n      result.modelLabel = null;\n    }\n\n    return result;\n  })\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 0.8,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    tools: [],\n    agentOptions: {\n      agent: EAgent.functions,\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport function removeNullishValues<T extends Record<string, unknown>>(\n  obj: T,\n  removeEmptyStrings?: boolean,\n): Partial<T> {\n  const newObj: Partial<T> = { ...obj };\n\n  (Object.keys(newObj) as Array<keyof T>).forEach((key) => {\n    const value = newObj[key];\n    if (value === undefined || value === null) {\n      delete newObj[key];\n    }\n    if (removeEmptyStrings && typeof value === 'string' && value === '') {\n      delete newObj[key];\n    }\n  });\n\n  return newObj;\n}\n\nconst assistantBaseSchema = tConversationSchema.pick({\n  model: true,\n  assistant_id: true,\n  instructions: true,\n  artifacts: true,\n  promptPrefix: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  append_current_datetime: true,\n});\n\nexport const assistantSchema = assistantBaseSchema\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? openAISettings.model.default,\n    assistant_id: obj.assistant_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    spec: obj.spec ?? undefined,\n    append_current_datetime: obj.append_current_datetime ?? false,\n  }))\n  .catch(() => ({\n    model: openAISettings.model.default,\n    assistant_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    append_current_datetime: false,\n  }));\n\nconst compactAssistantBaseSchema = tConversationSchema.pick({\n  model: true,\n  assistant_id: true,\n  instructions: true,\n  promptPrefix: true,\n  artifacts: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n});\n\nexport const compactAssistantSchema = compactAssistantBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const agentsBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  temperature: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  resendFiles: true,\n  imageDetail: true,\n  agent_id: true,\n  instructions: true,\n  promptPrefix: true,\n  iconURL: true,\n  greeting: true,\n  maxContextTokens: true,\n});\n\nexport const agentsSchema = agentsBaseSchema\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? agentsSettings.model.default,\n    modelLabel: obj.modelLabel ?? null,\n    temperature: obj.temperature ?? 1,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    resendFiles:\n      typeof obj.resendFiles === 'boolean' ? obj.resendFiles : agentsSettings.resendFiles.default,\n    imageDetail: obj.imageDetail ?? ImageDetail.auto,\n    agent_id: obj.agent_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    maxContextTokens: obj.maxContextTokens ?? undefined,\n  }))\n  .catch(() => ({\n    model: agentsSettings.model.default,\n    modelLabel: null,\n    temperature: 1,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    resendFiles: agentsSettings.resendFiles.default,\n    imageDetail: ImageDetail.auto,\n    agent_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport const openAIBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  chatGptLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  resendFiles: true,\n  artifacts: true,\n  imageDetail: true,\n  stop: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n  max_tokens: true,\n  reasoning_effort: true,\n  reasoning_summary: true,\n  verbosity: true,\n  useResponsesApi: true,\n  web_search: true,\n  disableStreaming: true,\n});\n\nexport const openAISchema = openAIBaseSchema\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj, true))\n  .catch(() => ({}));\n\nexport const compactGoogleSchema = googleBaseSchema\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.temperature === google.temperature.default) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === google.maxOutputTokens.default) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === google.topP.default) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === google.topK.default) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const anthropicBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  maxOutputTokens: true,\n  topP: true,\n  topK: true,\n  resendFiles: true,\n  promptCache: true,\n  thinking: true,\n  thinkingBudget: true,\n  artifacts: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n  web_search: true,\n});\n\nexport const anthropicSchema = anthropicBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactPluginsSchema = gptPluginsBaseSchema\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.modelLabel === null) {\n      delete newObj.modelLabel;\n    }\n    if (newObj.chatGptLabel === null) {\n      delete newObj.chatGptLabel;\n    }\n    if (newObj.promptPrefix === null) {\n      delete newObj.promptPrefix;\n    }\n    if (newObj.temperature === 0.8) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.tools?.length === 0) {\n      delete newObj.tools;\n    }\n\n    if (\n      newObj.agentOptions &&\n      newObj.agentOptions.agent === EAgent.functions &&\n      newObj.agentOptions.skipCompletion === true &&\n      newObj.agentOptions.model === 'gpt-3.5-turbo' &&\n      newObj.agentOptions.temperature === 0\n    ) {\n      delete newObj.agentOptions;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const tBannerSchema = z.object({\n  bannerId: z.string(),\n  message: z.string(),\n  displayFrom: z.string(),\n  displayTo: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  isPublic: z.boolean(),\n});\nexport type TBanner = z.infer<typeof tBannerSchema>;\n\nexport const compactAgentsBaseSchema = tConversationSchema.pick({\n  spec: true,\n  // model: true,\n  iconURL: true,\n  greeting: true,\n  agent_id: true,\n  instructions: true,\n  additional_instructions: true,\n});\n\nexport const compactAgentsSchema = compactAgentsBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n","import { EToolResources } from './assistants';\n\nexport enum FileSources {\n  local = 'local',\n  firebase = 'firebase',\n  azure = 'azure',\n  azure_blob = 'azure_blob',\n  openai = 'openai',\n  s3 = 's3',\n  vectordb = 'vectordb',\n  execute_code = 'execute_code',\n  mistral_ocr = 'mistral_ocr',\n  azure_mistral_ocr = 'azure_mistral_ocr',\n  vertexai_mistral_ocr = 'vertexai_mistral_ocr',\n  text = 'text',\n}\n\nexport const checkOpenAIStorage = (source: string) =>\n  source === FileSources.openai || source === FileSources.azure;\n\nexport enum FileContext {\n  avatar = 'avatar',\n  unknown = 'unknown',\n  agents = 'agents',\n  assistants = 'assistants',\n  execute_code = 'execute_code',\n  image_generation = 'image_generation',\n  assistants_output = 'assistants_output',\n  message_attachment = 'message_attachment',\n  filename = 'filename',\n  updatedAt = 'updatedAt',\n  source = 'source',\n  filterSource = 'filterSource',\n  context = 'context',\n  bytes = 'bytes',\n}\n\nexport type EndpointFileConfig = {\n  disabled?: boolean;\n  fileLimit?: number;\n  fileSizeLimit?: number;\n  totalSizeLimit?: number;\n  supportedMimeTypes?: RegExp[];\n};\n\nexport type FileConfig = {\n  endpoints: {\n    [key: string]: EndpointFileConfig;\n  };\n  serverFileSizeLimit?: number;\n  avatarSizeLimit?: number;\n  clientImageResize?: {\n    enabled?: boolean;\n    maxWidth?: number;\n    maxHeight?: number;\n    quality?: number;\n  };\n  checkType?: (fileType: string, supportedTypes: RegExp[]) => boolean;\n};\n\nexport type TFile = {\n  _id?: string;\n  __v?: number;\n  user: string;\n  conversationId?: string;\n  message?: string;\n  file_id: string;\n  temp_file_id?: string;\n  bytes: number;\n  embedded: boolean;\n  filename: string;\n  filepath: string;\n  object: 'file';\n  type: string;\n  usage: number;\n  context?: FileContext;\n  source?: FileSources;\n  filterSource?: FileSources;\n  width?: number;\n  height?: number;\n  expiresAt?: string | Date;\n  preview?: string;\n  metadata?: { fileIdentifier?: string };\n  createdAt?: string | Date;\n  updatedAt?: string | Date;\n};\n\nexport type TFileUpload = TFile & {\n  temp_file_id: string;\n};\n\nexport type AvatarUploadResponse = {\n  url: string;\n};\n\nexport type SpeechToTextResponse = {\n  text: string;\n};\n\nexport type VoiceResponse = string[];\n\nexport type UploadMutationOptions = {\n  onSuccess?: (data: TFileUpload, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type UploadAvatarOptions = {\n  onSuccess?: (data: AvatarUploadResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type SpeechToTextOptions = {\n  onSuccess?: (data: SpeechToTextResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type TextToSpeechOptions = {\n  onSuccess?: (data: ArrayBuffer, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type VoiceOptions = {\n  onSuccess?: (data: VoiceResponse, variables: unknown, context?: unknown) => void;\n  onMutate?: () => void | Promise<unknown>;\n  onError?: (error: unknown, variables: unknown, context?: unknown) => void;\n};\n\nexport type DeleteFilesResponse = {\n  message: string;\n  result: Record<string, unknown>;\n};\n\nexport type BatchFile = {\n  file_id: string;\n  filepath: string;\n  embedded: boolean;\n  source: FileSources;\n  temp_file_id?: string;\n};\n\nexport type DeleteFilesBody = {\n  files: BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: EToolResources;\n};\n\nexport type DeleteMutationOptions = {\n  onSuccess?: (data: DeleteFilesResponse, variables: DeleteFilesBody, context?: unknown) => void;\n  onMutate?: (variables: DeleteFilesBody) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: DeleteFilesBody, context?: unknown) => void;\n};\n","import { z } from 'zod';\nimport type { TPreset } from './schemas';\nimport {\n  EModelEndpoint,\n  tPresetSchema,\n  eModelEndpointSchema,\n  AuthType,\n  authTypeSchema,\n} from './schemas';\n\nexport type TModelSpec = {\n  name: string;\n  label: string;\n  preset: TPreset;\n  order?: number;\n  default?: boolean;\n  description?: string;\n  showIconInMenu?: boolean;\n  showIconInHeader?: boolean;\n  iconURL?: string | EModelEndpoint; // Allow using project-included icons\n  authType?: AuthType;\n};\n\nexport const tModelSpecSchema = z.object({\n  name: z.string(),\n  label: z.string(),\n  preset: tPresetSchema,\n  order: z.number().optional(),\n  default: z.boolean().optional(),\n  description: z.string().optional(),\n  showIconInMenu: z.boolean().optional(),\n  showIconInHeader: z.boolean().optional(),\n  iconURL: z.union([z.string(), eModelEndpointSchema]).optional(),\n  authType: authTypeSchema.optional(),\n});\n\nexport const specsConfigSchema = z.object({\n  enforce: z.boolean().default(false),\n  prioritize: z.boolean().default(true),\n  list: z.array(tModelSpecSchema).min(1),\n  addedEndpoints: z.array(z.union([z.string(), eModelEndpointSchema])).optional(),\n});\n\nexport type TSpecsConfig = z.infer<typeof specsConfigSchema>;\n","import { z } from 'zod';\nimport { EModelEndpoint } from './schemas';\nimport type { EndpointFileConfig, FileConfig } from './types/files';\n\nexport const supportsFiles = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.google]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const excelFileTypes = [\n  'application/vnd.ms-excel',\n  'application/msexcel',\n  'application/x-msexcel',\n  'application/x-ms-excel',\n  'application/x-excel',\n  'application/x-dos_ms_excel',\n  'application/xls',\n  'application/x-xls',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\nexport const fullMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'text/vtt',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'image/heic',\n  'image/heif',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  'image/svg',\n  'image/svg+xml',\n  ...excelFileTypes,\n];\n\nexport const codeInterpreterMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'image/heic',\n  'image/heif',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const retrievalMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n];\n\nexport const imageExtRegex = /\\.(jpg|jpeg|png|gif|webp|heic|heif)$/i;\n\nexport const excelMimeTypes =\n  /^application\\/(vnd\\.ms-excel|msexcel|x-msexcel|x-ms-excel|x-excel|x-dos_ms_excel|xls|x-xls|vnd\\.openxmlformats-officedocument\\.spreadsheetml\\.sheet)$/;\n\nexport const textMimeTypes =\n  /^(text\\/(x-c|x-csharp|tab-separated-values|x-c\\+\\+|x-h|x-java|html|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|css|vtt|javascript|csv))$/;\n\nexport const applicationMimeTypes =\n  /^(application\\/(epub\\+zip|csv|json|pdf|x-tar|typescript|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation|spreadsheetml\\.sheet)|xml|zip))$/;\n\nexport const imageMimeTypes = /^image\\/(jpeg|gif|png|webp|heic|heif)$/;\n\nexport const supportedMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n  /** Supported by LC Code Interpreter PAI */\n  /^image\\/(svg|svg\\+xml)$/,\n];\n\nexport const codeInterpreterMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const codeTypeMapping: { [key: string]: string } = {\n  c: 'text/x-c',\n  cs: 'text/x-csharp',\n  cpp: 'text/x-c++',\n  h: 'text/x-h',\n  md: 'text/markdown',\n  php: 'text/x-php',\n  py: 'text/x-python',\n  rb: 'text/x-ruby',\n  tex: 'text/x-tex',\n  js: 'text/javascript',\n  sh: 'application/x-sh',\n  ts: 'application/typescript',\n  tar: 'application/x-tar',\n  zip: 'application/zip',\n  yml: 'application/x-yaml',\n  yaml: 'application/x-yaml',\n  log: 'text/plain',\n  tsv: 'text/tab-separated-values',\n};\n\nexport const retrievalMimeTypes = [\n  /^(text\\/(x-c|x-c\\+\\+|x-h|html|x-java|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|vtt|xml))$/,\n  /^(application\\/(json|pdf|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation)))$/,\n];\n\nexport const megabyte = 1024 * 1024;\n/** Helper function to get megabytes value */\nexport const mbToBytes = (mb: number): number => mb * megabyte;\n\nconst defaultSizeLimit = mbToBytes(512);\nconst assistantsFileConfig = {\n  fileLimit: 10,\n  fileSizeLimit: defaultSizeLimit,\n  totalSizeLimit: defaultSizeLimit,\n  supportedMimeTypes,\n  disabled: false,\n};\n\nexport const fileConfig = {\n  endpoints: {\n    [EModelEndpoint.assistants]: assistantsFileConfig,\n    [EModelEndpoint.azureAssistants]: assistantsFileConfig,\n    [EModelEndpoint.agents]: assistantsFileConfig,\n    default: {\n      fileLimit: 10,\n      fileSizeLimit: defaultSizeLimit,\n      totalSizeLimit: defaultSizeLimit,\n      supportedMimeTypes,\n      disabled: false,\n    },\n  },\n  serverFileSizeLimit: defaultSizeLimit,\n  avatarSizeLimit: mbToBytes(2),\n  clientImageResize: {\n    enabled: false,\n    maxWidth: 1900,\n    maxHeight: 1900,\n    quality: 0.92,\n  },\n  checkType: function (fileType: string, supportedTypes: RegExp[] = supportedMimeTypes) {\n    return supportedTypes.some((regex) => regex.test(fileType));\n  },\n};\n\nconst supportedMimeTypesSchema = z\n  .array(z.any())\n  .optional()\n  .refine(\n    (mimeTypes) => {\n      if (!mimeTypes) {\n        return true;\n      }\n      return mimeTypes.every(\n        (mimeType) => mimeType instanceof RegExp || typeof mimeType === 'string',\n      );\n    },\n    {\n      message: 'Each mimeType must be a string or a RegExp object.',\n    },\n  );\n\nexport const endpointFileConfigSchema = z.object({\n  disabled: z.boolean().optional(),\n  fileLimit: z.number().min(0).optional(),\n  fileSizeLimit: z.number().min(0).optional(),\n  totalSizeLimit: z.number().min(0).optional(),\n  supportedMimeTypes: supportedMimeTypesSchema.optional(),\n});\n\nexport const fileConfigSchema = z.object({\n  endpoints: z.record(endpointFileConfigSchema).optional(),\n  serverFileSizeLimit: z.number().min(0).optional(),\n  avatarSizeLimit: z.number().min(0).optional(),\n  imageGeneration: z\n    .object({\n      percentage: z.number().min(0).max(100).optional(),\n      px: z.number().min(0).optional(),\n    })\n    .optional(),\n  clientImageResize: z\n    .object({\n      enabled: z.boolean().optional(),\n      maxWidth: z.number().min(0).optional(),\n      maxHeight: z.number().min(0).optional(),\n      quality: z.number().min(0).max(1).optional(),\n    })\n    .optional(),\n});\n\n/** Helper function to safely convert string patterns to RegExp objects */\nexport const convertStringsToRegex = (patterns: string[]): RegExp[] =>\n  patterns.reduce((acc: RegExp[], pattern) => {\n    try {\n      const regex = new RegExp(pattern);\n      acc.push(regex);\n    } catch (error) {\n      console.error(`Invalid regex pattern \"${pattern}\" skipped.`, error);\n    }\n    return acc;\n  }, []);\n\nexport function mergeFileConfig(dynamic: z.infer<typeof fileConfigSchema> | undefined): FileConfig {\n  const mergedConfig = fileConfig as FileConfig;\n  if (!dynamic) {\n    return mergedConfig;\n  }\n\n  if (dynamic.serverFileSizeLimit !== undefined) {\n    mergedConfig.serverFileSizeLimit = mbToBytes(dynamic.serverFileSizeLimit);\n  }\n\n  if (dynamic.avatarSizeLimit !== undefined) {\n    mergedConfig.avatarSizeLimit = mbToBytes(dynamic.avatarSizeLimit);\n  }\n\n  // Merge clientImageResize configuration\n  if (dynamic.clientImageResize !== undefined) {\n    mergedConfig.clientImageResize = {\n      ...mergedConfig.clientImageResize,\n      ...dynamic.clientImageResize,\n    };\n  }\n\n  if (!dynamic.endpoints) {\n    return mergedConfig;\n  }\n\n  for (const key in dynamic.endpoints) {\n    const dynamicEndpoint = (dynamic.endpoints as Record<string, EndpointFileConfig>)[key];\n\n    if (!mergedConfig.endpoints[key]) {\n      mergedConfig.endpoints[key] = {};\n    }\n\n    const mergedEndpoint = mergedConfig.endpoints[key];\n\n    if (dynamicEndpoint.disabled === true) {\n      mergedEndpoint.disabled = true;\n      mergedEndpoint.fileLimit = 0;\n      mergedEndpoint.fileSizeLimit = 0;\n      mergedEndpoint.totalSizeLimit = 0;\n      mergedEndpoint.supportedMimeTypes = [];\n      continue;\n    }\n\n    if (dynamicEndpoint.fileSizeLimit !== undefined) {\n      mergedEndpoint.fileSizeLimit = mbToBytes(dynamicEndpoint.fileSizeLimit);\n    }\n\n    if (dynamicEndpoint.totalSizeLimit !== undefined) {\n      mergedEndpoint.totalSizeLimit = mbToBytes(dynamicEndpoint.totalSizeLimit);\n    }\n\n    const configKeys = ['fileLimit'] as const;\n    configKeys.forEach((field) => {\n      if (dynamicEndpoint[field] !== undefined) {\n        mergedEndpoint[field] = dynamicEndpoint[field];\n      }\n    });\n\n    if (dynamicEndpoint.supportedMimeTypes) {\n      mergedEndpoint.supportedMimeTypes = convertStringsToRegex(\n        dynamicEndpoint.supportedMimeTypes as unknown as string[],\n      );\n    }\n  }\n\n  return mergedConfig;\n}\n","/* eslint-disable @typescript-eslint/no-namespace */\nimport { StepTypes, ContentTypes, ToolCallTypes } from './runs';\nimport type { TAttachment, TPlugin } from 'src/schemas';\nimport type { FunctionToolCall } from './assistants';\n\nexport namespace Agents {\n  export type MessageType = 'human' | 'ai' | 'generic' | 'system' | 'function' | 'tool' | 'remove';\n\n  export type ImageDetail = 'auto' | 'low' | 'high';\n\n  export type ReasoningContentText = {\n    type: ContentTypes.THINK;\n    think: string;\n  };\n\n  export type MessageContentText = {\n    type: ContentTypes.TEXT;\n    text: string;\n    tool_call_ids?: string[];\n  };\n\n  export type AgentUpdate = {\n    type: ContentTypes.AGENT_UPDATE;\n    agent_update: {\n      index: number;\n      runId: string;\n      agentId: string;\n    };\n  };\n\n  export type MessageContentImageUrl = {\n    type: ContentTypes.IMAGE_URL;\n    image_url: string | { url: string; detail?: ImageDetail };\n  };\n\n  export type MessageContentComplex =\n    | ReasoningContentText\n    | AgentUpdate\n    | MessageContentText\n    | MessageContentImageUrl\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | (Record<string, any> & { type?: ContentTypes | string })\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | (Record<string, any> & { type?: never });\n\n  export type MessageContent = string | MessageContentComplex[];\n\n  /**\n   * A call to a tool.\n   */\n  export type ToolCall = {\n    /** Type (\"tool_call\") according to Assistants Tool Call Structure */\n    type: ToolCallTypes.TOOL_CALL;\n    /** The name of the tool to be called */\n    name: string;\n\n    /** The arguments to the tool call */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args?: string | Record<string, any>;\n\n    /** If provided, an identifier associated with the tool call */\n    id?: string;\n    /** If provided, the output of the tool call */\n    output?: string;\n    /** Auth URL */\n    auth?: string;\n    /** Expiration time */\n    expires_at?: number;\n  };\n\n  export type ToolEndEvent = {\n    /** The Step Id of the Tool Call */\n    id: string;\n    /** The Completed Tool Call */\n    tool_call?: ToolCall;\n    /** The content index of the tool call */\n    index: number;\n  };\n\n  export type ToolCallContent = {\n    type: ContentTypes.TOOL_CALL;\n    tool_call?: ToolCall;\n  };\n\n  /**\n   * A chunk of a tool call (e.g., as part of a stream).\n   * When merging ToolCallChunks (e.g., via AIMessageChunk.__add__),\n   * all string attributes are concatenated. Chunks are only merged if their\n   * values of `index` are equal and not None.\n   *\n   * @example\n   * ```ts\n   * const leftChunks = [\n   *   {\n   *     name: \"foo\",\n   *     args: '{\"a\":',\n   *     index: 0\n   *   }\n   * ];\n   *\n   * const leftAIMessageChunk = new AIMessageChunk({\n   *   content: \"\",\n   *   tool_call_chunks: leftChunks\n   * });\n   *\n   * const rightChunks = [\n   *   {\n   *     name: undefined,\n   *     args: '1}',\n   *     index: 0\n   *   }\n   * ];\n   *\n   * const rightAIMessageChunk = new AIMessageChunk({\n   *   content: \"\",\n   *   tool_call_chunks: rightChunks\n   * });\n   *\n   * const result = leftAIMessageChunk.concat(rightAIMessageChunk);\n   * // result.tool_call_chunks is equal to:\n   * // [\n   * //   {\n   * //     name: \"foo\",\n   * //     args: '{\"a\":1}'\n   * //     index: 0\n   * //   }\n   * // ]\n   * ```\n   *\n   * @property {string} [name] - If provided, a substring of the name of the tool to be called\n   * @property {string} [args] - If provided, a JSON substring of the arguments to the tool call\n   * @property {string} [id] - If provided, a substring of an identifier for the tool call\n   * @property {number} [index] - If provided, the index of the tool call in a sequence\n   */\n  export type ToolCallChunk = {\n    name?: string;\n\n    args?: string;\n\n    id?: string;\n\n    index?: number;\n\n    type?: 'tool_call_chunk';\n  };\n\n  /** Event names are of the format: on_[runnable_type]_(start|stream|end).\n\n  Runnable types are one of:\n\n  llm - used by non chat models\n  chat_model - used by chat models\n  prompt -- e.g., ChatPromptTemplate\n  tool -- LangChain tools\n  chain - most Runnables are of this type\n  Further, the events are categorized as one of:\n\n  start - when the runnable starts\n  stream - when the runnable is streaming\n  end - when the runnable ends\n  start, stream and end are associated with slightly different data payload.\n\n  Please see the documentation for EventData for more details. */\n  export type EventName = string;\n  export type RunStep = {\n    type: StepTypes;\n    id: string; // #new\n    runId?: string; // #new\n    index: number; // #new\n    stepIndex?: number; // #new\n    stepDetails: StepDetails;\n    usage: null | object;\n  };\n  /**\n   * Represents a run step delta i.e. any changed fields on a run step during\n   * streaming.\n   */\n  export interface RunStepDeltaEvent {\n    /**\n     * The identifier of the run step, which can be referenced in API endpoints.\n     */\n    id: string;\n    /**\n     * The delta containing the fields that have changed on the run step.\n     */\n    delta: ToolCallDelta;\n  }\n  export type StepDetails = MessageCreationDetails | ToolCallsDetails;\n  export type MessageCreationDetails = {\n    type: StepTypes.MESSAGE_CREATION;\n    message_creation: {\n      message_id: string;\n    };\n  };\n  export type ToolCallsDetails = {\n    type: StepTypes.TOOL_CALLS;\n    tool_calls: AgentToolCall[];\n  };\n  export type ToolCallDelta = {\n    type: StepTypes.TOOL_CALLS | string;\n    tool_calls?: ToolCallChunk[];\n    auth?: string;\n    expires_at?: number;\n  };\n  export type AgentToolCall = FunctionToolCall | ToolCall;\n  export interface ExtendedMessageContent {\n    type?: string;\n    text?: string;\n    input?: string;\n    index?: number;\n    id?: string;\n    name?: string;\n  }\n  /**\n   * Represents a message delta i.e. any changed fields on a message during\n   * streaming.\n   */\n  export interface MessageDeltaEvent {\n    /**\n     * The identifier of the message, which can be referenced in API endpoints.\n     */\n    id: string;\n    /**\n     * The delta containing the fields that have changed on the Message.\n     */\n    delta: MessageDelta;\n  }\n  /**\n   * The delta containing the fields that have changed on the Message.\n   */\n  export interface MessageDelta {\n    /**\n     * The content of the message in array of text and/or images.\n     */\n    content?: Agents.MessageContentComplex[];\n  }\n\n  /**\n   * Represents a reasoning delta i.e. any changed fields on a message during\n   * streaming.\n   */\n  export interface ReasoningDeltaEvent {\n    /**\n     * The identifier of the message, which can be referenced in API endpoints.\n     */\n    id: string;\n\n    /**\n     * The delta containing the fields that have changed.\n     */\n    delta: ReasoningDelta;\n  }\n\n  /**\n   * The reasoning delta containing the fields that have changed on the Message.\n   */\n  export interface ReasoningDelta {\n    /**\n     * The content of the message in array of text and/or images.\n     */\n    content?: MessageContentComplex[];\n  }\n\n  export type ReasoningDeltaUpdate = { type: ContentTypes.THINK; think: string };\n  export type ContentType =\n    | ContentTypes.THINK\n    | ContentTypes.TEXT\n    | ContentTypes.IMAGE_URL\n    | string;\n}\n\nexport type ToolCallResult = {\n  user: string;\n  toolId: string;\n  result?: unknown;\n  messageId: string;\n  partIndex?: number;\n  blockIndex?: number;\n  conversationId: string;\n  attachments?: TAttachment[];\n};\n\nexport enum AuthTypeEnum {\n  ServiceHttp = 'service_http',\n  OAuth = 'oauth',\n  None = 'none',\n}\n\nexport enum AuthorizationTypeEnum {\n  Bearer = 'bearer',\n  Basic = 'basic',\n  Custom = 'custom',\n}\n\nexport enum TokenExchangeMethodEnum {\n  DefaultPost = 'default_post',\n  BasicAuthHeader = 'basic_auth_header',\n}\n\nexport type Action = {\n  action_id: string;\n  type?: string;\n  settings?: Record<string, unknown>;\n  metadata: ActionMetadata;\n  version: number | string;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type ActionMetadata = {\n  api_key?: string;\n  auth?: ActionAuth;\n  domain?: string;\n  privacy_policy_url?: string;\n  raw_spec?: string;\n  oauth_client_id?: string;\n  oauth_client_secret?: string;\n};\n\nexport type ActionAuth = {\n  authorization_type?: AuthorizationTypeEnum;\n  custom_auth_header?: string;\n  type?: AuthTypeEnum;\n  authorization_content_type?: string;\n  authorization_url?: string;\n  client_url?: string;\n  scope?: string;\n  token_exchange_method?: TokenExchangeMethodEnum;\n};\n\nexport type ActionMetadataRuntime = ActionMetadata & {\n  oauth_access_token?: string;\n  oauth_refresh_token?: string;\n  oauth_token_expires_at?: Date;\n};\n\nexport type MCP = {\n  mcp_id: string;\n  metadata: MCPMetadata;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type MCPMetadata = Omit<ActionMetadata, 'auth'> & {\n  name?: string;\n  description?: string;\n  url?: string;\n  tools?: string[];\n  auth?: MCPAuth;\n  icon?: string;\n  trust?: boolean;\n};\n\nexport type MCPAuth = ActionAuth;\n\nexport type AgentToolType = {\n  tool_id: string;\n  metadata: ToolMetadata;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type ToolMetadata = TPlugin;\n","import { z } from 'zod';\nimport { TokenExchangeMethodEnum } from './types/agents';\nimport { extractEnvVariable } from './utils';\n\nconst BaseOptionsSchema = z.object({\n  /**\n   * Controls whether the MCP server is initialized during application startup.\n   * - true (default): Server is initialized during app startup and included in app-level connections\n   * - false: Skips initialization at startup and excludes from app-level connections - useful for servers\n   *   requiring manual authentication (e.g., GitHub PAT tokens) that need to be configured through the UI after startup\n   */\n  startup: z.boolean().optional(),\n  iconPath: z.string().optional(),\n  timeout: z.number().optional(),\n  initTimeout: z.number().optional(),\n  /** Controls visibility in chat dropdown menu (MCPSelect) */\n  chatMenu: z.boolean().optional(),\n  /**\n   * Controls server instruction behavior:\n   * - undefined/not set: No instructions included (default)\n   * - true: Use server-provided instructions\n   * - string: Use custom instructions (overrides server-provided)\n   */\n  serverInstructions: z.union([z.boolean(), z.string()]).optional(),\n  /**\n   * Whether this server requires OAuth authentication\n   * If not specified, will be auto-detected during construction\n   */\n  requiresOAuth: z.boolean().optional(),\n  /**\n   * OAuth configuration for SSE and Streamable HTTP transports\n   * - Optional: OAuth can be auto-discovered on 401 responses\n   * - Pre-configured values will skip discovery steps\n   */\n  oauth: z\n    .object({\n      /** OAuth authorization endpoint (optional - can be auto-discovered) */\n      authorization_url: z.string().url().optional(),\n      /** OAuth token endpoint (optional - can be auto-discovered) */\n      token_url: z.string().url().optional(),\n      /** OAuth client ID (optional - can use dynamic registration) */\n      client_id: z.string().optional(),\n      /** OAuth client secret (optional - can use dynamic registration) */\n      client_secret: z.string().optional(),\n      /** OAuth scopes to request */\n      scope: z.string().optional(),\n      /** OAuth redirect URI (defaults to /api/mcp/{serverName}/oauth/callback) */\n      redirect_uri: z.string().url().optional(),\n      /** Token exchange method */\n      token_exchange_method: z.nativeEnum(TokenExchangeMethodEnum).optional(),\n      /** Supported grant types (defaults to ['authorization_code', 'refresh_token']) */\n      grant_types_supported: z.array(z.string()).optional(),\n      /** Supported token endpoint authentication methods (defaults to ['client_secret_basic', 'client_secret_post']) */\n      token_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n      /** Supported response types (defaults to ['code']) */\n      response_types_supported: z.array(z.string()).optional(),\n      /** Supported code challenge methods (defaults to ['S256', 'plain']) */\n      code_challenge_methods_supported: z.array(z.string()).optional(),\n    })\n    .optional(),\n  customUserVars: z\n    .record(\n      z.string(),\n      z.object({\n        title: z.string(),\n        description: z.string(),\n      }),\n    )\n    .optional(),\n});\n\nexport const StdioOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('stdio').optional(),\n  /**\n   * The executable to run to start the server.\n   */\n  command: z.string(),\n  /**\n   * Command line arguments to pass to the executable.\n   */\n  args: z.array(z.string()),\n  /**\n   * The environment to use when spawning the process.\n   *\n   * If not specified, the result of getDefaultEnvironment() will be used.\n   * Environment variables can be referenced using ${VAR_NAME} syntax.\n   */\n  env: z\n    .record(z.string(), z.string())\n    .optional()\n    .transform((env) => {\n      if (!env) {\n        return env;\n      }\n\n      const processedEnv: Record<string, string> = {};\n      for (const [key, value] of Object.entries(env)) {\n        processedEnv[key] = extractEnvVariable(value);\n      }\n      return processedEnv;\n    }),\n  /**\n   * How to handle stderr of the child process. This matches the semantics of Node's `child_process.spawn`.\n   *\n   * @type {import('node:child_process').IOType | import('node:stream').Stream | number}\n   *\n   * The default is \"inherit\", meaning messages to stderr will be printed to the parent process's stderr.\n   */\n  stderr: z.any().optional(),\n});\n\nexport const WebSocketOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('websocket').optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol === 'ws:' || protocol === 'wss:';\n      },\n      {\n        message: 'WebSocket URL must start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const SSEOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('sse').optional(),\n  headers: z.record(z.string(), z.string()).optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol !== 'ws:' && protocol !== 'wss:';\n      },\n      {\n        message: 'SSE URL must not start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const StreamableHTTPOptionsSchema = BaseOptionsSchema.extend({\n  type: z.union([z.literal('streamable-http'), z.literal('http')]),\n  headers: z.record(z.string(), z.string()).optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol !== 'ws:' && protocol !== 'wss:';\n      },\n      {\n        message: 'Streamable HTTP URL must not start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const MCPOptionsSchema = z.union([\n  StdioOptionsSchema,\n  WebSocketOptionsSchema,\n  SSEOptionsSchema,\n  StreamableHTTPOptionsSchema,\n]);\n\nexport const MCPServersSchema = z.record(z.string(), MCPOptionsSchema);\n\nexport type MCPOptions = z.infer<typeof MCPOptionsSchema>;\n","import { z } from 'zod';\nimport type { ZodError } from 'zod';\nimport type { TModelsConfig } from './types';\nimport { EModelEndpoint, eModelEndpointSchema } from './schemas';\nimport { specsConfigSchema, TSpecsConfig } from './models';\nimport { fileConfigSchema } from './file-config';\nimport { FileSources } from './types/files';\nimport { MCPServersSchema } from './mcp';\n\nexport const defaultSocialLogins = ['google', 'facebook', 'openid', 'github', 'discord', 'saml'];\n\nexport const defaultRetrievalModels = [\n  'gpt-4o',\n  'o1-preview-2024-09-12',\n  'o1-preview',\n  'o1-mini-2024-09-12',\n  'o1-mini',\n  'o3-mini',\n  'chatgpt-4o-latest',\n  'gpt-4o-2024-05-13',\n  'gpt-4o-2024-08-06',\n  'gpt-4o-mini',\n  'gpt-4o-mini-2024-07-18',\n  'gpt-4-turbo-preview',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-0125-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-0125',\n  'gpt-4-1106',\n];\n\nexport const excludedKeys = new Set([\n  'conversationId',\n  'title',\n  'iconURL',\n  'greeting',\n  'endpoint',\n  'endpointType',\n  'createdAt',\n  'updatedAt',\n  'expiredAt',\n  'messages',\n  'isArchived',\n  'tags',\n  'user',\n  '__v',\n  '_id',\n  'tools',\n  'model',\n  'files',\n  'spec',\n  'disableParams',\n]);\n\nexport enum SettingsViews {\n  default = 'default',\n  advanced = 'advanced',\n}\n\nexport const fileSourceSchema = z.nativeEnum(FileSources);\n\nexport const fileStrategiesSchema = z\n  .object({\n    default: fileSourceSchema.optional(),\n    avatar: fileSourceSchema.optional(),\n    image: fileSourceSchema.optional(),\n    document: fileSourceSchema.optional(),\n  })\n  .optional();\n\n// Helper type to extract the shape of the Zod object schema\ntype SchemaShape<T> = T extends z.ZodObject<infer U> ? U : never;\n\n// Helper type to determine the default value or undefined based on whether the field has a default\ntype DefaultValue<T> =\n  T extends z.ZodDefault<z.ZodTypeAny> ? ReturnType<T['_def']['defaultValue']> : undefined;\n\n// Extract default values or undefined from the schema shape\ntype ExtractDefaults<T> = {\n  [P in keyof T]: DefaultValue<T[P]>;\n};\n\nexport type SchemaDefaults<T> = ExtractDefaults<SchemaShape<T>>;\n\nexport type TConfigDefaults = SchemaDefaults<typeof configSchema>;\n\nexport function getSchemaDefaults<Schema extends z.AnyZodObject>(\n  schema: Schema,\n): ExtractDefaults<SchemaShape<Schema>> {\n  const shape = schema.shape;\n  const entries = Object.entries(shape).map(([key, value]) => {\n    if (value instanceof z.ZodDefault) {\n      // Extract default value if it exists\n      return [key, value._def.defaultValue()];\n    }\n    return [key, undefined];\n  });\n\n  // Create the object with the right types\n  return Object.fromEntries(entries) as ExtractDefaults<SchemaShape<Schema>>;\n}\n\nexport const modelConfigSchema = z\n  .object({\n    deploymentName: z.string().optional(),\n    version: z.string().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .or(z.boolean());\n\nexport type TAzureModelConfig = z.infer<typeof modelConfigSchema>;\n\nexport const azureBaseSchema = z.object({\n  apiKey: z.string(),\n  serverless: z.boolean().optional(),\n  instanceName: z.string().optional(),\n  deploymentName: z.string().optional(),\n  assistants: z.boolean().optional(),\n  addParams: z.record(z.any()).optional(),\n  dropParams: z.array(z.string()).optional(),\n  forcePrompt: z.boolean().optional(),\n  version: z.string().optional(),\n  baseURL: z.string().optional(),\n  additionalHeaders: z.record(z.any()).optional(),\n});\n\nexport type TAzureBaseSchema = z.infer<typeof azureBaseSchema>;\n\nexport const azureGroupSchema = z\n  .object({\n    group: z.string(),\n    models: z.record(z.string(), modelConfigSchema),\n  })\n  .required()\n  .and(azureBaseSchema);\n\nexport const azureGroupConfigsSchema = z.array(azureGroupSchema).min(1);\nexport type TAzureGroup = z.infer<typeof azureGroupSchema>;\nexport type TAzureGroups = z.infer<typeof azureGroupConfigsSchema>;\nexport type TAzureModelMapSchema = {\n  // deploymentName?: string;\n  // version?: string;\n  group: string;\n};\n\nexport type TAzureModelGroupMap = Record<string, TAzureModelMapSchema | undefined>;\nexport type TAzureGroupMap = Record<\n  string,\n  (TAzureBaseSchema & { models: Record<string, TAzureModelConfig | undefined> }) | undefined\n>;\n\nexport type TValidatedAzureConfig = {\n  modelNames: string[];\n  modelGroupMap: TAzureModelGroupMap;\n  groupMap: TAzureGroupMap;\n};\n\nexport type TAzureConfigValidationResult = TValidatedAzureConfig & {\n  isValid: boolean;\n  errors: (ZodError | string)[];\n};\n\nexport enum Capabilities {\n  code_interpreter = 'code_interpreter',\n  image_vision = 'image_vision',\n  retrieval = 'retrieval',\n  actions = 'actions',\n  tools = 'tools',\n}\n\nexport enum AgentCapabilities {\n  hide_sequential_outputs = 'hide_sequential_outputs',\n  end_after_tools = 'end_after_tools',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  web_search = 'web_search',\n  artifacts = 'artifacts',\n  actions = 'actions',\n  tools = 'tools',\n  chain = 'chain',\n  ocr = 'ocr',\n}\n\nexport const defaultAssistantsVersion = {\n  [EModelEndpoint.assistants]: 2,\n  [EModelEndpoint.azureAssistants]: 1,\n};\n\nexport const baseEndpointSchema = z.object({\n  streamRate: z.number().optional(),\n  baseURL: z.string().optional(),\n  titlePrompt: z.string().optional(),\n  titleModel: z.string().optional(),\n  titleConvo: z.boolean().optional(),\n  titleMethod: z\n    .union([z.literal('completion'), z.literal('functions'), z.literal('structured')])\n    .optional(),\n  titleEndpoint: z.string().optional(),\n  titlePromptTemplate: z.string().optional(),\n});\n\nexport type TBaseEndpoint = z.infer<typeof baseEndpointSchema>;\n\nexport const bedrockEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    availableRegions: z.array(z.string()).optional(),\n  }),\n);\n\nexport const assistantEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    /* assistants specific */\n    disableBuilder: z.boolean().optional(),\n    pollIntervalMs: z.number().optional(),\n    timeoutMs: z.number().optional(),\n    version: z.union([z.string(), z.number()]).default(2),\n    supportedIds: z.array(z.string()).min(1).optional(),\n    excludedIds: z.array(z.string()).min(1).optional(),\n    privateAssistants: z.boolean().optional(),\n    retrievalModels: z.array(z.string()).min(1).optional().default(defaultRetrievalModels),\n    capabilities: z\n      .array(z.nativeEnum(Capabilities))\n      .optional()\n      .default([\n        Capabilities.code_interpreter,\n        Capabilities.image_vision,\n        Capabilities.retrieval,\n        Capabilities.actions,\n        Capabilities.tools,\n      ]),\n    /* general */\n    apiKey: z.string().optional(),\n    models: z\n      .object({\n        default: z.array(z.string()).min(1),\n        fetch: z.boolean().optional(),\n        userIdQuery: z.boolean().optional(),\n      })\n      .optional(),\n    headers: z.record(z.any()).optional(),\n  }),\n);\n\nexport type TAssistantEndpoint = z.infer<typeof assistantEndpointSchema>;\n\nexport const defaultAgentCapabilities = [\n  AgentCapabilities.execute_code,\n  AgentCapabilities.file_search,\n  AgentCapabilities.web_search,\n  AgentCapabilities.artifacts,\n  AgentCapabilities.actions,\n  AgentCapabilities.tools,\n  AgentCapabilities.chain,\n  AgentCapabilities.ocr,\n];\n\nexport const agentsEndpointSchema = baseEndpointSchema\n  .merge(\n    z.object({\n      /* agents specific */\n      recursionLimit: z.number().optional(),\n      disableBuilder: z.boolean().optional().default(false),\n      maxRecursionLimit: z.number().optional(),\n      maxCitations: z.number().min(1).max(50).optional().default(30),\n      maxCitationsPerFile: z.number().min(1).max(10).optional().default(7),\n      minRelevanceScore: z.number().min(0.0).max(1.0).optional().default(0.45),\n      allowedProviders: z.array(z.union([z.string(), eModelEndpointSchema])).optional(),\n      capabilities: z\n        .array(z.nativeEnum(AgentCapabilities))\n        .optional()\n        .default(defaultAgentCapabilities),\n    }),\n  )\n  .default({\n    disableBuilder: false,\n    capabilities: defaultAgentCapabilities,\n    maxCitations: 30,\n    maxCitationsPerFile: 7,\n    minRelevanceScore: 0.45,\n  });\n\nexport type TAgentsEndpoint = z.infer<typeof agentsEndpointSchema>;\n\nexport const endpointSchema = baseEndpointSchema.merge(\n  z.object({\n    name: z.string().refine((value) => !eModelEndpointSchema.safeParse(value).success, {\n      message: `Value cannot be one of the default endpoint (EModelEndpoint) values: ${Object.values(\n        EModelEndpoint,\n      ).join(', ')}`,\n    }),\n    apiKey: z.string(),\n    baseURL: z.string(),\n    models: z.object({\n      default: z.array(z.string()).min(1),\n      fetch: z.boolean().optional(),\n      userIdQuery: z.boolean().optional(),\n    }),\n    summarize: z.boolean().optional(),\n    summaryModel: z.string().optional(),\n    forcePrompt: z.boolean().optional(),\n    modelDisplayLabel: z.string().optional(),\n    headers: z.record(z.any()).optional(),\n    addParams: z.record(z.any()).optional(),\n    dropParams: z.array(z.string()).optional(),\n    customParams: z\n      .object({\n        defaultParamsEndpoint: z.string().default('custom'),\n        paramDefinitions: z.array(z.record(z.any())).optional(),\n      })\n      .strict(),\n    customOrder: z.number().optional(),\n    directEndpoint: z.boolean().optional(),\n    titleMessageRole: z.string().optional(),\n  }),\n);\n\nexport type TEndpoint = z.infer<typeof endpointSchema>;\n\nexport const azureEndpointSchema = z\n  .object({\n    groups: azureGroupConfigsSchema,\n    plugins: z.boolean().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .and(\n    endpointSchema\n      .pick({\n        streamRate: true,\n        titleConvo: true,\n        titleMethod: true,\n        titleModel: true,\n        titlePrompt: true,\n        titlePromptTemplate: true,\n        summarize: true,\n        summaryModel: true,\n        customOrder: true,\n      })\n      .partial(),\n  );\n\nexport type TAzureConfig = Omit<z.infer<typeof azureEndpointSchema>, 'groups'> &\n  TAzureConfigValidationResult;\n\nconst ttsOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsElevenLabsSchema = z.object({\n  url: z.string().optional(),\n  websocketUrl: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n  voice_settings: z\n    .object({\n      similarity_boost: z.number().optional(),\n      stability: z.number().optional(),\n      style: z.number().optional(),\n      use_speaker_boost: z.boolean().optional(),\n    })\n    .optional(),\n  pronunciation_dictionary_locators: z.array(z.string()).optional(),\n});\n\nconst ttsLocalaiSchema = z.object({\n  url: z.string(),\n  apiKey: z.string().optional(),\n  voices: z.array(z.string()),\n  backend: z.string(),\n});\n\nconst ttsSchema = z.object({\n  openai: ttsOpenaiSchema.optional(),\n  azureOpenAI: ttsAzureOpenAISchema.optional(),\n  elevenlabs: ttsElevenLabsSchema.optional(),\n  localai: ttsLocalaiSchema.optional(),\n});\n\nconst sttOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n});\n\nconst sttAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n});\n\nconst sttSchema = z.object({\n  openai: sttOpenaiSchema.optional(),\n  azureOpenAI: sttAzureOpenAISchema.optional(),\n});\n\nconst speechTab = z\n  .object({\n    conversationMode: z.boolean().optional(),\n    advancedMode: z.boolean().optional(),\n    speechToText: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineSTT: z.string().optional(),\n          languageSTT: z.string().optional(),\n          autoTranscribeAudio: z.boolean().optional(),\n          decibelValue: z.number().optional(),\n          autoSendText: z.number().optional(),\n        }),\n      )\n      .optional(),\n    textToSpeech: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineTTS: z.string().optional(),\n          voice: z.string().optional(),\n          languageTTS: z.string().optional(),\n          automaticPlayback: z.boolean().optional(),\n          playbackRate: z.number().optional(),\n          cacheTTS: z.boolean().optional(),\n        }),\n      )\n      .optional(),\n  })\n  .optional();\n\nexport enum RateLimitPrefix {\n  FILE_UPLOAD = 'FILE_UPLOAD',\n  IMPORT = 'IMPORT',\n  TTS = 'TTS',\n  STT = 'STT',\n}\n\nexport const rateLimitSchema = z.object({\n  fileUploads: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  conversationsImport: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  tts: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  stt: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n});\n\nexport enum EImageOutputType {\n  PNG = 'png',\n  WEBP = 'webp',\n  JPEG = 'jpeg',\n}\n\nconst termsOfServiceSchema = z.object({\n  externalUrl: z.string().optional(),\n  openNewTab: z.boolean().optional(),\n  modalAcceptance: z.boolean().optional(),\n  modalTitle: z.string().optional(),\n  modalContent: z.string().or(z.array(z.string())).optional(),\n});\n\nexport type TTermsOfService = z.infer<typeof termsOfServiceSchema>;\n\nconst mcpServersSchema = z.object({\n  placeholder: z.string().optional(),\n});\n\nexport type TMcpServersConfig = z.infer<typeof mcpServersSchema>;\n\nexport const interfaceSchema = z\n  .object({\n    privacyPolicy: z\n      .object({\n        externalUrl: z.string().optional(),\n        openNewTab: z.boolean().optional(),\n      })\n      .optional(),\n    termsOfService: termsOfServiceSchema.optional(),\n    customWelcome: z.string().optional(),\n    mcpServers: mcpServersSchema.optional(),\n    endpointsMenu: z.boolean().optional(),\n    modelSelect: z.boolean().optional(),\n    parameters: z.boolean().optional(),\n    sidePanel: z.boolean().optional(),\n    multiConvo: z.boolean().optional(),\n    bookmarks: z.boolean().optional(),\n    memories: z.boolean().optional(),\n    presets: z.boolean().optional(),\n    prompts: z.boolean().optional(),\n    agents: z.boolean().optional(),\n    temporaryChat: z.boolean().optional(),\n    temporaryChatRetention: z.number().min(1).max(8760).optional(),\n    runCode: z.boolean().optional(),\n    webSearch: z.boolean().optional(),\n    peoplePicker: z\n      .object({\n        users: z.boolean().optional(),\n        groups: z.boolean().optional(),\n        roles: z.boolean().optional(),\n      })\n      .optional(),\n    marketplace: z\n      .object({\n        use: z.boolean().optional(),\n      })\n      .optional(),\n    fileSearch: z.boolean().optional(),\n    fileCitations: z.boolean().optional(),\n  })\n  .default({\n    endpointsMenu: true,\n    modelSelect: true,\n    parameters: true,\n    sidePanel: true,\n    presets: true,\n    multiConvo: true,\n    bookmarks: true,\n    memories: true,\n    prompts: true,\n    agents: true,\n    temporaryChat: true,\n    runCode: true,\n    webSearch: true,\n    peoplePicker: {\n      users: true,\n      groups: true,\n      roles: true,\n    },\n    marketplace: {\n      use: false,\n    },\n    fileSearch: true,\n    fileCitations: true,\n  });\n\nexport type TInterfaceConfig = z.infer<typeof interfaceSchema>;\nexport type TBalanceConfig = z.infer<typeof balanceSchema>;\n\nexport const turnstileOptionsSchema = z\n  .object({\n    language: z.string().default('auto'),\n    size: z.enum(['normal', 'compact', 'flexible', 'invisible']).default('normal'),\n  })\n  .default({\n    language: 'auto',\n    size: 'normal',\n  });\n\nexport const turnstileSchema = z.object({\n  siteKey: z.string(),\n  options: turnstileOptionsSchema.optional(),\n});\n\nexport type TTurnstileConfig = z.infer<typeof turnstileSchema>;\n\nexport type TStartupConfig = {\n  appTitle: string;\n  socialLogins?: string[];\n  interface?: TInterfaceConfig;\n  turnstile?: TTurnstileConfig;\n  balance?: TBalanceConfig;\n  discordLoginEnabled: boolean;\n  facebookLoginEnabled: boolean;\n  githubLoginEnabled: boolean;\n  googleLoginEnabled: boolean;\n  openidLoginEnabled: boolean;\n  appleLoginEnabled: boolean;\n  samlLoginEnabled: boolean;\n  openidLabel: string;\n  openidImageUrl: string;\n  openidAutoRedirect: boolean;\n  samlLabel: string;\n  samlImageUrl: string;\n  /** LDAP Auth Configuration */\n  ldap?: {\n    /** LDAP enabled */\n    enabled: boolean;\n    /** Whether LDAP uses username vs. email */\n    username?: boolean;\n  };\n  serverDomain: string;\n  emailLoginEnabled: boolean;\n  registrationEnabled: boolean;\n  socialLoginEnabled: boolean;\n  passwordResetEnabled: boolean;\n  emailEnabled: boolean;\n  showBirthdayIcon: boolean;\n  helpAndFaqURL: string;\n  customFooter?: string;\n  modelSpecs?: TSpecsConfig;\n  sharedLinksEnabled: boolean;\n  publicSharedLinksEnabled: boolean;\n  analyticsGtmId?: string;\n  instanceProjectId: string;\n  bundlerURL?: string;\n  staticBundlerURL?: string;\n  sharePointFilePickerEnabled?: boolean;\n  sharePointBaseUrl?: string;\n  sharePointPickerGraphScope?: string;\n  sharePointPickerSharePointScope?: string;\n  openidReuseTokens?: boolean;\n  webSearch?: {\n    searchProvider?: SearchProviders;\n    scraperType?: ScraperTypes;\n    rerankerType?: RerankerTypes;\n  };\n  mcpServers?: Record<\n    string,\n    {\n      customUserVars: Record<\n        string,\n        {\n          title: string;\n          description: string;\n        }\n      >;\n      chatMenu?: boolean;\n      isOAuth?: boolean;\n      startup?: boolean;\n    }\n  >;\n  mcpPlaceholder?: string;\n};\n\nexport enum OCRStrategy {\n  MISTRAL_OCR = 'mistral_ocr',\n  CUSTOM_OCR = 'custom_ocr',\n  AZURE_MISTRAL_OCR = 'azure_mistral_ocr',\n  VERTEXAI_MISTRAL_OCR = 'vertexai_mistral_ocr',\n}\n\nexport enum SearchCategories {\n  PROVIDERS = 'providers',\n  SCRAPERS = 'scrapers',\n  RERANKERS = 'rerankers',\n}\n\nexport enum SearchProviders {\n  SERPER = 'serper',\n  SEARXNG = 'searxng',\n}\n\nexport enum ScraperTypes {\n  FIRECRAWL = 'firecrawl',\n  SERPER = 'serper',\n}\n\nexport enum RerankerTypes {\n  JINA = 'jina',\n  COHERE = 'cohere',\n}\n\nexport enum SafeSearchTypes {\n  OFF = 0,\n  MODERATE = 1,\n  STRICT = 2,\n}\n\nexport const webSearchSchema = z.object({\n  serperApiKey: z.string().optional().default('${SERPER_API_KEY}'),\n  searxngInstanceUrl: z.string().optional().default('${SEARXNG_INSTANCE_URL}'),\n  searxngApiKey: z.string().optional().default('${SEARXNG_API_KEY}'),\n  firecrawlApiKey: z.string().optional().default('${FIRECRAWL_API_KEY}'),\n  firecrawlApiUrl: z.string().optional().default('${FIRECRAWL_API_URL}'),\n  jinaApiKey: z.string().optional().default('${JINA_API_KEY}'),\n  cohereApiKey: z.string().optional().default('${COHERE_API_KEY}'),\n  searchProvider: z.nativeEnum(SearchProviders).optional(),\n  scraperType: z.nativeEnum(ScraperTypes).optional(),\n  rerankerType: z.nativeEnum(RerankerTypes).optional(),\n  scraperTimeout: z.number().optional(),\n  safeSearch: z.nativeEnum(SafeSearchTypes).default(SafeSearchTypes.MODERATE),\n  firecrawlOptions: z\n    .object({\n      formats: z.array(z.string()).optional(),\n      includeTags: z.array(z.string()).optional(),\n      excludeTags: z.array(z.string()).optional(),\n      headers: z.record(z.string()).optional(),\n      waitFor: z.number().optional(),\n      timeout: z.number().optional(),\n      maxAge: z.number().optional(),\n      mobile: z.boolean().optional(),\n      skipTlsVerification: z.boolean().optional(),\n      blockAds: z.boolean().optional(),\n      removeBase64Images: z.boolean().optional(),\n      parsePDF: z.boolean().optional(),\n      storeInCache: z.boolean().optional(),\n      zeroDataRetention: z.boolean().optional(),\n      location: z\n        .object({\n          country: z.string().optional(),\n          languages: z.array(z.string()).optional(),\n        })\n        .optional(),\n      onlyMainContent: z.boolean().optional(),\n      changeTrackingOptions: z\n        .object({\n          modes: z.array(z.string()).optional(),\n          schema: z.record(z.unknown()).optional(),\n          prompt: z.string().optional(),\n          tag: z.string().nullable().optional(),\n        })\n        .optional(),\n    })\n    .optional(),\n});\n\nexport type TWebSearchConfig = z.infer<typeof webSearchSchema>;\n\nexport const ocrSchema = z.object({\n  mistralModel: z.string().optional(),\n  apiKey: z.string().optional().default('${OCR_API_KEY}'),\n  baseURL: z.string().optional().default('${OCR_BASEURL}'),\n  strategy: z.nativeEnum(OCRStrategy).default(OCRStrategy.MISTRAL_OCR),\n});\n\nexport const balanceSchema = z.object({\n  enabled: z.boolean().optional().default(false),\n  startBalance: z.number().optional().default(20000),\n  autoRefillEnabled: z.boolean().optional().default(false),\n  refillIntervalValue: z.number().optional().default(30),\n  refillIntervalUnit: z\n    .enum(['seconds', 'minutes', 'hours', 'days', 'weeks', 'months'])\n    .optional()\n    .default('days'),\n  refillAmount: z.number().optional().default(10000),\n});\n\nexport const memorySchema = z.object({\n  disabled: z.boolean().optional(),\n  validKeys: z.array(z.string()).optional(),\n  tokenLimit: z.number().optional(),\n  charLimit: z.number().optional().default(10000),\n  personalize: z.boolean().default(true),\n  messageWindowSize: z.number().optional().default(5),\n  agent: z\n    .union([\n      z.object({\n        id: z.string(),\n      }),\n      z.object({\n        provider: z.string(),\n        model: z.string(),\n        instructions: z.string().optional(),\n        model_parameters: z.record(z.any()).optional(),\n      }),\n    ])\n    .optional(),\n});\n\nexport type TMemoryConfig = z.infer<typeof memorySchema>;\n\nexport const configSchema = z.object({\n  version: z.string(),\n  cache: z.boolean().default(true),\n  ocr: ocrSchema.optional(),\n  webSearch: webSearchSchema.optional(),\n  memory: memorySchema.optional(),\n  secureImageLinks: z.boolean().optional(),\n  imageOutputType: z.nativeEnum(EImageOutputType).default(EImageOutputType.PNG),\n  includedTools: z.array(z.string()).optional(),\n  filteredTools: z.array(z.string()).optional(),\n  mcpServers: MCPServersSchema.optional(),\n  interface: interfaceSchema,\n  turnstile: turnstileSchema.optional(),\n  fileStrategy: fileSourceSchema.default(FileSources.local),\n  fileStrategies: fileStrategiesSchema,\n  actions: z\n    .object({\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .optional(),\n  registration: z\n    .object({\n      socialLogins: z.array(z.string()).optional(),\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .default({ socialLogins: defaultSocialLogins }),\n  balance: balanceSchema.optional(),\n  speech: z\n    .object({\n      tts: ttsSchema.optional(),\n      stt: sttSchema.optional(),\n      speechTab: speechTab.optional(),\n    })\n    .optional(),\n  rateLimits: rateLimitSchema.optional(),\n  fileConfig: fileConfigSchema.optional(),\n  modelSpecs: specsConfigSchema.optional(),\n  endpoints: z\n    .object({\n      all: baseEndpointSchema.optional(),\n      [EModelEndpoint.openAI]: baseEndpointSchema.optional(),\n      [EModelEndpoint.google]: baseEndpointSchema.optional(),\n      [EModelEndpoint.anthropic]: baseEndpointSchema.optional(),\n      [EModelEndpoint.gptPlugins]: baseEndpointSchema.optional(),\n      [EModelEndpoint.azureOpenAI]: azureEndpointSchema.optional(),\n      [EModelEndpoint.azureAssistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.assistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.agents]: agentsEndpointSchema.optional(),\n      [EModelEndpoint.custom]: z.array(endpointSchema.partial()).optional(),\n      [EModelEndpoint.bedrock]: baseEndpointSchema.optional(),\n    })\n    .strict()\n    .refine((data) => Object.keys(data).length > 0, {\n      message: 'At least one `endpoints` field must be provided.',\n    })\n    .optional(),\n});\n\nexport const getConfigDefaults = () => getSchemaDefaults(configSchema);\n\nexport type TCustomConfig = z.infer<typeof configSchema>;\n\nexport type TProviderSchema =\n  | z.infer<typeof ttsOpenaiSchema>\n  | z.infer<typeof ttsElevenLabsSchema>\n  | z.infer<typeof ttsLocalaiSchema>\n  | undefined;\n\nexport enum KnownEndpoints {\n  anyscale = 'anyscale',\n  apipie = 'apipie',\n  cohere = 'cohere',\n  fireworks = 'fireworks',\n  deepseek = 'deepseek',\n  groq = 'groq',\n  huggingface = 'huggingface',\n  mistral = 'mistral',\n  mlx = 'mlx',\n  ollama = 'ollama',\n  openrouter = 'openrouter',\n  perplexity = 'perplexity',\n  shuttleai = 'shuttleai',\n  'together.ai' = 'together.ai',\n  unify = 'unify',\n  xai = 'xai',\n}\n\nexport enum FetchTokenConfig {\n  openrouter = KnownEndpoints.openrouter,\n}\n\nexport const defaultEndpoints: EModelEndpoint[] = [\n  EModelEndpoint.openAI,\n  EModelEndpoint.assistants,\n  EModelEndpoint.azureAssistants,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.agents,\n  EModelEndpoint.chatGPTBrowser,\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.google,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.bedrock,\n];\n\nexport const alternateName = {\n  [EModelEndpoint.openAI]: 'OpenAI',\n  [EModelEndpoint.assistants]: 'Assistants',\n  [EModelEndpoint.agents]: 'My Agents',\n  [EModelEndpoint.azureAssistants]: 'Azure Assistants',\n  [EModelEndpoint.azureOpenAI]: 'Azure OpenAI',\n  [EModelEndpoint.chatGPTBrowser]: 'ChatGPT',\n  [EModelEndpoint.gptPlugins]: 'Plugins',\n  [EModelEndpoint.google]: 'Google',\n  [EModelEndpoint.anthropic]: 'Anthropic',\n  [EModelEndpoint.custom]: 'Custom',\n  [EModelEndpoint.bedrock]: 'AWS Bedrock',\n  [KnownEndpoints.ollama]: 'Ollama',\n  [KnownEndpoints.deepseek]: 'DeepSeek',\n  [KnownEndpoints.xai]: 'xAI',\n};\n\nconst sharedOpenAIModels = [\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-4.5-preview',\n  'gpt-4.5-preview-2025-02-27',\n  'gpt-3.5-turbo',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-turbo-2024-04-09',\n  'gpt-4-0125-preview',\n  'gpt-4-turbo-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-16k-0613',\n  'gpt-3.5-turbo-16k',\n  'gpt-4',\n  'gpt-4-0314',\n  'gpt-4-32k-0314',\n  'gpt-4-0613',\n  'gpt-3.5-turbo-0613',\n];\n\nconst sharedAnthropicModels = [\n  'claude-sonnet-4-20250514',\n  'claude-sonnet-4-latest',\n  'claude-opus-4-20250514',\n  'claude-opus-4-latest',\n  'claude-3-7-sonnet-latest',\n  'claude-3-7-sonnet-20250219',\n  'claude-3-5-haiku-20241022',\n  'claude-3-5-sonnet-20241022',\n  'claude-3-5-sonnet-20240620',\n  'claude-3-5-sonnet-latest',\n  'claude-3-opus-20240229',\n  'claude-3-sonnet-20240229',\n  'claude-3-haiku-20240307',\n  'claude-2.1',\n  'claude-2',\n  'claude-1.2',\n  'claude-1',\n  'claude-1-100k',\n  'claude-instant-1',\n  'claude-instant-1-100k',\n];\n\nexport const bedrockModels = [\n  'anthropic.claude-3-5-sonnet-20241022-v2:0',\n  'anthropic.claude-3-5-sonnet-20240620-v1:0',\n  'anthropic.claude-3-5-haiku-20241022-v1:0',\n  'anthropic.claude-3-haiku-20240307-v1:0',\n  'anthropic.claude-3-opus-20240229-v1:0',\n  'anthropic.claude-3-sonnet-20240229-v1:0',\n  'anthropic.claude-v2',\n  'anthropic.claude-v2:1',\n  'anthropic.claude-instant-v1',\n  // 'cohere.command-text-v14', // no conversation history\n  // 'cohere.command-light-text-v14', // no conversation history\n  'cohere.command-r-v1:0',\n  'cohere.command-r-plus-v1:0',\n  'meta.llama2-13b-chat-v1',\n  'meta.llama2-70b-chat-v1',\n  'meta.llama3-8b-instruct-v1:0',\n  'meta.llama3-70b-instruct-v1:0',\n  'meta.llama3-1-8b-instruct-v1:0',\n  'meta.llama3-1-70b-instruct-v1:0',\n  'meta.llama3-1-405b-instruct-v1:0',\n  'mistral.mistral-7b-instruct-v0:2',\n  'mistral.mixtral-8x7b-instruct-v0:1',\n  'mistral.mistral-large-2402-v1:0',\n  'mistral.mistral-large-2407-v1:0',\n  'mistral.mistral-small-2402-v1:0',\n  'ai21.jamba-instruct-v1:0',\n  // 'ai21.j2-mid-v1', // no streaming\n  // 'ai21.j2-ultra-v1', no conversation history\n  'amazon.titan-text-lite-v1',\n  'amazon.titan-text-express-v1',\n  'amazon.titan-text-premier-v1:0',\n];\n\nexport const defaultModels = {\n  [EModelEndpoint.azureAssistants]: sharedOpenAIModels,\n  [EModelEndpoint.assistants]: [...sharedOpenAIModels, 'chatgpt-4o-latest'],\n  [EModelEndpoint.agents]: sharedOpenAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.google]: [\n    // Gemini 2.0 Models\n    'gemini-2.0-flash-001',\n    'gemini-2.0-flash-exp',\n    'gemini-2.0-flash-lite',\n    'gemini-2.0-pro-exp-02-05',\n    // Gemini 1.5 Models\n    'gemini-1.5-flash-001',\n    'gemini-1.5-flash-002',\n    'gemini-1.5-pro-001',\n    'gemini-1.5-pro-002',\n    // Gemini 1.0 Models\n    'gemini-1.0-pro-001',\n  ],\n  [EModelEndpoint.anthropic]: sharedAnthropicModels,\n  [EModelEndpoint.openAI]: [\n    ...sharedOpenAIModels,\n    'chatgpt-4o-latest',\n    'gpt-4-vision-preview',\n    'gpt-3.5-turbo-instruct-0914',\n    'gpt-3.5-turbo-instruct',\n  ],\n  [EModelEndpoint.bedrock]: bedrockModels,\n};\n\nconst fitlerAssistantModels = (str: string) => {\n  return /gpt-4|gpt-3\\\\.5/i.test(str) && !/vision|instruct/i.test(str);\n};\n\nconst openAIModels = defaultModels[EModelEndpoint.openAI];\n\nexport const initialModelsConfig: TModelsConfig = {\n  initial: [],\n  [EModelEndpoint.openAI]: openAIModels,\n  [EModelEndpoint.assistants]: openAIModels.filter(fitlerAssistantModels),\n  [EModelEndpoint.agents]: openAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.gptPlugins]: openAIModels,\n  [EModelEndpoint.azureOpenAI]: openAIModels,\n  [EModelEndpoint.chatGPTBrowser]: ['text-davinci-002-render-sha'],\n  [EModelEndpoint.google]: defaultModels[EModelEndpoint.google],\n  [EModelEndpoint.anthropic]: defaultModels[EModelEndpoint.anthropic],\n  [EModelEndpoint.bedrock]: defaultModels[EModelEndpoint.bedrock],\n};\n\nexport const EndpointURLs = {\n  [EModelEndpoint.assistants]: '/api/assistants/v2/chat',\n  [EModelEndpoint.azureAssistants]: '/api/assistants/v1/chat',\n  [EModelEndpoint.agents]: `/api/${EModelEndpoint.agents}/chat`,\n} as const;\n\nexport const modularEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.google,\n  EModelEndpoint.openAI,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.custom,\n  EModelEndpoint.agents,\n  EModelEndpoint.bedrock,\n]);\n\nexport const supportsBalanceCheck = {\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.gptPlugins]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const visionModels = [\n  'qwen-vl',\n  'grok-vision',\n  'grok-2-vision',\n  'grok-3',\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-4-turbo',\n  'gpt-4-vision',\n  'o4-mini',\n  'o3',\n  'o1',\n  'gpt-4.1',\n  'gpt-4.5',\n  'llava',\n  'llava-13b',\n  'gemini-pro-vision',\n  'claude-3',\n  'gemma',\n  'gemini-exp',\n  'gemini-1.5',\n  'gemini-2',\n  'gemini-3',\n  'moondream',\n  'llama3.2-vision',\n  'llama-3.2-11b-vision',\n  'llama-3-2-11b-vision',\n  'llama-3.2-90b-vision',\n  'llama-3-2-90b-vision',\n  'llama-4',\n  'claude-opus-4',\n  'claude-sonnet-4',\n  'claude-haiku-4',\n];\nexport enum VisionModes {\n  generative = 'generative',\n  agents = 'agents',\n}\n\nexport function validateVisionModel({\n  model,\n  additionalModels = [],\n  availableModels,\n}: {\n  model: string;\n  additionalModels?: string[];\n  availableModels?: string[];\n}) {\n  if (!model) {\n    return false;\n  }\n\n  if (model.includes('gpt-4-turbo-preview') || model.includes('o1-mini')) {\n    return false;\n  }\n\n  if (availableModels && !availableModels.includes(model)) {\n    return false;\n  }\n\n  return visionModels.concat(additionalModels).some((visionModel) => model.includes(visionModel));\n}\n\nexport const imageGenTools = new Set(['dalle', 'dall-e', 'stable-diffusion', 'flux']);\n\n/**\n * Enum for collections using infinite queries\n */\nexport enum InfiniteCollections {\n  /**\n   * Collection for Prompt Groups\n   */\n  PROMPT_GROUPS = 'promptGroups',\n  /**\n   * Collection for Shared Links\n   */\n  SHARED_LINKS = 'sharedLinks',\n}\n\n/**\n * Enum for time intervals\n */\nexport enum Time {\n  ONE_DAY = 86400000,\n  ONE_HOUR = 3600000,\n  THIRTY_MINUTES = 1800000,\n  TEN_MINUTES = 600000,\n  FIVE_MINUTES = 300000,\n  THREE_MINUTES = 180000,\n  TWO_MINUTES = 120000,\n  ONE_MINUTE = 60000,\n  THIRTY_SECONDS = 30000,\n}\n\n/**\n * Enum for cache keys.\n */\nexport enum CacheKeys {\n  /**\n   * Key for the config store namespace.\n   */\n  CONFIG_STORE = 'CONFIG_STORE',\n  /**\n   * Key for the roles cache.\n   */\n  ROLES = 'ROLES',\n  /**\n   * Key for the plugins cache.\n   */\n  PLUGINS = 'PLUGINS',\n  /**\n   * Key for the title generation cache.\n   */\n  GEN_TITLE = 'GEN_TITLE',\n  /**\n   * Key for the tools cache.\n   */\n  TOOLS = 'TOOLS',\n  /**\n   * Key for the model config cache.\n   */\n  MODELS_CONFIG = 'MODELS_CONFIG',\n  /**\n   * Key for the model queries cache.\n   */\n  MODEL_QUERIES = 'MODEL_QUERIES',\n  /**\n   * Key for the default startup config cache.\n   */\n  STARTUP_CONFIG = 'STARTUP_CONFIG',\n  /**\n   * Key for the default endpoint config cache.\n   */\n  ENDPOINT_CONFIG = 'ENDPOINT_CONFIG',\n  /**\n   * Key for accessing the model token config cache.\n   */\n  TOKEN_CONFIG = 'TOKEN_CONFIG',\n  /**\n   * Key for the librechat yaml config cache.\n   */\n  LIBRECHAT_YAML_CONFIG = 'LIBRECHAT_YAML_CONFIG',\n  /**\n   * Key for the static config namespace.\n   */\n  STATIC_CONFIG = 'STATIC_CONFIG',\n  /**\n   * Key for accessing Abort Keys\n   */\n  ABORT_KEYS = 'ABORT_KEYS',\n  /**\n   * Key for the override config cache.\n   */\n  OVERRIDE_CONFIG = 'OVERRIDE_CONFIG',\n  /**\n   * Key for the bans cache.\n   */\n  BANS = 'BANS',\n  /**\n   * Key for the encoded domains cache.\n   * Used by Azure OpenAI Assistants.\n   */\n  ENCODED_DOMAINS = 'ENCODED_DOMAINS',\n  /**\n   * Key for the cached audio run Ids.\n   */\n  AUDIO_RUNS = 'AUDIO_RUNS',\n  /**\n   * Key for in-progress messages.\n   */\n  MESSAGES = 'MESSAGES',\n  /**\n   * Key for in-progress flow states.\n   */\n  FLOWS = 'FLOWS',\n  /**\n   * Key for individual MCP Tool Manifests.\n   */\n  MCP_TOOLS = 'MCP_TOOLS',\n  /**\n   * Key for pending chat requests (concurrency check)\n   */\n  PENDING_REQ = 'PENDING_REQ',\n  /**\n   * Key for s3 check intervals per user\n   */\n  S3_EXPIRY_INTERVAL = 'S3_EXPIRY_INTERVAL',\n  /**\n   * key for open id exchanged tokens\n   */\n  OPENID_EXCHANGED_TOKENS = 'OPENID_EXCHANGED_TOKENS',\n  /**\n   * Key for OpenID session.\n   */\n  OPENID_SESSION = 'OPENID_SESSION',\n  /**\n   * Key for SAML session.\n   */\n  SAML_SESSION = 'SAML_SESSION',\n}\n\n/**\n * Enum for violation types, used to identify, log, and cache violations.\n */\nexport enum ViolationTypes {\n  /**\n   * File Upload Violations (exceeding limit).\n   */\n  FILE_UPLOAD_LIMIT = 'file_upload_limit',\n  /**\n   * Illegal Model Request (not available).\n   */\n  ILLEGAL_MODEL_REQUEST = 'illegal_model_request',\n  /**\n   * Token Limit Violation.\n   */\n  TOKEN_BALANCE = 'token_balance',\n  /**\n   * An issued ban.\n   */\n  BAN = 'ban',\n  /**\n   * TTS Request Limit Violation.\n   */\n  TTS_LIMIT = 'tts_limit',\n  /**\n   * STT Request Limit Violation.\n   */\n  STT_LIMIT = 'stt_limit',\n  /**\n   * Reset Password Limit Violation.\n   */\n  RESET_PASSWORD_LIMIT = 'reset_password_limit',\n  /**\n   * Verify Email Limit Violation.\n   */\n  VERIFY_EMAIL_LIMIT = 'verify_email_limit',\n  /**\n   * Verify Conversation Access violation.\n   */\n  CONVO_ACCESS = 'convo_access',\n  /**\n   * Tool Call Limit Violation.\n   */\n  TOOL_CALL_LIMIT = 'tool_call_limit',\n  /**\n   * General violation (catch-all).\n   */\n  GENERAL = 'general',\n  /**\n   * Login attempt violations.\n   */\n  LOGINS = 'logins',\n  /**\n   * Concurrent request violations.\n   */\n  CONCURRENT = 'concurrent',\n  /**\n   * Non-browser access violations.\n   */\n  NON_BROWSER = 'non_browser',\n  /**\n   * Message limit violations.\n   */\n  MESSAGE_LIMIT = 'message_limit',\n  /**\n   * Registration violations.\n   */\n  REGISTRATIONS = 'registrations',\n}\n\n/**\n * Enum for error message types that are not \"violations\" as above, used to identify client-facing errors.\n */\nexport enum ErrorTypes {\n  /**\n   * No User-provided Key.\n   */\n  NO_USER_KEY = 'no_user_key',\n  /**\n   * Expired User-provided Key.\n   */\n  EXPIRED_USER_KEY = 'expired_user_key',\n  /**\n   * Invalid User-provided Key.\n   */\n  INVALID_USER_KEY = 'invalid_user_key',\n  /**\n   * No Base URL Provided.\n   */\n  NO_BASE_URL = 'no_base_url',\n  /**\n   * Moderation error\n   */\n  MODERATION = 'moderation',\n  /**\n   * Prompt exceeds max length\n   */\n  INPUT_LENGTH = 'INPUT_LENGTH',\n  /**\n   * Invalid request error, API rejected request\n   */\n  INVALID_REQUEST = 'invalid_request_error',\n  /**\n   * Invalid action request error, likely not on list of allowed domains\n   */\n  INVALID_ACTION = 'invalid_action_error',\n  /**\n   * Invalid request error, API rejected request\n   */\n  NO_SYSTEM_MESSAGES = 'no_system_messages',\n  /**\n   * Google provider returned an error\n   */\n  GOOGLE_ERROR = 'google_error',\n  /**\n   * Google provider does not allow custom tools with built-in tools\n   */\n  GOOGLE_TOOL_CONFLICT = 'google_tool_conflict',\n  /**\n   * Invalid Agent Provider (excluded by Admin)\n   */\n  INVALID_AGENT_PROVIDER = 'invalid_agent_provider',\n  /**\n   * Missing model selection\n   */\n  MISSING_MODEL = 'missing_model',\n  /**\n   * Models configuration not loaded\n   */\n  MODELS_NOT_LOADED = 'models_not_loaded',\n  /**\n   * Endpoint models not loaded\n   */\n  ENDPOINT_MODELS_NOT_LOADED = 'endpoint_models_not_loaded',\n  /**\n   * Generic Authentication failure\n   */\n  AUTH_FAILED = 'auth_failed',\n}\n\n/**\n * Enum for authentication keys.\n */\nexport enum AuthKeys {\n  /**\n   * Key for the Service Account to use Vertex AI.\n   */\n  GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY',\n  /**\n   * API key to use Google Generative AI.\n   *\n   * Note: this is not for Environment Variables, but to access encrypted object values.\n   */\n  GOOGLE_API_KEY = 'GOOGLE_API_KEY',\n}\n\n/**\n * Enum for Image Detail Cost.\n *\n * **Low Res Fixed Cost:** `85`\n *\n * **High Res Calculation:**\n *\n * Number of `512px` Tiles * `170` + `85` (Additional Cost)\n */\nexport enum ImageDetailCost {\n  /**\n   * Low resolution is a fixed value.\n   */\n  LOW = 85,\n  /**\n   * High resolution Cost Per Tile\n   */\n  HIGH = 170,\n  /**\n   * Additional Cost added to High Resolution Total Cost\n   */\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  ADDITIONAL = 85,\n}\n\n/**\n * Tab values for Settings Dialog\n */\nexport enum SettingsTabValues {\n  /**\n   * Tab for General Settings\n   */\n  GENERAL = 'general',\n  /**\n   * Tab for Chat Settings\n   */\n  CHAT = 'chat',\n  /**\n   * Tab for Speech Settings\n   */\n  SPEECH = 'speech',\n  /**\n   * Tab for Beta Features\n   */\n  BETA = 'beta',\n  /**\n   * Tab for Data Controls\n   */\n  DATA = 'data',\n  /**\n   * Tab for Balance Settings\n   */\n  BALANCE = 'balance',\n  /**\n   * Tab for Account Settings\n   */\n  ACCOUNT = 'account',\n  /**\n   * Chat input commands\n   */\n  COMMANDS = 'commands',\n  /**\n   * Tab for Personalization Settings\n   */\n  PERSONALIZATION = 'personalization',\n}\n\nexport enum STTProviders {\n  /**\n   * Provider for OpenAI STT\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure STT\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n}\n\nexport enum TTSProviders {\n  /**\n   * Provider for OpenAI TTS\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure OpenAI TTS\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n  /**\n   * Provider for ElevenLabs TTS\n   */\n  ELEVENLABS = 'elevenlabs',\n  /**\n   * Provider for LocalAI TTS\n   */\n  LOCALAI = 'localai',\n}\n\n/** Enum for app-wide constants */\nexport enum Constants {\n  /** Key for the app's version. */\n  VERSION = 'v0.8.0-rc2',\n  /** Key for the Custom Config's version (librechat.yaml). */\n  CONFIG_VERSION = '1.2.8',\n  /** Standard value for the first message's `parentMessageId` value, to indicate no parent exists. */\n  NO_PARENT = '00000000-0000-0000-0000-000000000000',\n  /** Standard value for the initial conversationId before a request is sent */\n  NEW_CONVO = 'new',\n  /** Standard value for the temporary conversationId after a request is sent and before the server responds */\n  PENDING_CONVO = 'PENDING',\n  /** Standard value for the conversationId used for search queries */\n  SEARCH = 'search',\n  /** Fixed, encoded domain length for Azure OpenAI Assistants Function name parsing. */\n  ENCODED_DOMAIN_LENGTH = 10,\n  /** Identifier for using current_model in multi-model requests. */\n  CURRENT_MODEL = 'current_model',\n  /** Common divider for text values */\n  COMMON_DIVIDER = '__',\n  /** Max length for commands */\n  COMMANDS_MAX_LENGTH = 56,\n  /** Default Stream Rate (ms) */\n  DEFAULT_STREAM_RATE = 1,\n  /** Saved Tag */\n  SAVED_TAG = 'Saved',\n  /** Max number of Conversation starters for Agents/Assistants */\n  MAX_CONVO_STARTERS = 4,\n  /** Global/instance Project Name */\n  GLOBAL_PROJECT_NAME = 'instance',\n  /** Delimiter for MCP tools */\n  mcp_delimiter = '_mcp_',\n  /** Prefix for MCP plugins */\n  mcp_prefix = 'mcp_',\n  /** Placeholder Agent ID for Ephemeral Agents */\n  EPHEMERAL_AGENT_ID = 'ephemeral',\n}\n\nexport enum LocalStorageKeys {\n  /** Key for the admin defined App Title */\n  APP_TITLE = 'appTitle',\n  /** Key for the last conversation setup. */\n  LAST_CONVO_SETUP = 'lastConversationSetup',\n  /** Key for the last selected model. */\n  LAST_MODEL = 'lastSelectedModel',\n  /** Key for the last selected tools. */\n  LAST_TOOLS = 'lastSelectedTools',\n  /** Key for the last selected spec by name*/\n  LAST_SPEC = 'lastSelectedSpec',\n  /** Key for temporary files to delete */\n  FILES_TO_DELETE = 'filesToDelete',\n  /** Prefix key for the last selected assistant ID by index */\n  ASST_ID_PREFIX = 'assistant_id__',\n  /** Prefix key for the last selected agent ID by index */\n  AGENT_ID_PREFIX = 'agent_id__',\n  /** Key for the last selected fork setting */\n  FORK_SETTING = 'forkSetting',\n  /** Key for remembering the last selected option, instead of manually selecting */\n  REMEMBER_FORK_OPTION = 'rememberDefaultFork',\n  /** Key for remembering the split at target fork option modifier */\n  FORK_SPLIT_AT_TARGET = 'splitAtTarget',\n  /** Key for saving text drafts */\n  TEXT_DRAFT = 'textDraft_',\n  /** Key for saving file drafts */\n  FILES_DRAFT = 'filesDraft_',\n  /** Key for last Selected Prompt Category */\n  LAST_PROMPT_CATEGORY = 'lastPromptCategory',\n  /** Key for rendering User Messages as Markdown */\n  ENABLE_USER_MSG_MARKDOWN = 'enableUserMsgMarkdown',\n  /** Key for displaying analysis tool code input */\n  SHOW_ANALYSIS_CODE = 'showAnalysisCode',\n  /** Last selected MCP values per conversation ID */\n  LAST_MCP_ = 'LAST_MCP_',\n  /** Last checked toggle for Code Interpreter API per conversation ID */\n  LAST_CODE_TOGGLE_ = 'LAST_CODE_TOGGLE_',\n  /** Last checked toggle for Web Search per conversation ID */\n  LAST_WEB_SEARCH_TOGGLE_ = 'LAST_WEB_SEARCH_TOGGLE_',\n  /** Last checked toggle for File Search per conversation ID */\n  LAST_FILE_SEARCH_TOGGLE_ = 'LAST_FILE_SEARCH_TOGGLE_',\n  /** Last checked toggle for Artifacts per conversation ID */\n  LAST_ARTIFACTS_TOGGLE_ = 'LAST_ARTIFACTS_TOGGLE_',\n  /** Key for the last selected agent provider */\n  LAST_AGENT_PROVIDER = 'lastAgentProvider',\n  /** Key for the last selected agent model */\n  LAST_AGENT_MODEL = 'lastAgentModel',\n  /** Pin state for MCP tools per conversation ID */\n  PIN_MCP_ = 'PIN_MCP_',\n  /** Pin state for Web Search per conversation ID */\n  PIN_WEB_SEARCH_ = 'PIN_WEB_SEARCH_',\n  /** Pin state for Code Interpreter per conversation ID */\n  PIN_CODE_INTERPRETER_ = 'PIN_CODE_INTERPRETER_',\n}\n\nexport enum ForkOptions {\n  /** Key for direct path option */\n  DIRECT_PATH = 'directPath',\n  /** Key for including branches */\n  INCLUDE_BRANCHES = 'includeBranches',\n  /** Key for target level fork (default) */\n  TARGET_LEVEL = 'targetLevel',\n  /** Default option */\n  DEFAULT = 'default',\n}\n\n/**\n * Enum for Cohere related constants\n */\nexport enum CohereConstants {\n  /**\n   * Cohere API Endpoint, for special handling\n   */\n  API_URL = 'https://api.cohere.ai/v1',\n  /**\n   * Role for \"USER\" messages\n   */\n  ROLE_USER = 'USER',\n  /**\n   * Role for \"SYSTEM\" messages\n   */\n  ROLE_SYSTEM = 'SYSTEM',\n  /**\n   * Role for \"CHATBOT\" messages\n   */\n  ROLE_CHATBOT = 'CHATBOT',\n  /**\n   * Title message as required by Cohere\n   */\n  TITLE_MESSAGE = 'TITLE:',\n}\n\nexport enum SystemCategories {\n  ALL = 'sys__all__sys',\n  MY_PROMPTS = 'sys__my__prompts__sys',\n  NO_CATEGORY = 'sys__no__category__sys',\n  SHARED_PROMPTS = 'sys__shared__prompts__sys',\n}\n\nexport const providerEndpointMap = {\n  [EModelEndpoint.openAI]: EModelEndpoint.openAI,\n  [EModelEndpoint.bedrock]: EModelEndpoint.bedrock,\n  [EModelEndpoint.anthropic]: EModelEndpoint.anthropic,\n  [EModelEndpoint.azureOpenAI]: EModelEndpoint.azureOpenAI,\n};\n\nexport const specialVariables = {\n  current_date: true,\n  current_user: true,\n  iso_datetime: true,\n  current_datetime: true,\n};\n\nexport type TSpecialVarLabel = `com_ui_special_var_${keyof typeof specialVariables}`;\n","export enum ContentTypes {\n  TEXT = 'text',\n  THINK = 'think',\n  TEXT_DELTA = 'text_delta',\n  TOOL_CALL = 'tool_call',\n  IMAGE_FILE = 'image_file',\n  IMAGE_URL = 'image_url',\n  AGENT_UPDATE = 'agent_update',\n  ERROR = 'error',\n}\n\nexport enum StepTypes {\n  TOOL_CALLS = 'tool_calls',\n  MESSAGE_CREATION = 'message_creation',\n}\n\nexport enum ToolCallTypes {\n  FUNCTION = 'function',\n  RETRIEVAL = 'retrieval',\n  FILE_SEARCH = 'file_search',\n  CODE_INTERPRETER = 'code_interpreter',\n  /* Agents Tool Call */\n  TOOL_CALL = 'tool_call',\n}\n","import { z } from 'zod';\nimport * as s from './schemas';\n\ntype ThinkingConfig = {\n  type: 'enabled';\n  budget_tokens: number;\n};\ntype AnthropicReasoning = {\n  thinking?: ThinkingConfig | boolean;\n  thinkingBudget?: number;\n};\n\ntype AnthropicInput = BedrockConverseInput & {\n  additionalModelRequestFields: BedrockConverseInput['additionalModelRequestFields'] &\n    AnthropicReasoning;\n};\n\nexport const bedrockInputSchema = s.tConversationSchema\n  .pick({\n    /* LibreChat params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    artifacts: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    system: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    thinking: true,\n    thinkingBudget: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .transform((obj) => {\n    if ((obj as AnthropicInput).additionalModelRequestFields?.thinking != null) {\n      const _obj = obj as AnthropicInput;\n      obj.thinking = !!_obj.additionalModelRequestFields.thinking;\n      obj.thinkingBudget =\n        typeof _obj.additionalModelRequestFields.thinking === 'object'\n          ? (_obj.additionalModelRequestFields.thinking as ThinkingConfig)?.budget_tokens\n          : undefined;\n      delete obj.additionalModelRequestFields;\n    }\n    return s.removeNullishValues(obj);\n  })\n  .catch(() => ({}));\n\nexport type BedrockConverseInput = z.infer<typeof bedrockInputSchema>;\n\nexport const bedrockInputParser = s.tConversationSchema\n  .pick({\n    /* LibreChat params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    artifacts: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    thinking: true,\n    thinkingBudget: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .catchall(z.any())\n  .transform((data) => {\n    const knownKeys = [\n      'modelLabel',\n      'promptPrefix',\n      'resendFiles',\n      'iconURL',\n      'greeting',\n      'spec',\n      'maxOutputTokens',\n      'artifacts',\n      'additionalModelRequestFields',\n      'region',\n      'model',\n      'maxTokens',\n      'temperature',\n      'topP',\n      'stop',\n    ];\n\n    const additionalFields: Record<string, unknown> = {};\n    const typedData = data as Record<string, unknown>;\n\n    Object.entries(typedData).forEach(([key, value]) => {\n      if (!knownKeys.includes(key)) {\n        if (key === 'topK') {\n          additionalFields['top_k'] = value;\n        } else {\n          additionalFields[key] = value;\n        }\n        delete typedData[key];\n      }\n    });\n\n    /** Default thinking and thinkingBudget for 'anthropic.claude-3-7-sonnet' models, if not defined */\n    if (\n      typeof typedData.model === 'string' &&\n      (typedData.model.includes('anthropic.claude-3-7-sonnet') ||\n        /anthropic\\.claude-(?:[4-9](?:\\.\\d+)?(?:-\\d+)?-(?:sonnet|opus|haiku)|(?:sonnet|opus|haiku)-[4-9])/.test(\n          typedData.model,\n        ))\n    ) {\n      if (additionalFields.thinking === undefined) {\n        additionalFields.thinking = true;\n      } else if (additionalFields.thinking === false) {\n        delete additionalFields.thinking;\n        delete additionalFields.thinkingBudget;\n      }\n\n      if (additionalFields.thinking === true && additionalFields.thinkingBudget === undefined) {\n        additionalFields.thinkingBudget = 2000;\n      }\n      additionalFields.anthropic_beta = ['output-128k-2025-02-19'];\n    } else if (additionalFields.thinking != null || additionalFields.thinkingBudget != null) {\n      delete additionalFields.thinking;\n      delete additionalFields.thinkingBudget;\n    }\n\n    if (Object.keys(additionalFields).length > 0) {\n      typedData.additionalModelRequestFields = {\n        ...((typedData.additionalModelRequestFields as Record<string, unknown> | undefined) || {}),\n        ...additionalFields,\n      };\n    }\n\n    if (typedData.maxOutputTokens !== undefined) {\n      typedData.maxTokens = typedData.maxOutputTokens;\n    } else if (typedData.maxTokens !== undefined) {\n      typedData.maxOutputTokens = typedData.maxTokens;\n    }\n\n    return s.removeNullishValues(typedData) as BedrockConverseInput;\n  })\n  .catch(() => ({}));\n\n/**\n * Configures the \"thinking\" parameter based on given input and thinking options.\n *\n * @param data - The parsed Bedrock request options object\n * @returns The object with thinking configured appropriately\n */\nfunction configureThinking(data: AnthropicInput): AnthropicInput {\n  const updatedData = { ...data };\n  if (updatedData.additionalModelRequestFields?.thinking === true) {\n    updatedData.maxTokens = updatedData.maxTokens ?? updatedData.maxOutputTokens ?? 8192;\n    delete updatedData.maxOutputTokens;\n    const thinkingConfig: AnthropicReasoning['thinking'] = {\n      type: 'enabled',\n      budget_tokens: updatedData.additionalModelRequestFields.thinkingBudget ?? 2000,\n    };\n\n    if (thinkingConfig.budget_tokens > updatedData.maxTokens) {\n      thinkingConfig.budget_tokens = Math.floor(updatedData.maxTokens * 0.9);\n    }\n    updatedData.additionalModelRequestFields.thinking = thinkingConfig;\n    delete updatedData.additionalModelRequestFields.thinkingBudget;\n  }\n  return updatedData;\n}\n\nexport const bedrockOutputParser = (data: Record<string, unknown>) => {\n  const knownKeys = [...Object.keys(s.tConversationSchema.shape), 'topK', 'top_k'];\n  let result: Record<string, unknown> = {};\n\n  // Extract known fields from the root level\n  Object.entries(data).forEach(([key, value]) => {\n    if (knownKeys.includes(key)) {\n      result[key] = value;\n    }\n  });\n\n  // Extract known fields from additionalModelRequestFields\n  if (\n    typeof data.additionalModelRequestFields === 'object' &&\n    data.additionalModelRequestFields !== null\n  ) {\n    Object.entries(data.additionalModelRequestFields as Record<string, unknown>).forEach(\n      ([key, value]) => {\n        if (knownKeys.includes(key)) {\n          if (key === 'top_k') {\n            result['topK'] = value;\n          } else if (key === 'thinking' || key === 'thinkingBudget') {\n            return;\n          } else {\n            result[key] = value;\n          }\n        }\n      },\n    );\n  }\n\n  // Handle maxTokens and maxOutputTokens\n  if (result.maxTokens !== undefined && result.maxOutputTokens === undefined) {\n    result.maxOutputTokens = result.maxTokens;\n  } else if (result.maxOutputTokens !== undefined && result.maxTokens === undefined) {\n    result.maxTokens = result.maxOutputTokens;\n  }\n\n  result = configureThinking(result as AnthropicInput);\n  // Remove additionalModelRequestFields from the result if it doesn't thinking config\n  if ((result as AnthropicInput).additionalModelRequestFields?.thinking == null) {\n    delete result.additionalModelRequestFields;\n  }\n\n  return result;\n};\n","import dayjs from 'dayjs';\nimport type { ZodIssue } from 'zod';\nimport type * as a from './types/assistants';\nimport type * as s from './schemas';\nimport type * as t from './types';\nimport { ContentTypes } from './types/runs';\nimport {\n  openAISchema,\n  googleSchema,\n  EModelEndpoint,\n  anthropicSchema,\n  assistantSchema,\n  gptPluginsSchema,\n  // agentsSchema,\n  compactAgentsSchema,\n  compactGoogleSchema,\n  compactPluginsSchema,\n  compactAssistantSchema,\n} from './schemas';\nimport { bedrockInputSchema } from './bedrock';\nimport { alternateName } from './config';\n\ntype EndpointSchema =\n  | typeof openAISchema\n  | typeof googleSchema\n  | typeof anthropicSchema\n  | typeof gptPluginsSchema\n  | typeof assistantSchema\n  | typeof compactAgentsSchema\n  | typeof bedrockInputSchema;\n\nexport type EndpointSchemaKey = Exclude<EModelEndpoint, EModelEndpoint.chatGPTBrowser>;\n\nconst endpointSchemas: Record<EndpointSchemaKey, EndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.google]: googleSchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.gptPlugins]: gptPluginsSchema,\n  [EModelEndpoint.assistants]: assistantSchema,\n  [EModelEndpoint.azureAssistants]: assistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n};\n\n// const schemaCreators: Record<EModelEndpoint, (customSchema: DefaultSchemaValues) => EndpointSchema> = {\n//   [EModelEndpoint.google]: createGoogleSchema,\n// };\n\n/** Get the enabled endpoints from the `ENDPOINTS` environment variable */\nexport function getEnabledEndpoints() {\n  const defaultEndpoints: string[] = [\n    EModelEndpoint.openAI,\n    EModelEndpoint.agents,\n    EModelEndpoint.assistants,\n    EModelEndpoint.azureAssistants,\n    EModelEndpoint.azureOpenAI,\n    EModelEndpoint.google,\n    EModelEndpoint.chatGPTBrowser,\n    EModelEndpoint.gptPlugins,\n    EModelEndpoint.anthropic,\n    EModelEndpoint.bedrock,\n  ];\n\n  const endpointsEnv = process.env.ENDPOINTS ?? '';\n  let enabledEndpoints = defaultEndpoints;\n  if (endpointsEnv) {\n    enabledEndpoints = endpointsEnv\n      .split(',')\n      .filter((endpoint) => endpoint.trim())\n      .map((endpoint) => endpoint.trim());\n  }\n  return enabledEndpoints;\n}\n\n/** Orders an existing EndpointsConfig object based on enabled endpoint/custom ordering */\nexport function orderEndpointsConfig(endpointsConfig: t.TEndpointsConfig) {\n  if (!endpointsConfig) {\n    return {};\n  }\n  const enabledEndpoints = getEnabledEndpoints();\n  const endpointKeys = Object.keys(endpointsConfig);\n  const defaultCustomIndex = enabledEndpoints.indexOf(EModelEndpoint.custom);\n  return endpointKeys.reduce(\n    (accumulatedConfig: Record<string, t.TConfig | null | undefined>, currentEndpointKey) => {\n      const isCustom = !(currentEndpointKey in EModelEndpoint);\n      const isEnabled = enabledEndpoints.includes(currentEndpointKey);\n      if (!isEnabled && !isCustom) {\n        return accumulatedConfig;\n      }\n\n      const index = enabledEndpoints.indexOf(currentEndpointKey);\n\n      if (isCustom) {\n        accumulatedConfig[currentEndpointKey] = {\n          order: defaultCustomIndex >= 0 ? defaultCustomIndex : 9999,\n          ...(endpointsConfig[currentEndpointKey] as Omit<t.TConfig, 'order'> & { order?: number }),\n        };\n      } else if (endpointsConfig[currentEndpointKey]) {\n        accumulatedConfig[currentEndpointKey] = {\n          ...endpointsConfig[currentEndpointKey],\n          order: index,\n        };\n      }\n      return accumulatedConfig;\n    },\n    {},\n  );\n}\n\n/** Converts an array of Zod issues into a string. */\nexport function errorsToString(errors: ZodIssue[]) {\n  return errors\n    .map((error) => {\n      const field = error.path.join('.');\n      const message = error.message;\n\n      return `${field}: ${message}`;\n    })\n    .join(' ');\n}\n\nexport function getFirstDefinedValue(possibleValues: string[]) {\n  let returnValue;\n  for (const value of possibleValues) {\n    if (value) {\n      returnValue = value;\n      break;\n    }\n  }\n  return returnValue;\n}\n\nexport function getNonEmptyValue(possibleValues: string[]) {\n  for (const value of possibleValues) {\n    if (value && value.trim() !== '') {\n      return value;\n    }\n  }\n  return undefined;\n}\n\nexport type TPossibleValues = {\n  models: string[];\n  secondaryModels?: string[];\n};\n\nexport const parseConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint: EndpointSchemaKey;\n  endpointType?: EndpointSchemaKey | null;\n  conversation: Partial<s.TConversation | s.TPreset> | null;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  let schema = endpointSchemas[endpoint] as EndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = endpointSchemas[endpointType];\n  }\n\n  // if (defaultSchema && schemaCreators[endpoint]) {\n  //   schema = schemaCreators[endpoint](defaultSchema);\n  // }\n\n  const convo = schema?.parse(conversation) as s.TConversation | undefined;\n  const { models, secondaryModels } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  if (secondaryModels && convo?.agentOptions) {\n    convo.agentOptions.model = getFirstDefinedValue(secondaryModels) ?? convo.agentOptions.model;\n  }\n\n  return convo;\n};\n\n/** Match GPT followed by digit, optional decimal, and optional suffix\n *\n * Examples: gpt-4, gpt-4o, gpt-4.5, gpt-5a, etc. */\nconst extractGPTVersion = (modelStr: string): string => {\n  const gptMatch = modelStr.match(/gpt-(\\d+(?:\\.\\d+)?)([a-z])?/i);\n  if (gptMatch) {\n    const version = gptMatch[1];\n    const suffix = gptMatch[2] || '';\n    return `GPT-${version}${suffix}`;\n  }\n  return '';\n};\n\n/** Match omni models (o1, o3, etc.), \"o\" followed by a digit, possibly with decimal */\nconst extractOmniVersion = (modelStr: string): string => {\n  const omniMatch = modelStr.match(/\\bo(\\d+(?:\\.\\d+)?)\\b/i);\n  if (omniMatch) {\n    const version = omniMatch[1];\n    return `o${version}`;\n  }\n  return '';\n};\n\nexport const getResponseSender = (endpointOption: t.TEndpointOption): string => {\n  const {\n    model: _m,\n    endpoint: _e,\n    endpointType,\n    modelDisplayLabel: _mdl,\n    chatGptLabel: _cgl,\n    modelLabel: _ml,\n  } = endpointOption;\n\n  const endpoint = _e as EModelEndpoint;\n\n  const model = _m ?? '';\n  const modelDisplayLabel = _mdl ?? '';\n  const chatGptLabel = _cgl ?? '';\n  const modelLabel = _ml ?? '';\n  if (\n    [\n      EModelEndpoint.openAI,\n      EModelEndpoint.bedrock,\n      EModelEndpoint.gptPlugins,\n      EModelEndpoint.azureOpenAI,\n      EModelEndpoint.chatGPTBrowser,\n    ].includes(endpoint)\n  ) {\n    if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (modelLabel) {\n      return modelLabel;\n    } else if (model && extractOmniVersion(model)) {\n      return extractOmniVersion(model);\n    } else if (model && (model.includes('mistral') || model.includes('codestral'))) {\n      return 'Mistral';\n    } else if (model && model.includes('deepseek')) {\n      return 'Deepseek';\n    } else if (model && model.includes('gpt-')) {\n      const gptVersion = extractGPTVersion(model);\n      return gptVersion || 'GPT';\n    }\n    return (alternateName[endpoint] as string | undefined) ?? 'ChatGPT';\n  }\n\n  if (endpoint === EModelEndpoint.anthropic) {\n    return modelLabel || 'Claude';\n  }\n\n  if (endpoint === EModelEndpoint.bedrock) {\n    return modelLabel || alternateName[endpoint];\n  }\n\n  if (endpoint === EModelEndpoint.google) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (model?.toLowerCase().includes('gemma') === true) {\n      return 'Gemma';\n    }\n\n    return 'Gemini';\n  }\n\n  if (endpoint === EModelEndpoint.custom || endpointType === EModelEndpoint.custom) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && extractOmniVersion(model)) {\n      return extractOmniVersion(model);\n    } else if (model && (model.includes('mistral') || model.includes('codestral'))) {\n      return 'Mistral';\n    } else if (model && model.includes('deepseek')) {\n      return 'Deepseek';\n    } else if (model && model.includes('gpt-')) {\n      const gptVersion = extractGPTVersion(model);\n      return gptVersion || 'GPT';\n    } else if (modelDisplayLabel) {\n      return modelDisplayLabel;\n    }\n\n    return 'AI';\n  }\n\n  return '';\n};\n\ntype CompactEndpointSchema =\n  | typeof openAISchema\n  | typeof compactAssistantSchema\n  | typeof compactAgentsSchema\n  | typeof compactGoogleSchema\n  | typeof anthropicSchema\n  | typeof bedrockInputSchema\n  | typeof compactPluginsSchema;\n\nconst compactEndpointSchemas: Record<EndpointSchemaKey, CompactEndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.assistants]: compactAssistantSchema,\n  [EModelEndpoint.azureAssistants]: compactAssistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.google]: compactGoogleSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.gptPlugins]: compactPluginsSchema,\n};\n\nexport const parseCompactConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint?: EndpointSchemaKey;\n  endpointType?: EndpointSchemaKey | null;\n  conversation: Partial<s.TConversation | s.TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  if (!endpoint) {\n    throw new Error(`undefined endpoint: ${endpoint}`);\n  }\n\n  let schema = compactEndpointSchemas[endpoint] as CompactEndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = compactEndpointSchemas[endpointType];\n  }\n\n  if (!schema) {\n    throw new Error(`Unknown endpointType: ${endpointType}`);\n  }\n\n  const convo = schema.parse(conversation) as s.TConversation | null;\n  // const { models, secondaryModels } = possibleValues ?? {};\n  const { models } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  // if (secondaryModels && convo.agentOptions) {\n  //   convo.agentOptionmodel = getFirstDefinedValue(secondaryModels) ?? convo.agentOptionmodel;\n  // }\n\n  return convo;\n};\n\nexport function parseTextParts(\n  contentParts: a.TMessageContentParts[],\n  skipReasoning: boolean = false,\n): string {\n  let result = '';\n\n  for (const part of contentParts) {\n    if (!part.type) {\n      continue;\n    }\n    if (part.type === ContentTypes.TEXT) {\n      const textValue = typeof part.text === 'string' ? part.text : part.text.value;\n\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    } else if (part.type === ContentTypes.THINK && !skipReasoning) {\n      const textValue = typeof part.think === 'string' ? part.think : '';\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    }\n  }\n\n  return result;\n}\n\nexport const SEPARATORS = ['.', '?', '!', '۔', '。', '‥', ';', '¡', '¿', '\\n', '```'];\n\nexport function findLastSeparatorIndex(text: string, separators = SEPARATORS): number {\n  let lastIndex = -1;\n  for (const separator of separators) {\n    const index = text.lastIndexOf(separator);\n    if (index > lastIndex) {\n      lastIndex = index;\n    }\n  }\n  return lastIndex;\n}\n\nexport function replaceSpecialVars({ text, user }: { text: string; user?: t.TUser | null }) {\n  let result = text;\n  if (!result) {\n    return result;\n  }\n\n  // e.g., \"2024-04-29 (1)\" (1=Monday)\n  const currentDate = dayjs().format('YYYY-MM-DD');\n  const dayNumber = dayjs().day();\n  const combinedDate = `${currentDate} (${dayNumber})`;\n  result = result.replace(/{{current_date}}/gi, combinedDate);\n\n  const currentDatetime = dayjs().format('YYYY-MM-DD HH:mm:ss');\n  result = result.replace(/{{current_datetime}}/gi, `${currentDatetime} (${dayNumber})`);\n\n  const isoDatetime = dayjs().toISOString();\n  result = result.replace(/{{iso_datetime}}/gi, isoDatetime);\n\n  if (user && user.name) {\n    result = result.replace(/{{current_user}}/gi, user.name);\n  }\n\n  return result;\n}\n","import type { ZodError } from 'zod';\nimport type {\n  TAzureGroups,\n  TAzureGroupMap,\n  TAzureModelGroupMap,\n  TValidatedAzureConfig,\n  TAzureConfigValidationResult,\n} from '../src/config';\nimport { extractEnvVariable, envVarRegex } from '../src/utils';\nimport { azureGroupConfigsSchema } from '../src/config';\nimport { errorsToString } from '../src/parsers';\n\nexport const deprecatedAzureVariables = [\n  /* \"related to\" precedes description text */\n  { key: 'AZURE_OPENAI_DEFAULT_MODEL', description: 'setting a default model' },\n  { key: 'AZURE_OPENAI_MODELS', description: 'setting models' },\n  {\n    key: 'AZURE_USE_MODEL_AS_DEPLOYMENT_NAME',\n    description: 'using model names as deployment names',\n  },\n  { key: 'AZURE_API_KEY', description: 'setting a single Azure API key' },\n  { key: 'AZURE_OPENAI_API_INSTANCE_NAME', description: 'setting a single Azure instance name' },\n  {\n    key: 'AZURE_OPENAI_API_DEPLOYMENT_NAME',\n    description: 'setting a single Azure deployment name',\n  },\n  { key: 'AZURE_OPENAI_API_VERSION', description: 'setting a single Azure API version' },\n  {\n    key: 'AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure completions deployment name',\n  },\n  {\n    key: 'AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure embeddings deployment name',\n  },\n  {\n    key: 'PLUGINS_USE_AZURE',\n    description: 'using Azure for Plugins',\n  },\n];\n\nexport const conflictingAzureVariables = [\n  {\n    key: 'INSTANCE_NAME',\n  },\n  {\n    key: 'DEPLOYMENT_NAME',\n  },\n];\n\nexport function validateAzureGroups(configs: TAzureGroups): TAzureConfigValidationResult {\n  let isValid = true;\n  const modelNames: string[] = [];\n  const modelGroupMap: TAzureModelGroupMap = {};\n  const groupMap: TAzureGroupMap = {};\n  const errors: (ZodError | string)[] = [];\n\n  const result = azureGroupConfigsSchema.safeParse(configs);\n  if (!result.success) {\n    isValid = false;\n    errors.push(errorsToString(result.error.errors));\n  } else {\n    for (const group of result.data) {\n      const {\n        group: groupName,\n        apiKey,\n        instanceName = '',\n        deploymentName = '',\n        version = '',\n        baseURL = '',\n        additionalHeaders,\n        models,\n        serverless = false,\n        ...rest\n      } = group;\n\n      if (groupMap[groupName]) {\n        errors.push(`Duplicate group name detected: \"${groupName}\". Group names must be unique.`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (serverless && !baseURL) {\n        errors.push(`Group \"${groupName}\" is serverless but missing mandatory \"baseURL.\"`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (!instanceName && !serverless) {\n        errors.push(\n          `Group \"${groupName}\" is missing an \"instanceName\" for non-serverless configuration.`,\n        );\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      groupMap[groupName] = {\n        apiKey,\n        instanceName,\n        deploymentName,\n        version,\n        baseURL,\n        additionalHeaders,\n        models,\n        serverless,\n        ...rest,\n      };\n\n      for (const modelName in group.models) {\n        modelNames.push(modelName);\n        const model = group.models[modelName];\n\n        if (modelGroupMap[modelName]) {\n          errors.push(\n            `Duplicate model name detected: \"${modelName}\". Model names must be unique across groups.`,\n          );\n          return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n        }\n\n        if (serverless) {\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n          continue;\n        }\n\n        const groupDeploymentName = group.deploymentName ?? '';\n        const groupVersion = group.version ?? '';\n        if (typeof model === 'boolean') {\n          // For boolean models, check if group-level deploymentName and version are present.\n          if (!groupDeploymentName || !groupVersion) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n        } else {\n          const modelDeploymentName = model.deploymentName ?? '';\n          const modelVersion = model.version ?? '';\n          // For object models, check if deploymentName and version are required but missing.\n          if ((!modelDeploymentName && !groupDeploymentName) || (!modelVersion && !groupVersion)) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a required deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n            // deploymentName: modelDeploymentName || groupDeploymentName,\n            // version: modelVersion || groupVersion,\n          };\n        }\n      }\n    }\n  }\n\n  return { isValid, modelNames, modelGroupMap, groupMap, errors };\n}\n\ntype AzureOptions = {\n  azureOpenAIApiKey: string;\n  azureOpenAIApiInstanceName?: string;\n  azureOpenAIApiDeploymentName?: string;\n  azureOpenAIApiVersion?: string;\n};\n\ntype MappedAzureConfig = {\n  azureOptions: AzureOptions;\n  baseURL?: string;\n  headers?: Record<string, string>;\n  serverless?: boolean;\n};\n\nexport function mapModelToAzureConfig({\n  modelName,\n  modelGroupMap,\n  groupMap,\n}: Omit<TValidatedAzureConfig, 'modelNames'> & {\n  modelName: string;\n}): MappedAzureConfig {\n  const modelConfig = modelGroupMap[modelName];\n  if (!modelConfig) {\n    throw new Error(`Model named \"${modelName}\" not found in configuration.`);\n  }\n\n  const groupConfig = groupMap[modelConfig.group];\n  if (!groupConfig) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" for model \"${modelName}\" not found in configuration.`,\n    );\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n\n  if (!instanceName && groupConfig.serverless !== true) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const baseURL = groupConfig.baseURL ?? '';\n  if (groupConfig.serverless === true && !baseURL) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  if (groupConfig.serverless === true) {\n    const result: MappedAzureConfig = {\n      azureOptions: {\n        azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n        azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n      },\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n    };\n\n    const apiKeyValue = result.azureOptions.azureOpenAIApiKey;\n    if (typeof apiKeyValue === 'string' && envVarRegex.test(apiKeyValue)) {\n      throw new Error(`Azure configuration environment variable \"${apiKeyValue}\" was not found.`);\n    }\n\n    if (groupConfig.additionalHeaders) {\n      result.headers = groupConfig.additionalHeaders;\n    }\n\n    return result;\n  }\n\n  if (!instanceName) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const modelDetails = groupConfig.models[modelName];\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n        deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n        version: modelDetails.version ?? groupConfig.version,\n      }\n      : {\n        deploymentName: groupConfig.deploymentName,\n        version: groupConfig.version,\n      };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${modelName}\" in group \"${modelConfig.group}\" is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    azureOpenAIApiDeploymentName: extractEnvVariable(deploymentName),\n    azureOpenAIApiVersion: extractEnvVariable(version),\n  };\n\n  for (const value of Object.values(azureOptions)) {\n    if (typeof value === 'string' && envVarRegex.test(value)) {\n      throw new Error(`Azure configuration environment variable \"${value}\" was not found.`);\n    }\n  }\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n\nexport function mapGroupToAzureConfig({\n  groupName,\n  groupMap,\n}: {\n  groupName: string;\n  groupMap: TAzureGroupMap;\n}): MappedAzureConfig {\n  const groupConfig = groupMap[groupName];\n  if (!groupConfig) {\n    throw new Error(`Group named \"${groupName}\" not found in configuration.`);\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n  const serverless = groupConfig.serverless ?? false;\n  const baseURL = groupConfig.baseURL ?? '';\n\n  if (!instanceName && !serverless) {\n    throw new Error(\n      `Group \"${groupName}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  if (serverless && !baseURL) {\n    throw new Error(\n      `Group \"${groupName}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  const models = Object.keys(groupConfig.models);\n  if (models.length === 0) {\n    throw new Error(`Group \"${groupName}\" does not have any models configured.`);\n  }\n\n  // Use the first available model in the group\n  const firstModelName = models[0];\n  const modelDetails = groupConfig.models[firstModelName];\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    // DeploymentName and Version set below\n  };\n\n  if (serverless) {\n    return {\n      azureOptions,\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n      ...(groupConfig.additionalHeaders && { headers: groupConfig.additionalHeaders }),\n    };\n  }\n\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n        deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n        version: modelDetails.version ?? groupConfig.version,\n      }\n      : {\n        deploymentName: groupConfig.deploymentName,\n        version: groupConfig.version,\n      };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${firstModelName}\" in group \"${groupName}\" or the group itself is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  azureOptions.azureOpenAIApiDeploymentName = extractEnvVariable(deploymentName);\n  azureOptions.azureOpenAIApiVersion = extractEnvVariable(version);\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n","export enum ArtifactModes {\n  DEFAULT = 'default',\n  SHADCNUI = 'shadcnui',\n  CUSTOM = 'custom',\n}\n\nexport const utils = `\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`;\nexport const accordian = `import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n`;\nexport const alertDialog = `import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n`;\nexport const alert = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border border-gray-200 p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-gray-950 dark:border-gray-800 dark:[&>svg]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"border-red-500/50 text-red-500 dark:border-red-500 [&>svg]:text-red-500 dark:border-red-900/50 dark:text-red-900 dark:dark:border-red-900 dark:[&>svg]:text-red-900\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n\n`;\nexport const avatar = `import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n\n`;\nexport const badge = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border border-gray-200 px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 dark:border-gray-800 dark:focus:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-gray-900 text-gray-50 hover:bg-gray-900/80 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/80\",\n        secondary:\n          \"border-transparent bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        destructive:\n          \"border-transparent bg-red-500 text-gray-50 hover:bg-red-500/80 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/80\",\n        outline: \"text-gray-950 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n\n`;\nexport const breadcrumb = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-gray-500 sm:gap-2.5 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-gray-950 dark:hover:text-gray-50\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-gray-950 dark:text-gray-50\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n\n`;\nexport const button = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from '../../lib/utils';\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n        destructive:\n          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        secondary:\n          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n`;\nexport const calendar = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-gray-500 rounded-md w-9 font-normal text-[0.8rem] dark:text-gray-400\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-gray-100/50 [&:has([aria-selected])]:bg-gray-100 first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20 dark:[&:has([aria-selected].day-outside)]:bg-gray-800/50 dark:[&:has([aria-selected])]:bg-gray-800\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-gray-900 text-gray-50 hover:bg-gray-900 hover:text-gray-50 focus:bg-gray-900 focus:text-gray-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50 dark:hover:text-gray-900 dark:focus:bg-gray-50 dark:focus:text-gray-900\",\n        day_today: \"bg-gray-100 text-gray-900 dark:bg-gray-800 dark:text-gray-50\",\n        day_outside:\n          \"day-outside text-gray-500 opacity-50 aria-selected:bg-gray-100/50 aria-selected:text-gray-500 aria-selected:opacity-30 dark:text-gray-400 dark:aria-selected:bg-gray-800/50 dark:aria-selected:text-gray-400\",\n        day_disabled: \"text-gray-500 opacity-50 dark:text-gray-400\",\n        day_range_middle:\n          \"aria-selected:bg-gray-100 aria-selected:text-gray-900 dark:aria-selected:bg-gray-800 dark:aria-selected:text-gray-50\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n\n`;\nexport const card = `import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-gray-200 bg-white text-gray-950 shadow-sm dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n`;\nexport const carousel = `import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { Button } from \"./button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n\n`;\nexport const checkbox = `import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-gray-200 dark:border-gray-900 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=checked]:text-gray-50  dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=checked]:bg-gray-50 dark:data-[state=checked]:text-gray-900\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n\n`;\nexport const collapsible = `import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n\n`;\nexport const dialog = `import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-gray-100 data-[state=open]:text-gray-500 dark:ring-offset-gray-950 dark:focus:ring-gray-300 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-400\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n\n`;\nexport const drawer = `import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-gray-100 dark:bg-gray-800\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n\n`;\nexport const dropdownMenu = `import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 data-[state=open]:bg-gray-100 dark:focus:bg-gray-800 dark:data-[state=open]:bg-gray-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\n`;\nexport const hoverCard = `import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n\n`;\nexport const input = `import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n`;\nexport const label = `import * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '../../lib/utils';\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n`;\nexport const menuBar = `\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border border-gray-200 bg-white p-1 dark:border-gray-800 dark:bg-gray-950\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-gray-500 dark:text-gray-400\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n\n`;\nexport const navigationMenu = `import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-white px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900 focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-gray-100/50 data-[state=open]:bg-gray-100/50 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[active]:bg-gray-800/50 dark:data-[state=open]:bg-gray-800/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\"\"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)] dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-gray-200 shadow-md dark:bg-gray-800\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n\n`;\nexport const pagination = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { ButtonProps, buttonVariants } from \"./button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n\n`;\nexport const popover = `import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n\n`;\nexport const progress = `import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-gray-900 transition-all dark:bg-gray-50\"\n      style={{ transform: \\`translateX(-\\${100 - (value || 0)}%)\\` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n`;\nexport const radioGroup = `import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-gray-200 dark:border-gray-900 text-gray-900 ring-offset-white focus:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50  dark:text-gray-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n\n`;\nexport const select = `import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus:ring-gray-300\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n\n`;\nexport const separator = `import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-gray-200 dark:bg-gray-800\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n`;\nexport const skeleton = `import { cn } from \"../../lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-gray-100 dark:bg-gray-800\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n`;\nexport const slider = `import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-gray-900 dark:bg-gray-50\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-gray-900 bg-white ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-50 dark:bg-gray-950 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n\n`;\nexport const switchComponent = `import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=unchecked]:bg-gray-200 dark:focus-visible:ring-gray-300 dark:focus-visible:ring-offset-gray-950 dark:data-[state=checked]:bg-gray-50 dark:data-[state=unchecked]:bg-gray-800\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0 dark:bg-gray-950\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n\n`;\nexport const table = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-gray-100/50 font-medium [&>tr]:last:border-b-0 dark:bg-gray-800/50\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-gray-100/50 data-[state=selected]:bg-gray-100 dark:hover:bg-gray-800/50 dark:data-[state=selected]:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-gray-500 [&:has([role=checkbox])]:pr-0 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n\n`;\nexport const tabs = `import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 text-gray-500 dark:bg-gray-800 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-gray-950 data-[state=active]:shadow-sm dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=active]:bg-gray-950 dark:data-[state=active]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n\n`;\nexport const textarea = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n\n`;\nexport const toast = `import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border border-gray-200 p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full dark:border-gray-800\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"destructive group border-red-500 bg-red-500 text-gray-50 dark:border-red-900 dark:bg-red-900 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border border-gray-200 bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-gray-100/40 group-[.destructive]:hover:border-red-500/30 group-[.destructive]:hover:bg-red-500 group-[.destructive]:hover:text-gray-50 group-[.destructive]:focus:ring-red-500 dark:border-gray-800 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:focus:ring-gray-300 dark:group-[.destructive]:border-gray-800/40 dark:group-[.destructive]:hover:border-red-900/30 dark:group-[.destructive]:hover:bg-red-900 dark:group-[.destructive]:hover:text-gray-50 dark:group-[.destructive]:focus:ring-red-900\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-gray-950/50 opacity-0 transition-opacity hover:text-gray-950 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600 dark:text-gray-50/50 dark:hover:text-gray-50\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n\n`;\nexport const toaster = `import {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"./toast\"\nimport { useToast } from \"./use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n\n`;\nexport const toggleGroup = `import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\nimport { toggleVariants } from \"./toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n\n`;\nexport const toggle = `import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 hover:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-gray-100 data-[state=on]:text-gray-900 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-400 dark:focus-visible:ring-gray-300 dark:data-[state=on]:bg-gray-800 dark:data-[state=on]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-gray-200 bg-transparent hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n\n`;\nexport const tooltip = `import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border border-gray-200 bg-white px-3 py-1.5 text-sm text-gray-950 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n\n`;\nexport const useToast = `import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"./toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n`;\n\nexport const shadcnComponents = {\n  utils: utils,\n  accordian: accordian,\n  alertDialog: alertDialog,\n  alert: alert,\n  avatar: avatar,\n  badge: badge,\n  breadcrumb: breadcrumb,\n  button: button,\n  calendar: calendar,\n  card: card,\n  carousel: carousel,\n  checkbox: checkbox,\n  collapsible: collapsible,\n  dialog: dialog,\n  drawer: drawer,\n  dropdownMenu: dropdownMenu,\n  hoverCard: hoverCard,\n  input: input,\n  label: label,\n  menuBar: menuBar,\n  navigationMenu: navigationMenu,\n  pagination: pagination,\n  popover: popover,\n  progress: progress,\n  radioGroup: radioGroup,\n  select: select,\n  separator: separator,\n  skeleton: skeleton,\n  slider: slider,\n  switchComponent: switchComponent,\n  table: table,\n  tabs: tabs,\n  textarea: textarea,\n  toast: toast,\n  toaster: toaster,\n  toggleGroup: toggleGroup,\n  toggle: toggle,\n  tooltip: tooltip,\n  useToast: useToast,\n};\n\nexport const essentialShadcnComponents = {\n  utils: utils,\n  avatar: avatar,\n  button: button,\n  card: card,\n  checkbox: checkbox,\n  input: input,\n  label: label,\n  radioGroup: radioGroup,\n  select: select,\n  textarea: textarea,\n  // badge: badge,\n  // dialog: dialog,\n  // table: table,\n};\n","import { z, ZodArray, ZodError, ZodIssueCode } from 'zod';\nimport { tConversationSchema, googleSettings as google, openAISettings as openAI } from './schemas';\nimport type { ZodIssue } from 'zod';\nimport type { TConversation, TSetOption, TPreset } from './schemas';\n\nexport type GoogleSettings = Partial<typeof google>;\nexport type OpenAISettings = Partial<typeof google>;\n\nexport type ComponentType =\n  | 'input'\n  | 'textarea'\n  | 'slider'\n  | 'checkbox'\n  | 'switch'\n  | 'dropdown'\n  | 'combobox'\n  | 'tags';\n\nexport type OptionType = 'conversation' | 'model' | 'custom';\n\nexport type Option = Record<string, unknown> & {\n  label?: string;\n  value: string | number | null;\n};\n\nexport type OptionWithIcon = Option & { icon?: React.ReactNode };\n\nexport enum ComponentTypes {\n  Input = 'input',\n  Textarea = 'textarea',\n  Slider = 'slider',\n  Checkbox = 'checkbox',\n  Switch = 'switch',\n  Dropdown = 'dropdown',\n  Combobox = 'combobox',\n  Tags = 'tags',\n}\n\nexport enum SettingTypes {\n  Number = 'number',\n  Boolean = 'boolean',\n  String = 'string',\n  Enum = 'enum',\n  Array = 'array',\n}\n\nexport enum OptionTypes {\n  Conversation = 'conversation',\n  Model = 'model',\n  Custom = 'custom',\n}\nexport interface SettingDefinition {\n  key: string;\n  description?: string;\n  type: 'number' | 'boolean' | 'string' | 'enum' | 'array';\n  default?: number | boolean | string | string[];\n  showLabel?: boolean;\n  showDefault?: boolean;\n  options?: string[];\n  range?: SettingRange;\n  enumMappings?: Record<string, number | boolean | string>;\n  component: ComponentType;\n  optionType?: OptionType;\n  columnSpan?: number;\n  columns?: number;\n  label?: string;\n  placeholder?: string;\n  labelCode?: boolean;\n  placeholderCode?: boolean;\n  descriptionCode?: boolean;\n  minText?: number;\n  maxText?: number;\n  minTags?: number; // Specific to tags component\n  maxTags?: number; // Specific to tags component\n  includeInput?: boolean; // Specific to slider component\n  descriptionSide?: 'top' | 'right' | 'bottom' | 'left';\n  items?: OptionWithIcon[]; // Specific to combobox component\n  searchPlaceholder?: string; // Specific to combobox component\n  selectPlaceholder?: string; // Specific to combobox component\n  searchPlaceholderCode?: boolean; // Specific to combobox component\n  selectPlaceholderCode?: boolean; // Specific to combobox component\n}\n\nexport type DynamicSettingProps = Partial<SettingDefinition> & {\n  readonly?: boolean;\n  settingKey: string;\n  setOption: TSetOption;\n  conversation: Partial<TConversation> | Partial<TPreset> | null;\n  defaultValue?: number | boolean | string | string[];\n  className?: string;\n  inputClassName?: string;\n};\n\nconst requiredSettingFields = ['key', 'type', 'component'];\n\nexport interface SettingRange {\n  min: number;\n  max: number;\n  step?: number;\n}\n\nexport type SettingsConfiguration = SettingDefinition[];\n\nexport function generateDynamicSchema(settings: SettingsConfiguration) {\n  const schemaFields: { [key: string]: z.ZodTypeAny } = {};\n\n  for (const setting of settings) {\n    const {\n      key,\n      type,\n      default: defaultValue,\n      range,\n      options,\n      minText,\n      maxText,\n      minTags,\n      maxTags,\n    } = setting;\n\n    if (type === SettingTypes.Number) {\n      let schema = z.number();\n      if (range) {\n        schema = schema.min(range.min);\n        schema = schema.max(range.max);\n      }\n      if (typeof defaultValue === 'number') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Boolean) {\n      const schema = z.boolean();\n      if (typeof defaultValue === 'boolean') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.String) {\n      let schema = z.string();\n      if (minText) {\n        schema = schema.min(minText);\n      }\n      if (maxText) {\n        schema = schema.max(maxText);\n      }\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Enum) {\n      if (!options || options.length === 0) {\n        console.warn(`Missing or empty 'options' for enum setting '${key}'.`);\n        continue;\n      }\n\n      const schema = z.enum(options as [string, ...string[]]);\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Array) {\n      let schema: z.ZodSchema = z.array(z.string().or(z.number()));\n      if (minTags && schema instanceof ZodArray) {\n        schema = schema.min(minTags);\n      }\n      if (maxTags && schema instanceof ZodArray) {\n        schema = schema.max(maxTags);\n      }\n\n      if (defaultValue && Array.isArray(defaultValue)) {\n        schema = schema.default(defaultValue);\n      }\n\n      schemaFields[key] = schema;\n      continue;\n    }\n\n    console.warn(`Unsupported setting type: ${type}`);\n  }\n\n  return z.object(schemaFields);\n}\n\nconst ZodTypeToSettingType: Record<string, string | undefined> = {\n  ZodString: 'string',\n  ZodNumber: 'number',\n  ZodBoolean: 'boolean',\n};\n\nconst minColumns = 1;\nconst maxColumns = 4;\nconst minSliderOptions = 2;\nconst minDropdownOptions = 2;\nconst minComboboxOptions = 2;\n\n/**\n * Validates the provided setting using the constraints unique to each component type.\n * @throws {ZodError} Throws a ZodError if any validation fails.\n */\nexport function validateSettingDefinitions(settings: SettingsConfiguration): void {\n  const errors: ZodIssue[] = [];\n  // Validate columns\n  const columnsSet = new Set<number>();\n  for (const setting of settings) {\n    if (setting.columns !== undefined) {\n      if (setting.columns < minColumns || setting.columns > maxColumns) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid columns value for setting ${setting.key}. Must be between ${minColumns} and ${maxColumns}.`,\n          path: ['columns'],\n        });\n      } else {\n        columnsSet.add(setting.columns);\n      }\n    }\n  }\n\n  const columns = columnsSet.size === 1 ? columnsSet.values().next().value : 2;\n\n  for (const setting of settings) {\n    for (const field of requiredSettingFields) {\n      if (setting[field as keyof SettingDefinition] === undefined) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Missing required field ${field} for setting ${setting.key}.`,\n          path: [field],\n        });\n      }\n    }\n\n    // check accepted types\n    const settingTypes = Object.values(SettingTypes);\n    if (!settingTypes.includes(setting.type as SettingTypes)) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid type for setting ${setting.key}. Must be one of ${settingTypes.join(\n          ', ',\n        )}.`,\n        path: ['type'],\n      });\n    }\n\n    // Predefined constraints based on components\n    if (\n      (setting.component === ComponentTypes.Tags && setting.type !== SettingTypes.Array) ||\n      (setting.component !== ComponentTypes.Tags && setting.type === SettingTypes.Array)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Tags component for setting ${setting.key} must have type array.`,\n        path: ['type'],\n      });\n    }\n\n    if (setting.component === ComponentTypes.Tags) {\n      if (setting.minTags !== undefined && setting.minTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minTags'],\n        });\n      }\n      if (setting.maxTags !== undefined && setting.maxTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxTags'],\n        });\n      }\n      if (setting.default && !Array.isArray(setting.default)) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must be an array.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.maxTags && (setting.default as []).length > setting.maxTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at most ${setting.maxTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.minTags && (setting.default as []).length < setting.minTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at least ${setting.minTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (!setting.default) {\n        setting.default = [];\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.type === SettingTypes.Number && setting.component === ComponentTypes.Textarea) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Textarea component for setting ${setting.key} must have type string.`,\n          path: ['type'],\n        });\n        // continue;\n      }\n\n      if (\n        setting.minText !== undefined &&\n        setting.maxText !== undefined &&\n        setting.minText > setting.maxText\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `For setting ${setting.key}, minText cannot be greater than maxText.`,\n          path: [setting.key, 'minText', 'maxText'],\n        });\n        // continue;\n      }\n      if (!setting.placeholder) {\n        setting.placeholder = '';\n      } // Default placeholder\n    }\n\n    if (setting.component === ComponentTypes.Slider) {\n      if (setting.type === SettingTypes.Number && !setting.range) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} must have a range if type is number.`,\n          path: ['range'],\n        });\n        // continue;\n      }\n      if (\n        setting.type === SettingTypes.Enum &&\n        (!setting.options || setting.options.length < minSliderOptions)\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} requires at least ${minSliderOptions} options for enum type.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      setting.includeInput =\n        setting.type === SettingTypes.Number ? (setting.includeInput ?? true) : false; // Default to true if type is number\n    }\n\n    if (setting.component === ComponentTypes.Slider && setting.type === SettingTypes.Number) {\n      if (setting.default === undefined && setting.range) {\n        // Set default to the middle of the range if unspecified\n        setting.default = Math.round((setting.range.min + setting.range.max) / 2);\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Checkbox ||\n      setting.component === ComponentTypes.Switch\n    ) {\n      if (setting.options && setting.options.length > 2) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Checkbox/Switch component for setting ${setting.key} must have 1-2 options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.type === SettingTypes.Boolean) {\n        setting.default = false; // Default to false if type is boolean\n      }\n    }\n\n    if (setting.component === ComponentTypes.Dropdown) {\n      if (!setting.options || setting.options.length < minDropdownOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Dropdown component for setting ${setting.key} requires at least ${minDropdownOptions} options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0]; // Default to first option if not specified\n      }\n    }\n\n    if (setting.component === ComponentTypes.Combobox) {\n      if (!setting.options || setting.options.length < minComboboxOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Combobox component for setting ${setting.key} requires at least ${minComboboxOptions} options.`,\n          path: ['options'],\n        });\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0];\n      }\n    }\n\n    // Default columnSpan\n    if (!setting.columnSpan) {\n      setting.columnSpan = Math.floor((columns ?? 0) / 2);\n    }\n\n    // Default label to key\n    if (!setting.label) {\n      setting.label = setting.key;\n    }\n\n    // Validate minText and maxText for input/textarea\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.minText !== undefined && setting.minText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minText'],\n        });\n      }\n      if (setting.maxText !== undefined && setting.maxText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxText'],\n        });\n      }\n    }\n\n    // Validate optionType and conversation schema\n    if (setting.optionType !== OptionTypes.Custom) {\n      const conversationSchema =\n        tConversationSchema.shape[setting.key as keyof Omit<TConversation, 'disableParams'>];\n      if (!conversationSchema) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must be defined in tConversationSchema.`,\n          path: ['optionType'],\n        });\n      } else {\n        const zodType = conversationSchema._def.typeName;\n        const settingTypeEquivalent = ZodTypeToSettingType[zodType] || null;\n        if (settingTypeEquivalent !== setting.type) {\n          errors.push({\n            code: ZodIssueCode.custom,\n            message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must match the type defined in tConversationSchema.`,\n            path: ['optionType'],\n          });\n        }\n      }\n    }\n\n    /* Default value checks */\n    if (\n      setting.type === SettingTypes.Number &&\n      isNaN(setting.default as number) &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a number.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Boolean &&\n      typeof setting.default !== 'boolean' &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a boolean.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      (setting.type === SettingTypes.String || setting.type === SettingTypes.Enum) &&\n      typeof setting.default !== 'string' &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a string.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Enum &&\n      setting.options &&\n      !setting.options.includes(setting.default as string)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${\n          setting.key\n        }. Must be one of the options: [${setting.options.join(', ')}].`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Number &&\n      setting.range &&\n      typeof setting.default === 'number' &&\n      (setting.default < setting.range.min || setting.default > setting.range.max)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be within the range [${setting.range.min}, ${setting.range.max}].`,\n        path: ['default'],\n      });\n    }\n\n    // Validate enumMappings\n    if (setting.enumMappings && setting.type === SettingTypes.Enum && setting.options) {\n      for (const option of setting.options) {\n        if (!(option in setting.enumMappings)) {\n          errors.push({\n            code: ZodIssueCode.custom,\n            message: `Missing enumMapping for option \"${option}\" in setting ${setting.key}.`,\n            path: ['enumMappings'],\n          });\n        }\n      }\n    }\n  }\n\n  if (errors.length > 0) {\n    throw new ZodError(errors);\n  }\n}\n\nexport const generateOpenAISchema = (customOpenAI: OpenAISettings) => {\n  const defaults = { ...openAI, ...customOpenAI };\n  return tConversationSchema\n    .pick({\n      model: true,\n      chatGptLabel: true,\n      promptPrefix: true,\n      temperature: true,\n      top_p: true,\n      presence_penalty: true,\n      frequency_penalty: true,\n      resendFiles: true,\n      imageDetail: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => ({\n      ...obj,\n      model: obj.model ?? defaults.model.default,\n      chatGptLabel: obj.chatGptLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? defaults.temperature.default,\n      top_p: obj.top_p ?? defaults.top_p.default,\n      presence_penalty: obj.presence_penalty ?? defaults.presence_penalty.default,\n      frequency_penalty: obj.frequency_penalty ?? defaults.frequency_penalty.default,\n      resendFiles:\n        typeof obj.resendFiles === 'boolean' ? obj.resendFiles : defaults.resendFiles.default,\n      imageDetail: obj.imageDetail ?? defaults.imageDetail.default,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    }))\n    .catch(() => ({\n      model: defaults.model.default,\n      chatGptLabel: null,\n      promptPrefix: null,\n      temperature: defaults.temperature.default,\n      top_p: defaults.top_p.default,\n      presence_penalty: defaults.presence_penalty.default,\n      frequency_penalty: defaults.frequency_penalty.default,\n      resendFiles: defaults.resendFiles.default,\n      imageDetail: defaults.imageDetail.default,\n      maxContextTokens: undefined,\n    }));\n};\n\nexport const generateGoogleSchema = (customGoogle: GoogleSettings) => {\n  const defaults = { ...google, ...customGoogle };\n  return tConversationSchema\n    .pick({\n      model: true,\n      modelLabel: true,\n      promptPrefix: true,\n      examples: true,\n      temperature: true,\n      maxOutputTokens: true,\n      topP: true,\n      topK: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => {\n      return {\n        ...obj,\n        model: obj.model ?? defaults.model.default,\n        modelLabel: obj.modelLabel ?? null,\n        promptPrefix: obj.promptPrefix ?? null,\n        examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n        temperature: obj.temperature ?? defaults.temperature.default,\n        maxOutputTokens: obj.maxOutputTokens ?? defaults.maxOutputTokens.default,\n        topP: obj.topP ?? defaults.topP.default,\n        topK: obj.topK ?? defaults.topK.default,\n        maxContextTokens: obj.maxContextTokens ?? undefined,\n      };\n    })\n    .catch(() => ({\n      model: defaults.model.default,\n      modelLabel: null,\n      promptPrefix: null,\n      examples: [{ input: { content: '' }, output: { content: '' } }],\n      temperature: defaults.temperature.default,\n      maxOutputTokens: defaults.maxOutputTokens.default,\n      topP: defaults.topP.default,\n      topK: defaults.topK.default,\n      maxContextTokens: undefined,\n    }));\n};\n","import { z } from 'zod';\n\n/**\n * Enum for Permission Types\n */\nexport enum PermissionTypes {\n  /**\n   * Type for Prompt Permissions\n   */\n  PROMPTS = 'PROMPTS',\n  /**\n   * Type for Bookmark Permissions\n   */\n  BOOKMARKS = 'BOOKMARKS',\n  /**\n   * Type for Agent Permissions\n   */\n  AGENTS = 'AGENTS',\n  /**\n   * Type for Memory Permissions\n   */\n  MEMORIES = 'MEMORIES',\n  /**\n   * Type for Multi-Conversation Permissions\n   */\n  MULTI_CONVO = 'MULTI_CONVO',\n  /**\n   * Type for Temporary Chat\n   */\n  TEMPORARY_CHAT = 'TEMPORARY_CHAT',\n  /**\n   * Type for using the \"Run Code\" LC Code Interpreter API feature\n   */\n  RUN_CODE = 'RUN_CODE',\n  /**\n   * Type for using the \"Web Search\" feature\n   */\n  WEB_SEARCH = 'WEB_SEARCH',\n  /**\n   * Type for People Picker Permissions\n   */\n  PEOPLE_PICKER = 'PEOPLE_PICKER',\n  /**\n   * Type for Marketplace Permissions\n   */\n  MARKETPLACE = 'MARKETPLACE',\n  /**\n   * Type for using the \"File Search\" feature\n   */\n  FILE_SEARCH = 'FILE_SEARCH',\n  /**\n   * Type for using the \"File Citations\" feature in agents\n   */\n  FILE_CITATIONS = 'FILE_CITATIONS',\n}\n\n/**\n * Enum for Role-Based Access Control Constants\n */\nexport enum Permissions {\n  SHARED_GLOBAL = 'SHARED_GLOBAL',\n  USE = 'USE',\n  CREATE = 'CREATE',\n  UPDATE = 'UPDATE',\n  READ = 'READ',\n  READ_AUTHOR = 'READ_AUTHOR',\n  SHARE = 'SHARE',\n  /** Can disable if desired */\n  OPT_OUT = 'OPT_OUT',\n  VIEW_USERS = 'VIEW_USERS',\n  VIEW_GROUPS = 'VIEW_GROUPS',\n  VIEW_ROLES = 'VIEW_ROLES',\n}\n\nexport const promptPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\nexport type TPromptPermissions = z.infer<typeof promptPermissionsSchema>;\n\nexport const bookmarkPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TBookmarkPermissions = z.infer<typeof bookmarkPermissionsSchema>;\n\nexport const memoryPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  [Permissions.UPDATE]: z.boolean().default(true),\n  [Permissions.READ]: z.boolean().default(true),\n  [Permissions.OPT_OUT]: z.boolean().default(true),\n});\nexport type TMemoryPermissions = z.infer<typeof memoryPermissionsSchema>;\n\nexport const agentPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\nexport type TAgentPermissions = z.infer<typeof agentPermissionsSchema>;\n\nexport const multiConvoPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TMultiConvoPermissions = z.infer<typeof multiConvoPermissionsSchema>;\n\nexport const temporaryChatPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TTemporaryChatPermissions = z.infer<typeof temporaryChatPermissionsSchema>;\n\nexport const runCodePermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TRunCodePermissions = z.infer<typeof runCodePermissionsSchema>;\n\nexport const webSearchPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TWebSearchPermissions = z.infer<typeof webSearchPermissionsSchema>;\n\nexport const peoplePickerPermissionsSchema = z.object({\n  [Permissions.VIEW_USERS]: z.boolean().default(true),\n  [Permissions.VIEW_GROUPS]: z.boolean().default(true),\n  [Permissions.VIEW_ROLES]: z.boolean().default(true),\n});\nexport type TPeoplePickerPermissions = z.infer<typeof peoplePickerPermissionsSchema>;\n\nexport const marketplacePermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(false),\n});\nexport type TMarketplacePermissions = z.infer<typeof marketplacePermissionsSchema>;\n\nexport const fileSearchPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TFileSearchPermissions = z.infer<typeof fileSearchPermissionsSchema>;\n\nexport const fileCitationsPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TFileCitationsPermissions = z.infer<typeof fileCitationsPermissionsSchema>;\n\n// Define a single permissions schema that holds all permission types.\nexport const permissionsSchema = z.object({\n  [PermissionTypes.PROMPTS]: promptPermissionsSchema,\n  [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema,\n  [PermissionTypes.MEMORIES]: memoryPermissionsSchema,\n  [PermissionTypes.AGENTS]: agentPermissionsSchema,\n  [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema,\n  [PermissionTypes.TEMPORARY_CHAT]: temporaryChatPermissionsSchema,\n  [PermissionTypes.RUN_CODE]: runCodePermissionsSchema,\n  [PermissionTypes.WEB_SEARCH]: webSearchPermissionsSchema,\n  [PermissionTypes.PEOPLE_PICKER]: peoplePickerPermissionsSchema,\n  [PermissionTypes.MARKETPLACE]: marketplacePermissionsSchema,\n  [PermissionTypes.FILE_SEARCH]: fileSearchPermissionsSchema,\n  [PermissionTypes.FILE_CITATIONS]: fileCitationsPermissionsSchema,\n});\n","import { z } from 'zod';\nimport {\n  Permissions,\n  PermissionTypes,\n  permissionsSchema,\n  agentPermissionsSchema,\n  promptPermissionsSchema,\n  memoryPermissionsSchema,\n  runCodePermissionsSchema,\n  bookmarkPermissionsSchema,\n  webSearchPermissionsSchema,\n  fileSearchPermissionsSchema,\n  multiConvoPermissionsSchema,\n  temporaryChatPermissionsSchema,\n  peoplePickerPermissionsSchema,\n  fileCitationsPermissionsSchema,\n} from './permissions';\n\n/**\n * Enum for System Defined Roles\n */\nexport enum SystemRoles {\n  /**\n   * The Admin role\n   */\n  ADMIN = 'ADMIN',\n  /**\n   * The default user role\n   */\n  USER = 'USER',\n}\n\nexport const roleSchema = z.object({\n  name: z.string(),\n  permissions: permissionsSchema,\n});\n\nexport type TRole = z.infer<typeof roleSchema>;\n\nconst defaultRolesSchema = z.object({\n  [SystemRoles.ADMIN]: roleSchema.extend({\n    name: z.literal(SystemRoles.ADMIN),\n    permissions: permissionsSchema.extend({\n      [PermissionTypes.PROMPTS]: promptPermissionsSchema.extend({\n        [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        // [Permissions.SHARE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.MEMORIES]: memoryPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        [Permissions.UPDATE]: z.boolean().default(true),\n        [Permissions.READ]: z.boolean().default(true),\n        [Permissions.OPT_OUT]: z.boolean().default(true),\n      }),\n      [PermissionTypes.AGENTS]: agentPermissionsSchema.extend({\n        [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        // [Permissions.SHARE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.TEMPORARY_CHAT]: temporaryChatPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.RUN_CODE]: runCodePermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.WEB_SEARCH]: webSearchPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.PEOPLE_PICKER]: peoplePickerPermissionsSchema.extend({\n        [Permissions.VIEW_USERS]: z.boolean().default(true),\n        [Permissions.VIEW_GROUPS]: z.boolean().default(true),\n        [Permissions.VIEW_ROLES]: z.boolean().default(true),\n      }),\n      [PermissionTypes.MARKETPLACE]: z.object({\n        [Permissions.USE]: z.boolean().default(false),\n      }),\n      [PermissionTypes.FILE_SEARCH]: fileSearchPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.FILE_CITATIONS]: fileCitationsPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n    }),\n  }),\n  [SystemRoles.USER]: roleSchema.extend({\n    name: z.literal(SystemRoles.USER),\n    permissions: permissionsSchema,\n  }),\n});\n\nexport const roleDefaults = defaultRolesSchema.parse({\n  [SystemRoles.ADMIN]: {\n    name: SystemRoles.ADMIN,\n    permissions: {\n      [PermissionTypes.PROMPTS]: {\n        [Permissions.SHARED_GLOBAL]: true,\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n      },\n      [PermissionTypes.BOOKMARKS]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.MEMORIES]: {\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n        [Permissions.UPDATE]: true,\n        [Permissions.READ]: true,\n        [Permissions.OPT_OUT]: true,\n      },\n      [PermissionTypes.AGENTS]: {\n        [Permissions.SHARED_GLOBAL]: true,\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n      },\n      [PermissionTypes.MULTI_CONVO]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.TEMPORARY_CHAT]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.RUN_CODE]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.WEB_SEARCH]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.PEOPLE_PICKER]: {\n        [Permissions.VIEW_USERS]: true,\n        [Permissions.VIEW_GROUPS]: true,\n        [Permissions.VIEW_ROLES]: true,\n      },\n      [PermissionTypes.MARKETPLACE]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.FILE_SEARCH]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.FILE_CITATIONS]: {\n        [Permissions.USE]: true,\n      },\n    },\n  },\n  [SystemRoles.USER]: {\n    name: SystemRoles.USER,\n    permissions: {\n      [PermissionTypes.PROMPTS]: {},\n      [PermissionTypes.BOOKMARKS]: {},\n      [PermissionTypes.MEMORIES]: {},\n      [PermissionTypes.AGENTS]: {},\n      [PermissionTypes.MULTI_CONVO]: {},\n      [PermissionTypes.TEMPORARY_CHAT]: {},\n      [PermissionTypes.RUN_CODE]: {},\n      [PermissionTypes.WEB_SEARCH]: {},\n      [PermissionTypes.PEOPLE_PICKER]: {\n        [Permissions.VIEW_USERS]: false,\n        [Permissions.VIEW_GROUPS]: false,\n        [Permissions.VIEW_ROLES]: false,\n      },\n      [PermissionTypes.MARKETPLACE]: {\n        [Permissions.USE]: false,\n      },\n      [PermissionTypes.FILE_SEARCH]: {},\n      [PermissionTypes.FILE_CITATIONS]: {},\n    },\n  },\n});\n","import type { Logger as WinstonLogger } from 'winston';\nimport type { RunnableConfig } from '@langchain/core/runnables';\n\nexport type SearchRefType = 'search' | 'image' | 'news' | 'video' | 'ref';\n\nexport enum DATE_RANGE {\n  PAST_HOUR = 'h',\n  PAST_24_HOURS = 'd',\n  PAST_WEEK = 'w',\n  PAST_MONTH = 'm',\n  PAST_YEAR = 'y',\n}\n\nexport type SearchProvider = 'serper' | 'searxng';\nexport type RerankerType = 'infinity' | 'jina' | 'cohere' | 'none';\n\nexport interface Highlight {\n  score: number;\n  text: string;\n  references?: UsedReferences;\n}\n\nexport type ProcessedSource = {\n  content?: string;\n  attribution?: string;\n  references?: References;\n  highlights?: Highlight[];\n  processed?: boolean;\n};\n\nexport type ProcessedOrganic = OrganicResult & ProcessedSource;\nexport type ProcessedTopStory = TopStoryResult & ProcessedSource;\nexport type ValidSource = ProcessedOrganic | ProcessedTopStory;\n\nexport type ResultReference = {\n  link: string;\n  type: 'link' | 'image' | 'video' | 'file';\n  title?: string;\n  attribution?: string;\n};\nexport interface SearchResultData {\n  turn?: number;\n  organic?: ProcessedOrganic[];\n  topStories?: ProcessedTopStory[];\n  images?: ImageResult[];\n  videos?: VideoResult[];\n  places?: PlaceResult[];\n  news?: NewsResult[];\n  shopping?: ShoppingResult[];\n  knowledgeGraph?: KnowledgeGraphResult;\n  answerBox?: AnswerBoxResult;\n  peopleAlsoAsk?: PeopleAlsoAskResult[];\n  relatedSearches?: Array<{ query: string }>;\n  references?: ResultReference[];\n  error?: string;\n}\n\nexport interface SearchResult {\n  data?: SearchResultData;\n  error?: string;\n  success: boolean;\n}\n\nexport interface Source {\n  link: string;\n  html?: string;\n  title?: string;\n  snippet?: string;\n  date?: string;\n}\n\nexport interface SearchConfig {\n  searchProvider?: SearchProvider;\n  serperApiKey?: string;\n  searxngInstanceUrl?: string;\n  searxngApiKey?: string;\n}\n\nexport type References = {\n  links: MediaReference[];\n  images: MediaReference[];\n  videos: MediaReference[];\n};\nexport interface ScrapeResult {\n  url: string;\n  error?: boolean;\n  content: string;\n  attribution?: string;\n  references?: References;\n  highlights?: Highlight[];\n}\n\nexport interface ProcessSourcesConfig {\n  topResults?: number;\n  strategies?: string[];\n  filterContent?: boolean;\n  reranker?: unknown;\n  logger?: Logger;\n}\n\nexport interface FirecrawlConfig {\n  firecrawlApiKey?: string;\n  firecrawlApiUrl?: string;\n  firecrawlOptions?: {\n    formats?: string[];\n    includeTags?: string[];\n    excludeTags?: string[];\n    headers?: Record<string, string>;\n    waitFor?: number;\n    timeout?: number;\n    maxAge?: number;\n    mobile?: boolean;\n    skipTlsVerification?: boolean;\n    blockAds?: boolean;\n    removeBase64Images?: boolean;\n    parsePDF?: boolean;\n    storeInCache?: boolean;\n    zeroDataRetention?: boolean;\n    location?: {\n      country?: string;\n      languages?: string[];\n    };\n    onlyMainContent?: boolean;\n    changeTrackingOptions?: {\n      modes?: string[];\n      schema?: Record<string, unknown>;\n      prompt?: string;\n      tag?: string | null;\n    };\n  };\n}\n\nexport interface ScraperContentResult {\n  content: string;\n}\n\nexport interface ScraperExtractionResult {\n  no_extraction: ScraperContentResult;\n}\n\nexport interface JinaRerankerResult {\n  index: number;\n  relevance_score: number;\n  document?: string | { text: string };\n}\n\nexport interface JinaRerankerResponse {\n  model: string;\n  usage: {\n    total_tokens: number;\n  };\n  results: JinaRerankerResult[];\n}\n\nexport interface CohereRerankerResult {\n  index: number;\n  relevance_score: number;\n}\n\nexport interface CohereRerankerResponse {\n  results: CohereRerankerResult[];\n  id: string;\n  meta: {\n    api_version: {\n      version: string;\n      is_experimental: boolean;\n    };\n    billed_units: {\n      search_units: number;\n    };\n  };\n}\n\nexport type SafeSearchLevel = 0 | 1 | 2;\n\nexport type Logger = WinstonLogger;\nexport interface SearchToolConfig extends SearchConfig, ProcessSourcesConfig, FirecrawlConfig {\n  logger?: Logger;\n  safeSearch?: SafeSearchLevel;\n  jinaApiKey?: string;\n  cohereApiKey?: string;\n  rerankerType?: RerankerType;\n  onSearchResults?: (results: SearchResult, runnableConfig?: RunnableConfig) => void;\n  onGetHighlights?: (link: string) => void;\n}\nexport interface MediaReference {\n  originalUrl: string;\n  title?: string;\n  text?: string;\n}\n\nexport type UsedReferences = {\n  type: 'link' | 'image' | 'video';\n  originalIndex: number;\n  reference: MediaReference;\n}[];\n\n/** Firecrawl */\n\nexport interface FirecrawlScrapeOptions {\n  formats?: string[];\n  includeTags?: string[];\n  excludeTags?: string[];\n  headers?: Record<string, string>;\n  waitFor?: number;\n  timeout?: number;\n}\n\nexport interface ScrapeMetadata {\n  // Core source information\n  sourceURL?: string;\n  url?: string;\n  scrapeId?: string;\n  statusCode?: number;\n  // Basic metadata\n  title?: string;\n  description?: string;\n  language?: string;\n  favicon?: string;\n  viewport?: string;\n  robots?: string;\n  'theme-color'?: string;\n  // Open Graph metadata\n  'og:url'?: string;\n  'og:title'?: string;\n  'og:description'?: string;\n  'og:type'?: string;\n  'og:image'?: string;\n  'og:image:width'?: string;\n  'og:image:height'?: string;\n  'og:site_name'?: string;\n  ogUrl?: string;\n  ogTitle?: string;\n  ogDescription?: string;\n  ogImage?: string;\n  ogSiteName?: string;\n  // Article metadata\n  'article:author'?: string;\n  'article:published_time'?: string;\n  'article:modified_time'?: string;\n  'article:section'?: string;\n  'article:tag'?: string;\n  'article:publisher'?: string;\n  publishedTime?: string;\n  modifiedTime?: string;\n  // Twitter metadata\n  'twitter:site'?: string | boolean | number | null;\n  'twitter:creator'?: string;\n  'twitter:card'?: string;\n  'twitter:image'?: string;\n  'twitter:dnt'?: string;\n  'twitter:app:name:iphone'?: string;\n  'twitter:app:id:iphone'?: string;\n  'twitter:app:url:iphone'?: string;\n  'twitter:app:name:ipad'?: string;\n  'twitter:app:id:ipad'?: string;\n  'twitter:app:url:ipad'?: string;\n  'twitter:app:name:googleplay'?: string;\n  'twitter:app:id:googleplay'?: string;\n  'twitter:app:url:googleplay'?: string;\n  // Facebook metadata\n  'fb:app_id'?: string;\n  // App links\n  'al:ios:url'?: string;\n  'al:ios:app_name'?: string;\n  'al:ios:app_store_id'?: string;\n  // Allow for additional properties that might be present\n  [key: string]: string | number | boolean | null | undefined;\n}\n\nexport interface FirecrawlScrapeResponse {\n  success: boolean;\n  data?: {\n    markdown?: string;\n    html?: string;\n    rawHtml?: string;\n    screenshot?: string;\n    links?: string[];\n    metadata?: ScrapeMetadata;\n  };\n  error?: string;\n}\n\nexport interface FirecrawlScraperConfig {\n  apiKey?: string;\n  apiUrl?: string;\n  formats?: string[];\n  timeout?: number;\n  logger?: Logger;\n}\n\nexport type GetSourcesParams = {\n  query: string;\n  date?: DATE_RANGE;\n  country?: string;\n  numResults?: number;\n  safeSearch?: SearchToolConfig['safeSearch'];\n  images?: boolean;\n  videos?: boolean;\n  news?: boolean;\n  type?: 'search' | 'images' | 'videos' | 'news';\n};\n\n/** Serper API */\nexport interface VideoResult {\n  title?: string;\n  link?: string;\n  snippet?: string;\n  imageUrl?: string;\n  duration?: string;\n  source?: string;\n  channel?: string;\n  date?: string;\n  position?: number;\n}\n\nexport interface PlaceResult {\n  position?: number;\n  name?: string;\n  address?: string;\n  latitude?: number;\n  longitude?: number;\n  rating?: number;\n  ratingCount?: number;\n  category?: string;\n  identifier?: string;\n}\n\nexport interface NewsResult {\n  title?: string;\n  link?: string;\n  snippet?: string;\n  date?: string;\n  source?: string;\n  imageUrl?: string;\n  position?: number;\n}\n\nexport interface ShoppingResult {\n  title?: string;\n  source?: string;\n  link?: string;\n  price?: string;\n  delivery?: string;\n  imageUrl?: string;\n  rating?: number;\n  ratingCount?: number;\n  offers?: string;\n  productId?: string;\n  position?: number;\n}\n\nexport interface ScholarResult {\n  title?: string;\n  link?: string;\n  publicationInfo?: string;\n  snippet?: string;\n  year?: number;\n  citedBy?: number;\n}\n\nexport interface ImageResult {\n  title?: string;\n  imageUrl?: string;\n  imageWidth?: number;\n  imageHeight?: number;\n  thumbnailUrl?: string;\n  thumbnailWidth?: number;\n  thumbnailHeight?: number;\n  source?: string;\n  domain?: string;\n  link?: string;\n  googleUrl?: string;\n  position?: number;\n}\n\nexport interface SerperSearchPayload extends SerperSearchInput {\n  /**\n   * Search type/vertical\n   * Options: \"search\" (web), \"images\", \"news\", \"places\", \"videos\"\n   */\n  type?: 'search' | 'images' | 'news' | 'places' | 'videos';\n\n  /**\n   * Starting index for search results pagination (used instead of page)\n   */\n  start?: number;\n\n  /**\n   * Filtering for safe search\n   * Options: \"off\", \"moderate\", \"active\"\n   */\n  safe?: 'off' | 'moderate' | 'active';\n}\n\nexport type SerperSearchParameters = Pick<SerperSearchPayload, 'q' | 'type'> & {\n  engine: 'google';\n};\n\nexport interface OrganicResult {\n  position?: number;\n  title?: string;\n  link: string;\n  snippet?: string;\n  date?: string;\n  sitelinks?: Array<{\n    title: string;\n    link: string;\n  }>;\n}\n\nexport interface TopStoryResult {\n  title?: string;\n  link: string;\n  source?: string;\n  date?: string;\n  imageUrl?: string;\n}\nexport interface KnowledgeGraphResult {\n  title?: string;\n  type?: string;\n  imageUrl?: string;\n  description?: string;\n  descriptionSource?: string;\n  descriptionLink?: string;\n  attributes?: Record<string, string>;\n  website?: string;\n}\n\nexport interface AnswerBoxResult {\n  title?: string;\n  snippet?: string;\n  snippetHighlighted?: string[];\n  link?: string;\n  date?: string;\n}\n\nexport interface PeopleAlsoAskResult {\n  question?: string;\n  snippet?: string;\n  title?: string;\n  link?: string;\n}\n\nexport type RelatedSearches = Array<{ query: string }>;\n\nexport interface SerperSearchInput {\n  /**\n   * The search query string\n   */\n  q: string;\n\n  /**\n   * Country code for localized results\n   * Examples: \"us\", \"uk\", \"ca\", \"de\", etc.\n   */\n  gl?: string;\n\n  /**\n   * Interface language\n   * Examples: \"en\", \"fr\", \"de\", etc.\n   */\n  hl?: string;\n\n  /**\n   * Number of results to return (up to 100)\n   */\n  num?: number;\n  /**\n   * Specific location for contextual results\n   * Example: \"New York, NY\"\n   */\n  location?: string;\n\n  /**\n   * Search autocorrection setting\n   */\n  autocorrect?: boolean;\n  page?: number;\n  /**\n   * Date range for search results\n   * Options: \"h\" (past hour), \"d\" (past 24 hours), \"w\" (past week),\n   * \"m\" (past month), \"y\" (past year)\n   * `qdr:${DATE_RANGE}`\n   */\n  tbs?: string;\n}\n\nexport type SerperResultData = {\n  searchParameters: SerperSearchPayload;\n  organic?: OrganicResult[];\n  topStories?: TopStoryResult[];\n  images?: ImageResult[];\n  videos?: VideoResult[];\n  places?: PlaceResult[];\n  news?: NewsResult[];\n  shopping?: ShoppingResult[];\n  peopleAlsoAsk?: PeopleAlsoAskResult[];\n  relatedSearches?: RelatedSearches;\n  knowledgeGraph?: KnowledgeGraphResult;\n  answerBox?: AnswerBoxResult;\n  credits?: number;\n};\n\n/** SearXNG */\n\nexport interface SearxNGSearchPayload {\n  /**\n   * The search query string\n   * Supports syntax specific to different search engines\n   * Example: \"site:github.com SearXNG\"\n   */\n  q: string;\n\n  /**\n   * Comma-separated list of search categories\n   * Example: \"general,images,news\"\n   */\n  categories?: string;\n\n  /**\n   * Comma-separated list of search engines to use\n   * Example: \"google,bing,duckduckgo\"\n   */\n  engines?: string;\n\n  /**\n   * Code of the language for search results\n   * Example: \"en\", \"fr\", \"de\", \"es\"\n   */\n  language?: string;\n\n  /**\n   * Search page number\n   * Default: 1\n   */\n  pageno?: number;\n\n  /**\n   * Time range filter for search results\n   * Options: \"day\", \"month\", \"year\"\n   */\n  time_range?: 'day' | 'month' | 'year';\n\n  /**\n   * Output format of results\n   * Options: \"json\", \"csv\", \"rss\"\n   */\n  format?: 'json' | 'csv' | 'rss';\n\n  /**\n   * Open search results on new tab\n   * Options: `0` (off), `1` (on)\n   */\n  results_on_new_tab?: 0 | 1;\n\n  /**\n   * Proxy image results through SearxNG\n   * Options: true, false\n   */\n  image_proxy?: boolean;\n\n  /**\n   * Service for autocomplete suggestions\n   * Options: \"google\", \"dbpedia\", \"duckduckgo\", \"mwmbl\",\n   *          \"startpage\", \"wikipedia\", \"stract\", \"swisscows\", \"qwant\"\n   */\n  autocomplete?: string;\n\n  /**\n   * Safe search filtering level\n   * Options: \"0\" (off), \"1\" (moderate), \"2\" (strict)\n   */\n  safesearch?: 0 | 1 | 2;\n\n  /**\n   * Theme to use for results page\n   * Default: \"simple\" (other themes may be available per instance)\n   */\n  theme?: string;\n\n  /**\n   * List of enabled plugins\n   * Default: \"Hash_plugin,Self_Information,Tracker_URL_remover,Ahmia_blacklist\"\n   */\n  enabled_plugins?: string;\n\n  /**\n   * List of disabled plugins\n   */\n  disabled_plugins?: string;\n\n  /**\n   * List of enabled engines\n   */\n  enabled_engines?: string;\n\n  /**\n   * List of disabled engines\n   */\n  disabled_engines?: string;\n}\n\nexport interface SearXNGResult {\n  title?: string;\n  url?: string;\n  content?: string;\n  publishedDate?: string;\n  img_src?: string;\n}\n\nexport type ProcessSourcesFields = {\n  result: SearchResult;\n  numElements: number;\n  query: string;\n  news: boolean;\n  proMode: boolean;\n  onGetHighlights: SearchToolConfig['onGetHighlights'];\n};\n","import { z } from 'zod';\n\n/**\n * Granular Permission System Types for Agent Sharing\n *\n * This file contains TypeScript interfaces and Zod schemas for the enhanced\n * agent permission system that supports sharing with specific users/groups\n * and Entra ID integration.\n */\n\n// ===== ENUMS & CONSTANTS =====\n\n/**\n * Principal types for permission system\n */\nexport enum PrincipalType {\n  USER = 'user',\n  GROUP = 'group',\n  PUBLIC = 'public',\n  ROLE = 'role',\n}\n\n/**\n * Principal model types for MongoDB references\n */\nexport enum PrincipalModel {\n  USER = 'User',\n  GROUP = 'Group',\n  ROLE = 'Role',\n}\n\n/**\n * Source of the principal (local LibreChat or external Entra ID)\n */\nexport type TPrincipalSource = 'local' | 'entra';\n\n/**\n * Access levels for agents\n */\nexport type TAccessLevel = 'none' | 'viewer' | 'editor' | 'owner';\n\n/**\n * Resource types for permission system\n */\nexport enum ResourceType {\n  AGENT = 'agent',\n  PROMPTGROUP = 'promptGroup',\n}\n\n/**\n * Permission bit constants for bitwise operations\n */\nexport enum PermissionBits {\n  /** 001 - Can view and use agent */\n  VIEW = 1,\n  /**  010 - Can modify agent settings */\n  EDIT = 2,\n  /**  100 - Can delete agent */\n  DELETE = 4,\n  /**  1000 - Can share agent with others (future) */\n  SHARE = 8,\n}\n\n/**\n * Standard access role IDs\n */\nexport enum AccessRoleIds {\n  AGENT_VIEWER = 'agent_viewer',\n  AGENT_EDITOR = 'agent_editor',\n  AGENT_OWNER = 'agent_owner',\n  PROMPTGROUP_VIEWER = 'promptGroup_viewer',\n  PROMPTGROUP_EDITOR = 'promptGroup_editor',\n  PROMPTGROUP_OWNER = 'promptGroup_owner',\n}\n\n// ===== ZOD SCHEMAS =====\n\n/**\n * Principal schema - represents a user, group, role, or public access\n */\nexport const principalSchema = z.object({\n  type: z.nativeEnum(PrincipalType),\n  id: z.string().optional(), // undefined for 'public' type, role name for 'role' type\n  name: z.string().optional(),\n  email: z.string().optional(), // for user and group types\n  source: z.enum(['local', 'entra']).optional(),\n  avatar: z.string().optional(), // for user and group types\n  description: z.string().optional(), // for group and role types\n  idOnTheSource: z.string().optional(), // Entra ID for users/groups\n  accessRoleId: z.nativeEnum(AccessRoleIds).optional(), // Access role ID for permissions\n  memberCount: z.number().optional(), // for group type\n});\n\n/**\n * Access role schema - defines named permission sets\n */\nexport const accessRoleSchema = z.object({\n  accessRoleId: z.nativeEnum(AccessRoleIds),\n  name: z.string(),\n  description: z.string().optional(),\n  resourceType: z.nativeEnum(ResourceType).default(ResourceType.AGENT),\n  permBits: z.number(),\n});\n\n/**\n * Permission entry schema - represents a single ACL entry\n */\nexport const permissionEntrySchema = z.object({\n  id: z.string(),\n  principalType: z.nativeEnum(PrincipalType),\n  principalId: z.string().optional(), // undefined for 'public'\n  principalName: z.string().optional(),\n  role: accessRoleSchema,\n  grantedBy: z.string(),\n  grantedAt: z.string(), // ISO date string\n  inheritedFrom: z.string().optional(), // for project-level inheritance\n  source: z.enum(['local', 'entra']).optional(),\n});\n\n/**\n * Resource permissions response schema\n */\nexport const resourcePermissionsResponseSchema = z.object({\n  resourceType: z.nativeEnum(ResourceType),\n  resourceId: z.string(),\n  permissions: z.array(permissionEntrySchema),\n});\n\n/**\n * Update resource permissions request schema\n * This matches the user's requirement for the frontend DTO structure\n */\nexport const updateResourcePermissionsRequestSchema = z.object({\n  updated: principalSchema.array(),\n  removed: principalSchema.array(),\n  public: z.boolean(),\n  publicAccessRoleId: z.string().optional(),\n});\n\n/**\n * Update resource permissions response schema\n * Returns the updated permissions with accessRoleId included\n */\nexport const updateResourcePermissionsResponseSchema = z.object({\n  message: z.string(),\n  results: z.object({\n    principals: principalSchema.array(),\n    public: z.boolean(),\n    publicAccessRoleId: z.string().optional(),\n  }),\n});\n\n// ===== TYPESCRIPT TYPES =====\n\n/**\n * Principal - represents a user, group, or public access\n */\nexport type TPrincipal = z.infer<typeof principalSchema>;\n\n/**\n * Access role - defines named permission sets\n */\nexport type TAccessRole = z.infer<typeof accessRoleSchema>;\n\n/**\n * Permission entry - represents a single ACL entry\n */\nexport type TPermissionEntry = z.infer<typeof permissionEntrySchema>;\n\n/**\n * Resource permissions response\n */\nexport type TResourcePermissionsResponse = z.infer<typeof resourcePermissionsResponseSchema>;\n\n/**\n * Update resource permissions request\n * This matches the user's requirement for the frontend DTO structure\n */\nexport type TUpdateResourcePermissionsRequest = z.infer<\n  typeof updateResourcePermissionsRequestSchema\n>;\n\n/**\n * Update resource permissions response\n * Returns the updated permissions with accessRoleId included\n */\nexport type TUpdateResourcePermissionsResponse = z.infer<\n  typeof updateResourcePermissionsResponseSchema\n>;\n\n/**\n * Principal search request parameters\n */\nexport type TPrincipalSearchParams = {\n  q: string; // search query (required)\n  limit?: number; // max results (1-50, default 10)\n  type?: PrincipalType.USER | PrincipalType.GROUP | PrincipalType.ROLE; // filter by type (optional)\n};\n\n/**\n * Principal search result item\n */\nexport type TPrincipalSearchResult = {\n  id?: string | null; // null for Entra ID principals that don't exist locally yet\n  type: PrincipalType.USER | PrincipalType.GROUP | PrincipalType.ROLE;\n  name: string;\n  email?: string; // for users and groups\n  username?: string; // for users\n  avatar?: string; // for users and groups\n  provider?: string; // for users\n  source: 'local' | 'entra';\n  memberCount?: number; // for groups\n  description?: string; // for groups\n  idOnTheSource?: string; // Entra ID for users (maps to openidId) and groups (maps to idOnTheSource)\n};\n\n/**\n * Principal search response\n */\nexport type TPrincipalSearchResponse = {\n  query: string;\n  limit: number;\n  type?: PrincipalType.USER | PrincipalType.GROUP | PrincipalType.ROLE;\n  results: TPrincipalSearchResult[];\n  count: number;\n  sources: {\n    local: number;\n    entra: number;\n  };\n};\n\n/**\n * Available roles response\n */\nexport type TAvailableRolesResponse = {\n  resourceType: ResourceType;\n  roles: TAccessRole[];\n};\n\n/**\n * Get resource permissions response schema\n * This matches the enhanced aggregation-based endpoint response format\n */\nexport const getResourcePermissionsResponseSchema = z.object({\n  resourceType: z.nativeEnum(ResourceType),\n  resourceId: z.nativeEnum(AccessRoleIds),\n  principals: z.array(principalSchema),\n  public: z.boolean(),\n  publicAccessRoleId: z.nativeEnum(AccessRoleIds).optional(),\n});\n\n/**\n * Get resource permissions response type\n * This matches the enhanced aggregation-based endpoint response format\n */\nexport type TGetResourcePermissionsResponse = z.infer<typeof getResourcePermissionsResponseSchema>;\n\n/**\n * Effective permissions response schema\n * Returns just the permission bitmask for a user on a resource\n */\nexport const effectivePermissionsResponseSchema = z.object({\n  permissionBits: z.number(),\n});\n\n/**\n * Effective permissions response type\n * Returns just the permission bitmask for a user on a resource\n */\nexport type TEffectivePermissionsResponse = z.infer<typeof effectivePermissionsResponseSchema>;\n\n// ===== UTILITY TYPES =====\n\n/**\n * Permission check result\n */\nexport interface TPermissionCheck {\n  canView: boolean;\n  canEdit: boolean;\n  canDelete: boolean;\n  canShare: boolean;\n  accessLevel: TAccessLevel;\n}\n\n// ===== HELPER FUNCTIONS =====\n\n/**\n * Convert permission bits to access level\n */\nexport function permBitsToAccessLevel(permBits: number): TAccessLevel {\n  if ((permBits & PermissionBits.DELETE) > 0) return 'owner';\n  if ((permBits & PermissionBits.EDIT) > 0) return 'editor';\n  if ((permBits & PermissionBits.VIEW) > 0) return 'viewer';\n  return 'none';\n}\n\n/**\n * Convert access role ID to permission bits\n */\nexport function accessRoleToPermBits(accessRoleId: string): number {\n  switch (accessRoleId) {\n    case AccessRoleIds.AGENT_VIEWER:\n      return PermissionBits.VIEW;\n    case AccessRoleIds.AGENT_EDITOR:\n      return PermissionBits.VIEW | PermissionBits.EDIT;\n    case AccessRoleIds.AGENT_OWNER:\n      return PermissionBits.VIEW | PermissionBits.EDIT | PermissionBits.DELETE;\n    default:\n      return PermissionBits.VIEW;\n  }\n}\n\n/**\n * Check if permission bitmask contains other bitmask\n * @param permissions - The permission bitmask to check\n * @param requiredPermission - The required permission bit(s)\n * @returns {boolean} Whether permissions contains requiredPermission\n */\nexport function hasPermissions(permissions: number, requiredPermission: number): boolean {\n  return (permissions & requiredPermission) === requiredPermission;\n}\n","export enum QueryKeys {\n  messages = 'messages',\n  sharedMessages = 'sharedMessages',\n  sharedLinks = 'sharedLinks',\n  allConversations = 'allConversations',\n  archivedConversations = 'archivedConversations',\n  searchConversations = 'searchConversations',\n  conversation = 'conversation',\n  searchEnabled = 'searchEnabled',\n  user = 'user',\n  name = 'name', // user key name\n  models = 'models',\n  balance = 'balance',\n  endpoints = 'endpoints',\n  presets = 'presets',\n  searchResults = 'searchResults',\n  tokenCount = 'tokenCount',\n  availablePlugins = 'availablePlugins',\n  startupConfig = 'startupConfig',\n  assistants = 'assistants',\n  assistant = 'assistant',\n  agents = 'agents',\n  agent = 'agent',\n  endpointsConfigOverride = 'endpointsConfigOverride',\n  files = 'files',\n  fileConfig = 'fileConfig',\n  tools = 'tools',\n  toolAuth = 'toolAuth',\n  toolCalls = 'toolCalls',\n  mcpConnectionStatus = 'mcpConnectionStatus',\n  mcpAuthValues = 'mcpAuthValues',\n  agentTools = 'agentTools',\n  actions = 'actions',\n  assistantDocs = 'assistantDocs',\n  agentDocs = 'agentDocs',\n  fileDownload = 'fileDownload',\n  voices = 'voices',\n  customConfigSpeech = 'customConfigSpeech',\n  prompts = 'prompts',\n  prompt = 'prompt',\n  promptGroups = 'promptGroups',\n  allPromptGroups = 'allPromptGroups',\n  promptGroup = 'promptGroup',\n  categories = 'categories',\n  randomPrompts = 'randomPrompts',\n  agentCategories = 'agentCategories',\n  marketplaceAgents = 'marketplaceAgents',\n  roles = 'roles',\n  conversationTags = 'conversationTags',\n  health = 'health',\n  userTerms = 'userTerms',\n  banner = 'banner',\n  /* Memories */\n  memories = 'memories',\n  principalSearch = 'principalSearch',\n  accessRoles = 'accessRoles',\n  resourcePermissions = 'resourcePermissions',\n  effectivePermissions = 'effectivePermissions',\n  graphToken = 'graphToken',\n}\n\n// Dynamic query keys that require parameters\nexport const DynamicQueryKeys = {\n  agentFiles: (agentId: string) => ['agentFiles', agentId] as const,\n} as const;\n\nexport enum MutationKeys {\n  fileUpload = 'fileUpload',\n  fileDelete = 'fileDelete',\n  updatePreset = 'updatePreset',\n  deletePreset = 'deletePreset',\n  loginUser = 'loginUser',\n  logoutUser = 'logoutUser',\n  refreshToken = 'refreshToken',\n  avatarUpload = 'avatarUpload',\n  speechToText = 'speechToText',\n  textToSpeech = 'textToSpeech',\n  assistantAvatarUpload = 'assistantAvatarUpload',\n  agentAvatarUpload = 'agentAvatarUpload',\n  updateAction = 'updateAction',\n  updateAgentAction = 'updateAgentAction',\n  deleteAction = 'deleteAction',\n  deleteAgentAction = 'deleteAgentAction',\n  revertAgentVersion = 'revertAgentVersion',\n  deleteUser = 'deleteUser',\n  updateRole = 'updateRole',\n  enableTwoFactor = 'enableTwoFactor',\n  verifyTwoFactor = 'verifyTwoFactor',\n  updateMemoryPreferences = 'updateMemoryPreferences',\n}\n","import axios from 'axios';\n\nexport function setAcceptLanguageHeader(value: string): void {\n  axios.defaults.headers.common['Accept-Language'] = value;\n}\n\nexport function setTokenHeader(token: string) {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n","import type { AssistantsEndpoint } from './schemas';\nimport * as q from './types/queries';\nimport { ResourceType } from './accessPermissions';\n\n// Testing this buildQuery function\nconst buildQuery = (params: Record<string, unknown>): string => {\n  const query = Object.entries(params)\n    .filter(([, value]) => {\n      if (Array.isArray(value)) {\n        return value.length > 0;\n      }\n      return value !== undefined && value !== null && value !== '';\n    })\n    .map(([key, value]) => {\n      if (Array.isArray(value)) {\n        return value.map((v) => `${key}=${encodeURIComponent(v)}`).join('&');\n      }\n      return `${key}=${encodeURIComponent(String(value))}`;\n    })\n    .join('&');\n  return query ? `?${query}` : '';\n};\n\nexport const health = () => '/health';\nexport const user = () => '/api/user';\n\nexport const balance = () => '/api/balance';\n\nexport const userPlugins = () => '/api/user/plugins';\n\nexport const deleteUser = () => '/api/user/delete';\n\nexport const messages = (params: q.MessagesListParams) => {\n  const { conversationId, messageId, ...rest } = params;\n\n  if (conversationId && messageId) {\n    return `/api/messages/${conversationId}/${messageId}`;\n  }\n\n  if (conversationId) {\n    return `/api/messages/${conversationId}`;\n  }\n\n  return `/api/messages${buildQuery(rest)}`;\n};\n\nconst shareRoot = '/api/share';\nexport const shareMessages = (shareId: string) => `${shareRoot}/${shareId}`;\nexport const getSharedLink = (conversationId: string) => `${shareRoot}/link/${conversationId}`;\nexport const getSharedLinks = (\n  pageSize: number,\n  isPublic: boolean,\n  sortBy: 'title' | 'createdAt',\n  sortDirection: 'asc' | 'desc',\n  search?: string,\n  cursor?: string,\n) =>\n  `${shareRoot}?pageSize=${pageSize}&isPublic=${isPublic}&sortBy=${sortBy}&sortDirection=${sortDirection}${\n    search ? `&search=${search}` : ''\n  }${cursor ? `&cursor=${cursor}` : ''}`;\nexport const createSharedLink = (conversationId: string) => `${shareRoot}/${conversationId}`;\nexport const updateSharedLink = (shareId: string) => `${shareRoot}/${shareId}`;\n\nconst keysEndpoint = '/api/keys';\n\nexport const keys = () => keysEndpoint;\n\nexport const userKeyQuery = (name: string) => `${keysEndpoint}?name=${name}`;\n\nexport const revokeUserKey = (name: string) => `${keysEndpoint}/${name}`;\n\nexport const revokeAllUserKeys = () => `${keysEndpoint}?all=true`;\n\nexport const conversationsRoot = '/api/convos';\n\nexport const conversations = (params: q.ConversationListParams) => {\n  return `${conversationsRoot}${buildQuery(params)}`;\n};\n\nexport const conversationById = (id: string) => `${conversationsRoot}/${id}`;\n\nexport const genTitle = () => `${conversationsRoot}/gen_title`;\n\nexport const updateConversation = () => `${conversationsRoot}/update`;\n\nexport const deleteConversation = () => `${conversationsRoot}`;\n\nexport const deleteAllConversation = () => `${conversationsRoot}/all`;\n\nexport const importConversation = () => `${conversationsRoot}/import`;\n\nexport const forkConversation = () => `${conversationsRoot}/fork`;\n\nexport const duplicateConversation = () => `${conversationsRoot}/duplicate`;\n\nexport const search = (q: string, cursor?: string | null) =>\n  `/api/search?q=${q}${cursor ? `&cursor=${cursor}` : ''}`;\n\nexport const searchEnabled = () => '/api/search/enable';\n\nexport const presets = () => '/api/presets';\n\nexport const deletePreset = () => '/api/presets/delete';\n\nexport const aiEndpoints = () => '/api/endpoints';\n\nexport const endpointsConfigOverride = () => '/api/endpoints/config/override';\n\nexport const models = () => '/api/models';\n\nexport const tokenizer = () => '/api/tokenizer';\n\nexport const login = () => '/api/auth/login';\n\nexport const logout = () => '/api/auth/logout';\n\nexport const register = () => '/api/auth/register';\n\nexport const loginFacebook = () => '/api/auth/facebook';\n\nexport const loginGoogle = () => '/api/auth/google';\n\nexport const refreshToken = (retry?: boolean) =>\n  `/api/auth/refresh${retry === true ? '?retry=true' : ''}`;\n\nexport const requestPasswordReset = () => '/api/auth/requestPasswordReset';\n\nexport const resetPassword = () => '/api/auth/resetPassword';\n\nexport const verifyEmail = () => '/api/user/verify';\n\nexport const resendVerificationEmail = () => '/api/user/verify/resend';\n\nexport const plugins = () => '/api/plugins';\n\nexport const mcpReinitialize = (serverName: string) => `/api/mcp/${serverName}/reinitialize`;\nexport const mcpConnectionStatus = () => '/api/mcp/connection/status';\nexport const mcpServerConnectionStatus = (serverName: string) =>\n  `/api/mcp/connection/status/${serverName}`;\nexport const mcpAuthValues = (serverName: string) => {\n  return `/api/mcp/${serverName}/auth-values`;\n};\n\nexport const cancelMCPOAuth = (serverName: string) => {\n  return `/api/mcp/oauth/cancel/${serverName}`;\n};\n\nexport const config = () => '/api/config';\n\nexport const prompts = () => '/api/prompts';\n\nexport const addPromptToGroup = (groupId: string) => `/api/prompts/groups/${groupId}/prompts`;\n\nexport const assistants = ({\n  path = '',\n  options,\n  version,\n  endpoint,\n  isAvatar,\n}: {\n  path?: string;\n  options?: object;\n  endpoint?: AssistantsEndpoint;\n  version: number | string;\n  isAvatar?: boolean;\n}) => {\n  let url = isAvatar === true ? `${images()}/assistants` : `/api/assistants/v${version}`;\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (endpoint) {\n    options = {\n      ...(options ?? {}),\n      endpoint,\n    };\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const agents = ({ path = '', options }: { path?: string; options?: object }) => {\n  let url = '/api/agents';\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const revertAgentVersion = (agent_id: string) => `${agents({ path: `${agent_id}/revert` })}`;\n\nexport const files = () => '/api/files';\nexport const fileUpload = () => '/api/files';\nexport const fileDelete = () => '/api/files';\nexport const fileDownload = (userId: string, fileId: string) =>\n  `/api/files/download/${userId}/${fileId}`;\nexport const fileConfig = () => '/api/files/config';\nexport const agentFiles = (agentId: string) => `/api/files/agent/${agentId}`;\n\nexport const images = () => `${files()}/images`;\n\nexport const avatar = () => `${images()}/avatar`;\n\nexport const speech = () => `${files()}/speech`;\n\nexport const speechToText = () => `${speech()}/stt`;\n\nexport const textToSpeech = () => `${speech()}/tts`;\n\nexport const textToSpeechManual = () => `${textToSpeech()}/manual`;\n\nexport const textToSpeechVoices = () => `${textToSpeech()}/voices`;\n\nexport const getCustomConfigSpeech = () => `${speech()}/config/get`;\n\nexport const getPromptGroup = (_id: string) => `${prompts()}/groups/${_id}`;\n\nexport const getPromptGroupsWithFilters = (filter: object) => {\n  let url = `${prompts()}/groups`;\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPromptsWithFilters = (filter: object) => {\n  let url = prompts();\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPrompt = (_id: string) => `${prompts()}/${_id}`;\n\nexport const getRandomPrompts = (limit: number, skip: number) =>\n  `${prompts()}/random?limit=${limit}&skip=${skip}`;\n\nexport const postPrompt = prompts;\n\nexport const updatePromptGroup = getPromptGroup;\n\nexport const updatePromptLabels = (_id: string) => `${getPrompt(_id)}/labels`;\n\nexport const updatePromptTag = (_id: string) => `${getPrompt(_id)}/tags/production`;\n\nexport const deletePromptGroup = getPromptGroup;\n\nexport const deletePrompt = ({ _id, groupId }: { _id: string; groupId: string }) => {\n  return `${prompts()}/${_id}?groupId=${groupId}`;\n};\n\nexport const getCategories = () => '/api/categories';\n\nexport const getAllPromptGroups = () => `${prompts()}/all`;\n\n/* Roles */\nexport const roles = () => '/api/roles';\nexport const getRole = (roleName: string) => `${roles()}/${roleName.toLowerCase()}`;\nexport const updatePromptPermissions = (roleName: string) => `${getRole(roleName)}/prompts`;\nexport const updateMemoryPermissions = (roleName: string) => `${getRole(roleName)}/memories`;\nexport const updateAgentPermissions = (roleName: string) => `${getRole(roleName)}/agents`;\nexport const updatePeoplePickerPermissions = (roleName: string) =>\n  `${getRole(roleName)}/people-picker`;\n\nexport const updateMarketplacePermissions = (roleName: string) =>\n  `${getRole(roleName)}/marketplace`;\n\n/* Conversation Tags */\nexport const conversationTags = (tag?: string) =>\n  `/api/tags${tag != null && tag ? `/${encodeURIComponent(tag)}` : ''}`;\n\nexport const conversationTagsList = (pageNumber: string, sort?: string, order?: string) =>\n  `${conversationTags()}/list?pageNumber=${pageNumber}${sort ? `&sort=${sort}` : ''}${\n    order ? `&order=${order}` : ''\n  }`;\n\nexport const addTagToConversation = (conversationId: string) =>\n  `${conversationTags()}/convo/${conversationId}`;\n\nexport const userTerms = () => '/api/user/terms';\nexport const acceptUserTerms = () => '/api/user/terms/accept';\nexport const banner = () => '/api/banner';\n\n// Message Feedback\nexport const feedback = (conversationId: string, messageId: string) =>\n  `/api/messages/${conversationId}/${messageId}/feedback`;\n\n// Two-Factor Endpoints\nexport const enableTwoFactor = () => '/api/auth/2fa/enable';\nexport const verifyTwoFactor = () => '/api/auth/2fa/verify';\nexport const confirmTwoFactor = () => '/api/auth/2fa/confirm';\nexport const disableTwoFactor = () => '/api/auth/2fa/disable';\nexport const regenerateBackupCodes = () => '/api/auth/2fa/backup/regenerate';\nexport const verifyTwoFactorTemp = () => '/api/auth/2fa/verify-temp';\n\n/* Memories */\nexport const memories = () => '/api/memories';\nexport const memory = (key: string) => `${memories()}/${encodeURIComponent(key)}`;\nexport const memoryPreferences = () => `${memories()}/preferences`;\n\nexport const searchPrincipals = (params: q.PrincipalSearchParams) => {\n  const { q: query, limit, types } = params;\n  let url = `/api/permissions/search-principals?q=${encodeURIComponent(query)}`;\n\n  if (limit !== undefined) {\n    url += `&limit=${limit}`;\n  }\n\n  if (types && types.length > 0) {\n    url += `&types=${types.join(',')}`;\n  }\n\n  return url;\n};\n\nexport const getAccessRoles = (resourceType: ResourceType) =>\n  `/api/permissions/${resourceType}/roles`;\n\nexport const getResourcePermissions = (resourceType: ResourceType, resourceId: string) =>\n  `/api/permissions/${resourceType}/${resourceId}`;\n\nexport const updateResourcePermissions = (resourceType: ResourceType, resourceId: string) =>\n  `/api/permissions/${resourceType}/${resourceId}`;\n\nexport const getEffectivePermissions = (resourceType: ResourceType, resourceId: string) =>\n  `/api/permissions/${resourceType}/${resourceId}/effective`;\n\n// SharePoint Graph API Token\nexport const graphToken = (scopes: string) =>\n  `/api/auth/graph-token?scopes=${encodeURIComponent(scopes)}`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosError, AxiosRequestConfig } from 'axios';\nimport * as endpoints from './api-endpoints';\nimport { setTokenHeader } from './headers-helpers';\nimport type * as t from './types';\n\nasync function _get<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.get(url, { ...options });\n  return response.data;\n}\n\nasync function _getResponse<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  return await axios.get(url, { ...options });\n}\n\nasync function _post(url: string, data?: any) {\n  const response = await axios.post(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _postMultiPart(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n  return response.data;\n}\n\nasync function _postTTS(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'arraybuffer',\n  });\n  return response.data;\n}\n\nasync function _put(url: string, data?: any) {\n  const response = await axios.put(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _delete<T>(url: string): Promise<T> {\n  const response = await axios.delete(url);\n  return response.data;\n}\n\nasync function _deleteWithOptions<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.delete(url, { ...options });\n  return response.data;\n}\n\nasync function _patch(url: string, data?: any) {\n  const response = await axios.patch(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nlet isRefreshing = false;\nlet failedQueue: { resolve: (value?: any) => void; reject: (reason?: any) => void }[] = [];\n\nconst refreshToken = (retry?: boolean): Promise<t.TRefreshTokenResponse | undefined> =>\n  _post(endpoints.refreshToken(retry));\n\nconst dispatchTokenUpdatedEvent = (token: string) => {\n  setTokenHeader(token);\n  window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: token }));\n};\n\nconst processQueue = (error: AxiosError | null, token: string | null = null) => {\n  failedQueue.forEach((prom) => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    if (!error.response) {\n      return Promise.reject(error);\n    }\n\n    if (originalRequest.url?.includes('/api/auth/2fa') === true) {\n      return Promise.reject(error);\n    }\n    if (originalRequest.url?.includes('/api/auth/logout') === true) {\n      return Promise.reject(error);\n    }\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      console.warn('401 error, refreshing token');\n      originalRequest._retry = true;\n\n      if (isRefreshing) {\n        try {\n          const token = await new Promise((resolve, reject) => {\n            failedQueue.push({ resolve, reject });\n          });\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          return await axios(originalRequest);\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      }\n\n      isRefreshing = true;\n\n      try {\n        const response = await refreshToken(\n          // Handle edge case where we get a blank screen if the initial 401 error is from a refresh token request\n          originalRequest.url?.includes('api/auth/refresh') === true ? true : false,\n        );\n\n        const token = response?.token ?? '';\n\n        if (token) {\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          dispatchTokenUpdatedEvent(token);\n          processQueue(null, token);\n          return await axios(originalRequest);\n        } else if (window.location.href.includes('share/')) {\n          console.log(\n            `Refresh token failed from shared link, attempting request to ${originalRequest.url}`,\n          );\n        } else {\n          window.location.href = '/login';\n        }\n      } catch (err) {\n        processQueue(err as AxiosError, null);\n        return Promise.reject(err);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n\n    return Promise.reject(error);\n  },\n);\n\nexport default {\n  get: _get,\n  getResponse: _getResponse,\n  post: _post,\n  postMultiPart: _postMultiPart,\n  postTTS: _postTTS,\n  put: _put,\n  delete: _delete,\n  deleteWithOptions: _deleteWithOptions,\n  patch: _patch,\n  refreshToken,\n  dispatchTokenUpdatedEvent,\n};\n","import type { AxiosResponse } from 'axios';\nimport type * as t from './types';\nimport * as endpoints from './api-endpoints';\nimport * as a from './types/assistants';\nimport * as ag from './types/agents';\nimport * as m from './types/mutations';\nimport * as q from './types/queries';\nimport * as f from './types/files';\nimport * as config from './config';\nimport request from './request';\nimport * as s from './schemas';\nimport * as r from './roles';\nimport * as permissions from './accessPermissions';\n\nexport function revokeUserKey(name: string): Promise<unknown> {\n  return request.delete(endpoints.revokeUserKey(name));\n}\n\nexport function revokeAllUserKeys(): Promise<unknown> {\n  return request.delete(endpoints.revokeAllUserKeys());\n}\n\nexport function deleteUser(): Promise<s.TPreset> {\n  return request.delete(endpoints.deleteUser());\n}\n\nexport function getSharedMessages(shareId: string): Promise<t.TSharedMessagesResponse> {\n  return request.get(endpoints.shareMessages(shareId));\n}\n\nexport const listSharedLinks = async (\n  params: q.SharedLinksListParams,\n): Promise<q.SharedLinksResponse> => {\n  const { pageSize, isPublic, sortBy, sortDirection, search, cursor } = params;\n\n  return request.get(\n    endpoints.getSharedLinks(pageSize, isPublic, sortBy, sortDirection, search, cursor),\n  );\n};\n\nexport function getSharedLink(conversationId: string): Promise<t.TSharedLinkGetResponse> {\n  return request.get(endpoints.getSharedLink(conversationId));\n}\n\nexport function createSharedLink(conversationId: string): Promise<t.TSharedLinkResponse> {\n  return request.post(endpoints.createSharedLink(conversationId));\n}\n\nexport function updateSharedLink(shareId: string): Promise<t.TSharedLinkResponse> {\n  return request.patch(endpoints.updateSharedLink(shareId));\n}\n\nexport function deleteSharedLink(shareId: string): Promise<m.TDeleteSharedLinkResponse> {\n  return request.delete(endpoints.shareMessages(shareId));\n}\n\nexport function updateUserKey(payload: t.TUpdateUserKeyRequest) {\n  const { value } = payload;\n  if (!value) {\n    throw new Error('value is required');\n  }\n\n  return request.put(endpoints.keys(), payload);\n}\n\nexport function getPresets(): Promise<s.TPreset[]> {\n  return request.get(endpoints.presets());\n}\n\nexport function createPreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function updatePreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function deletePreset(arg: s.TPreset | undefined): Promise<m.PresetDeleteResponse> {\n  return request.post(endpoints.deletePreset(), arg);\n}\n\nexport function getSearchEnabled(): Promise<boolean> {\n  return request.get(endpoints.searchEnabled());\n}\n\nexport function getUser(): Promise<t.TUser> {\n  return request.get(endpoints.user());\n}\n\nexport function getUserBalance(): Promise<t.TBalanceResponse> {\n  return request.get(endpoints.balance());\n}\n\nexport const updateTokenCount = (text: string) => {\n  return request.post(endpoints.tokenizer(), { arg: text });\n};\n\nexport const login = (payload: t.TLoginUser): Promise<t.TLoginResponse> => {\n  return request.post(endpoints.login(), payload);\n};\n\nexport const logout = (): Promise<m.TLogoutResponse> => {\n  return request.post(endpoints.logout());\n};\n\nexport const register = (payload: t.TRegisterUser) => {\n  return request.post(endpoints.register(), payload);\n};\n\nexport const userKeyQuery = (name: string): Promise<t.TCheckUserKeyResponse> =>\n  request.get(endpoints.userKeyQuery(name));\n\nexport const getLoginGoogle = () => {\n  return request.get(endpoints.loginGoogle());\n};\n\nexport const requestPasswordReset = (\n  payload: t.TRequestPasswordReset,\n): Promise<t.TRequestPasswordResetResponse> => {\n  return request.post(endpoints.requestPasswordReset(), payload);\n};\n\nexport const resetPassword = (payload: t.TResetPassword) => {\n  return request.post(endpoints.resetPassword(), payload);\n};\n\nexport const verifyEmail = (payload: t.TVerifyEmail): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.verifyEmail(), payload);\n};\n\nexport const resendVerificationEmail = (\n  payload: t.TResendVerificationEmail,\n): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.resendVerificationEmail(), payload);\n};\n\nexport const getAvailablePlugins = (): Promise<s.TPlugin[]> => {\n  return request.get(endpoints.plugins());\n};\n\nexport const updateUserPlugins = (payload: t.TUpdateUserPlugins) => {\n  return request.post(endpoints.userPlugins(), payload);\n};\n\nexport const reinitializeMCPServer = (serverName: string) => {\n  return request.post(endpoints.mcpReinitialize(serverName));\n};\n\nexport const getMCPConnectionStatus = (): Promise<q.MCPConnectionStatusResponse> => {\n  return request.get(endpoints.mcpConnectionStatus());\n};\n\nexport const getMCPServerConnectionStatus = (\n  serverName: string,\n): Promise<q.MCPServerConnectionStatusResponse> => {\n  return request.get(endpoints.mcpServerConnectionStatus(serverName));\n};\n\nexport const getMCPAuthValues = (serverName: string): Promise<q.MCPAuthValuesResponse> => {\n  return request.get(endpoints.mcpAuthValues(serverName));\n};\n\nexport function cancelMCPOAuth(serverName: string): Promise<m.CancelMCPOAuthResponse> {\n  return request.post(endpoints.cancelMCPOAuth(serverName), {});\n}\n\n/* Config */\n\nexport const getStartupConfig = (): Promise<\n  config.TStartupConfig & {\n    mcpCustomUserVars?: Record<string, { title: string; description: string }>;\n  }\n> => {\n  return request.get(endpoints.config());\n};\n\nexport const getAIEndpoints = (): Promise<t.TEndpointsConfig> => {\n  return request.get(endpoints.aiEndpoints());\n};\n\nexport const getModels = async (): Promise<t.TModelsConfig> => {\n  return request.get(endpoints.models());\n};\n\nexport const getEndpointsConfigOverride = (): Promise<unknown | boolean> => {\n  return request.get(endpoints.endpointsConfigOverride());\n};\n\n/* Assistants */\n\nexport const createAssistant = ({\n  version,\n  ...data\n}: a.AssistantCreateParams): Promise<a.Assistant> => {\n  return request.post(endpoints.assistants({ version }), data);\n};\n\nexport const getAssistantById = ({\n  endpoint,\n  assistant_id,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint;\n  assistant_id: string;\n  version: number | string | number;\n}): Promise<a.Assistant> => {\n  return request.get(\n    endpoints.assistants({\n      path: assistant_id,\n      endpoint,\n      version,\n    }),\n  );\n};\n\nexport const updateAssistant = ({\n  assistant_id,\n  data,\n  version,\n}: {\n  assistant_id: string;\n  data: a.AssistantUpdateParams;\n  version: number | string;\n}): Promise<a.Assistant> => {\n  return request.patch(\n    endpoints.assistants({\n      path: assistant_id,\n      version,\n    }),\n    data,\n  );\n};\n\nexport const deleteAssistant = ({\n  assistant_id,\n  model,\n  endpoint,\n  version,\n}: m.DeleteAssistantBody & { version: number | string }): Promise<void> => {\n  return request.delete(\n    endpoints.assistants({\n      path: assistant_id,\n      options: { model, endpoint },\n      version,\n    }),\n  );\n};\n\nexport const listAssistants = (\n  params: a.AssistantListParams,\n  version: number | string,\n): Promise<a.AssistantListResponse> => {\n  return request.get(\n    endpoints.assistants({\n      version,\n      options: params,\n    }),\n  );\n};\n\nexport function getAssistantDocs({\n  endpoint,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint | string;\n  version: number | string;\n}): Promise<a.AssistantDocument[]> {\n  if (!s.isAssistantsEndpoint(endpoint)) {\n    return Promise.resolve([]);\n  }\n  return request.get(\n    endpoints.assistants({\n      path: 'documents',\n      version,\n      options: { endpoint },\n      endpoint: endpoint as s.AssistantsEndpoint,\n    }),\n  );\n}\n\n/* Tools */\n\nexport const getAvailableTools = (\n  _endpoint: s.AssistantsEndpoint | s.EModelEndpoint.agents,\n  version?: number | string,\n): Promise<s.TPlugin[]> => {\n  let path = '';\n  if (s.isAssistantsEndpoint(_endpoint)) {\n    const endpoint = _endpoint as s.AssistantsEndpoint;\n    path = endpoints.assistants({\n      path: 'tools',\n      endpoint: endpoint,\n      version: version ?? config.defaultAssistantsVersion[endpoint],\n    });\n  } else {\n    path = endpoints.agents({\n      path: 'tools',\n    });\n  }\n\n  return request.get(path);\n};\n\nexport const getVerifyAgentToolAuth = (\n  params: q.VerifyToolAuthParams,\n): Promise<q.VerifyToolAuthResponse> => {\n  return request.get(\n    endpoints.agents({\n      path: `tools/${params.toolId}/auth`,\n    }),\n  );\n};\n\nexport const callTool = <T extends m.ToolId>({\n  toolId,\n  toolParams,\n}: {\n  toolId: T;\n  toolParams: m.ToolParams<T>;\n}): Promise<m.ToolCallResponse> => {\n  return request.post(\n    endpoints.agents({\n      path: `tools/${toolId}/call`,\n    }),\n    toolParams,\n  );\n};\n\nexport const getToolCalls = (params: q.GetToolCallParams): Promise<q.ToolCallResults> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools/calls',\n      options: params,\n    }),\n  );\n};\n\n/* Files */\n\nexport const getFiles = (): Promise<f.TFile[]> => {\n  return request.get(endpoints.files());\n};\n\nexport const getAgentFiles = (agentId: string): Promise<f.TFile[]> => {\n  return request.get(endpoints.agentFiles(agentId));\n};\n\nexport const getFileConfig = (): Promise<f.FileConfig> => {\n  return request.get(`${endpoints.files()}/config`);\n};\n\nexport const uploadImage = (\n  data: FormData,\n  signal?: AbortSignal | null,\n): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.images(), data, requestConfig);\n};\n\nexport const uploadFile = (data: FormData, signal?: AbortSignal | null): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.files(), data, requestConfig);\n};\n\n/* actions */\n\nexport const updateAction = (data: m.UpdateActionVariables): Promise<m.UpdateActionResponse> => {\n  const { assistant_id, version, ...body } = data;\n  return request.post(\n    endpoints.assistants({\n      path: `actions/${assistant_id}`,\n      version,\n    }),\n    body,\n  );\n};\n\nexport function getActions(): Promise<ag.Action[]> {\n  return request.get(\n    endpoints.agents({\n      path: 'actions',\n    }),\n  );\n}\n\nexport const deleteAction = async ({\n  assistant_id,\n  action_id,\n  model,\n  version,\n  endpoint,\n}: m.DeleteActionVariables & { version: number | string }): Promise<void> =>\n  request.delete(\n    endpoints.assistants({\n      path: `actions/${assistant_id}/${action_id}/${model}`,\n      version,\n      endpoint,\n    }),\n  );\n\n/**\n * Agents\n */\n\nexport const createAgent = ({ ...data }: a.AgentCreateParams): Promise<a.Agent> => {\n  return request.post(endpoints.agents({}), data);\n};\n\nexport const getAgentById = ({ agent_id }: { agent_id: string }): Promise<a.Agent> => {\n  return request.get(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const getExpandedAgentById = ({ agent_id }: { agent_id: string }): Promise<a.Agent> => {\n  return request.get(\n    endpoints.agents({\n      path: `${agent_id}/expanded`,\n    }),\n  );\n};\n\nexport const updateAgent = ({\n  agent_id,\n  data,\n}: {\n  agent_id: string;\n  data: a.AgentUpdateParams;\n}): Promise<a.Agent> => {\n  return request.patch(\n    endpoints.agents({\n      path: agent_id,\n    }),\n    data,\n  );\n};\n\nexport const duplicateAgent = ({\n  agent_id,\n}: m.DuplicateAgentBody): Promise<{ agent: a.Agent; actions: ag.Action[] }> => {\n  return request.post(\n    endpoints.agents({\n      path: `${agent_id}/duplicate`,\n    }),\n  );\n};\n\nexport const deleteAgent = ({ agent_id }: m.DeleteAgentBody): Promise<void> => {\n  return request.delete(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const listAgents = (params: a.AgentListParams): Promise<a.AgentListResponse> => {\n  return request.get(\n    endpoints.agents({\n      options: params,\n    }),\n  );\n};\n\nexport const revertAgentVersion = ({\n  agent_id,\n  version_index,\n}: {\n  agent_id: string;\n  version_index: number;\n}): Promise<a.Agent> => request.post(endpoints.revertAgentVersion(agent_id), { version_index });\n\n/* Marketplace */\n\n/**\n * Get agent categories with counts for marketplace tabs\n */\nexport const getAgentCategories = (): Promise<t.TMarketplaceCategory[]> => {\n  return request.get(endpoints.agents({ path: 'categories' }));\n};\n\n/**\n * Unified marketplace agents endpoint with query string controls\n */\nexport const getMarketplaceAgents = (params: {\n  requiredPermission: number;\n  category?: string;\n  search?: string;\n  limit?: number;\n  cursor?: string;\n  promoted?: 0 | 1;\n}): Promise<a.AgentListResponse> => {\n  return request.get(\n    endpoints.agents({\n      // path: 'marketplace',\n      options: params,\n    }),\n  );\n};\n\n/* Tools */\n\nexport const getAvailableAgentTools = (): Promise<s.TPlugin[]> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools',\n    }),\n  );\n};\n\n/* Actions */\n\nexport const updateAgentAction = (\n  data: m.UpdateAgentActionVariables,\n): Promise<m.UpdateAgentActionResponse> => {\n  const { agent_id, ...body } = data;\n  return request.post(\n    endpoints.agents({\n      path: `actions/${agent_id}`,\n    }),\n    body,\n  );\n};\n\nexport const deleteAgentAction = async ({\n  agent_id,\n  action_id,\n}: m.DeleteAgentActionVariables): Promise<void> =>\n  request.delete(\n    endpoints.agents({\n      path: `actions/${agent_id}/${action_id}`,\n    }),\n  );\n\n/**\n * Imports a conversations file.\n *\n * @param data - The FormData containing the file to import.\n * @returns A Promise that resolves to the import start response.\n */\nexport const importConversationsFile = (data: FormData): Promise<t.TImportResponse> => {\n  return request.postMultiPart(endpoints.importConversation(), data);\n};\n\nexport const uploadAvatar = (data: FormData): Promise<f.AvatarUploadResponse> => {\n  return request.postMultiPart(endpoints.avatar(), data);\n};\n\nexport const uploadAssistantAvatar = (data: m.AssistantAvatarVariables): Promise<a.Assistant> => {\n  return request.postMultiPart(\n    endpoints.assistants({\n      isAvatar: true,\n      path: `${data.assistant_id}/avatar`,\n      options: { model: data.model, endpoint: data.endpoint },\n      version: data.version,\n    }),\n    data.formData,\n  );\n};\n\nexport const uploadAgentAvatar = (data: m.AgentAvatarVariables): Promise<a.Agent> => {\n  return request.postMultiPart(\n    `${endpoints.images()}/agents/${data.agent_id}/avatar`,\n    data.formData,\n  );\n};\n\nexport const getFileDownload = async (userId: string, file_id: string): Promise<AxiosResponse> => {\n  return request.getResponse(`${endpoints.files()}/download/${userId}/${file_id}`, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const getCodeOutputDownload = async (url: string): Promise<AxiosResponse> => {\n  return request.getResponse(url, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const deleteFiles = async (payload: {\n  files: f.BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: a.EToolResources;\n}): Promise<f.DeleteFilesResponse> =>\n  request.deleteWithOptions(endpoints.files(), {\n    data: payload,\n  });\n\n/* Speech */\n\nexport const speechToText = (data: FormData): Promise<f.SpeechToTextResponse> => {\n  return request.postMultiPart(endpoints.speechToText(), data);\n};\n\nexport const textToSpeech = (data: FormData): Promise<ArrayBuffer> => {\n  return request.postTTS(endpoints.textToSpeechManual(), data);\n};\n\nexport const getVoices = (): Promise<f.VoiceResponse> => {\n  return request.get(endpoints.textToSpeechVoices());\n};\n\nexport const getCustomConfigSpeech = (): Promise<t.TCustomConfigSpeechResponse> => {\n  return request.get(endpoints.getCustomConfigSpeech());\n};\n\n/* conversations */\n\nexport function duplicateConversation(\n  payload: t.TDuplicateConvoRequest,\n): Promise<t.TDuplicateConvoResponse> {\n  return request.post(endpoints.duplicateConversation(), payload);\n}\n\nexport function forkConversation(payload: t.TForkConvoRequest): Promise<t.TForkConvoResponse> {\n  return request.post(endpoints.forkConversation(), payload);\n}\n\nexport function deleteConversation(payload: t.TDeleteConversationRequest) {\n  return request.deleteWithOptions(endpoints.deleteConversation(), { data: { arg: payload } });\n}\n\nexport function clearAllConversations(): Promise<unknown> {\n  return request.delete(endpoints.deleteAllConversation());\n}\n\nexport const listConversations = (\n  params?: q.ConversationListParams,\n): Promise<q.ConversationListResponse> => {\n  return request.get(endpoints.conversations(params ?? {}));\n};\n\nexport function getConversations(cursor: string): Promise<t.TGetConversationsResponse> {\n  return request.get(endpoints.conversations({ cursor }));\n}\n\nexport function getConversationById(id: string): Promise<s.TConversation> {\n  return request.get(endpoints.conversationById(id));\n}\n\nexport function updateConversation(\n  payload: t.TUpdateConversationRequest,\n): Promise<t.TUpdateConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function archiveConversation(\n  payload: t.TArchiveConversationRequest,\n): Promise<t.TArchiveConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function genTitle(payload: m.TGenTitleRequest): Promise<m.TGenTitleResponse> {\n  return request.post(endpoints.genTitle(), payload);\n}\n\nexport const listMessages = (params?: q.MessagesListParams): Promise<q.MessagesListResponse> => {\n  return request.get(endpoints.messages(params ?? {}));\n};\n\nexport function updateMessage(payload: t.TUpdateMessageRequest): Promise<unknown> {\n  const { conversationId, messageId, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages({ conversationId, messageId }), { text });\n}\n\nexport function updateMessageContent(payload: t.TUpdateMessageContent): Promise<unknown> {\n  const { conversationId, messageId, index, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages({ conversationId, messageId }), { text, index });\n}\n\nexport const editArtifact = async ({\n  messageId,\n  ...params\n}: m.TEditArtifactRequest): Promise<m.TEditArtifactResponse> => {\n  return request.post(`/api/messages/artifact/${messageId}`, params);\n};\n\nexport function getMessagesByConvoId(conversationId: string): Promise<s.TMessage[]> {\n  if (\n    conversationId === config.Constants.NEW_CONVO ||\n    conversationId === config.Constants.PENDING_CONVO\n  ) {\n    return Promise.resolve([]);\n  }\n  return request.get(endpoints.messages({ conversationId }));\n}\n\nexport function getPrompt(id: string): Promise<{ prompt: t.TPrompt }> {\n  return request.get(endpoints.getPrompt(id));\n}\n\nexport function getPrompts(filter: t.TPromptsWithFilterRequest): Promise<t.TPrompt[]> {\n  return request.get(endpoints.getPromptsWithFilters(filter));\n}\n\nexport function getAllPromptGroups(): Promise<q.AllPromptGroupsResponse> {\n  return request.get(endpoints.getAllPromptGroups());\n}\n\nexport function getPromptGroups(\n  filter: t.TPromptGroupsWithFilterRequest,\n): Promise<t.PromptGroupListResponse> {\n  return request.get(endpoints.getPromptGroupsWithFilters(filter));\n}\n\nexport function getPromptGroup(id: string): Promise<t.TPromptGroup> {\n  return request.get(endpoints.getPromptGroup(id));\n}\n\nexport function createPrompt(payload: t.TCreatePrompt): Promise<t.TCreatePromptResponse> {\n  return request.post(endpoints.postPrompt(), payload);\n}\n\nexport function addPromptToGroup(\n  groupId: string,\n  payload: t.TCreatePrompt,\n): Promise<t.TCreatePromptResponse> {\n  return request.post(endpoints.addPromptToGroup(groupId), payload);\n}\n\nexport function updatePromptGroup(\n  variables: t.TUpdatePromptGroupVariables,\n): Promise<t.TUpdatePromptGroupResponse> {\n  return request.patch(endpoints.updatePromptGroup(variables.id), variables.payload);\n}\n\nexport function deletePrompt(payload: t.TDeletePromptVariables): Promise<t.TDeletePromptResponse> {\n  return request.delete(endpoints.deletePrompt(payload));\n}\n\nexport function makePromptProduction(id: string): Promise<t.TMakePromptProductionResponse> {\n  return request.patch(endpoints.updatePromptTag(id));\n}\n\nexport function updatePromptLabels(\n  variables: t.TUpdatePromptLabelsRequest,\n): Promise<t.TUpdatePromptLabelsResponse> {\n  return request.patch(endpoints.updatePromptLabels(variables.id), variables.payload);\n}\n\nexport function deletePromptGroup(id: string): Promise<t.TDeletePromptGroupResponse> {\n  return request.delete(endpoints.deletePromptGroup(id));\n}\n\nexport function getCategories(): Promise<t.TGetCategoriesResponse> {\n  return request.get(endpoints.getCategories());\n}\n\nexport function getRandomPrompts(\n  variables: t.TGetRandomPromptsRequest,\n): Promise<t.TGetRandomPromptsResponse> {\n  return request.get(endpoints.getRandomPrompts(variables.limit, variables.skip));\n}\n\n/* Roles */\nexport function getRole(roleName: string): Promise<r.TRole> {\n  return request.get(endpoints.getRole(roleName));\n}\n\nexport function updatePromptPermissions(\n  variables: m.UpdatePromptPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updatePromptPermissions(variables.roleName), variables.updates);\n}\n\nexport function updateAgentPermissions(\n  variables: m.UpdateAgentPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateAgentPermissions(variables.roleName), variables.updates);\n}\n\nexport function updateMemoryPermissions(\n  variables: m.UpdateMemoryPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateMemoryPermissions(variables.roleName), variables.updates);\n}\n\nexport function updatePeoplePickerPermissions(\n  variables: m.UpdatePeoplePickerPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(\n    endpoints.updatePeoplePickerPermissions(variables.roleName),\n    variables.updates,\n  );\n}\n\nexport function updateMarketplacePermissions(\n  variables: m.UpdateMarketplacePermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateMarketplacePermissions(variables.roleName), variables.updates);\n}\n\n/* Tags */\nexport function getConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.get(endpoints.conversationTags());\n}\n\nexport function createConversationTag(\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.post(endpoints.conversationTags(), payload);\n}\n\nexport function updateConversationTag(\n  tag: string,\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.put(endpoints.conversationTags(tag), payload);\n}\nexport function deleteConversationTag(tag: string): Promise<t.TConversationTagResponse> {\n  return request.delete(endpoints.conversationTags(tag));\n}\n\nexport function addTagToConversation(\n  conversationId: string,\n  payload: t.TTagConversationRequest,\n): Promise<t.TTagConversationResponse> {\n  return request.put(endpoints.addTagToConversation(conversationId), payload);\n}\nexport function rebuildConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.post(endpoints.conversationTags('rebuild'));\n}\n\nexport function healthCheck(): Promise<string> {\n  return request.get(endpoints.health());\n}\n\nexport function getUserTerms(): Promise<t.TUserTermsResponse> {\n  return request.get(endpoints.userTerms());\n}\n\nexport function acceptTerms(): Promise<t.TAcceptTermsResponse> {\n  return request.post(endpoints.acceptUserTerms());\n}\n\nexport function getBanner(): Promise<t.TBannerResponse> {\n  return request.get(endpoints.banner());\n}\n\nexport function updateFeedback(\n  conversationId: string,\n  messageId: string,\n  payload: t.TUpdateFeedbackRequest,\n): Promise<t.TUpdateFeedbackResponse> {\n  return request.put(endpoints.feedback(conversationId, messageId), payload);\n}\n\n// 2FA\nexport function enableTwoFactor(): Promise<t.TEnable2FAResponse> {\n  return request.get(endpoints.enableTwoFactor());\n}\n\nexport function verifyTwoFactor(payload: t.TVerify2FARequest): Promise<t.TVerify2FAResponse> {\n  return request.post(endpoints.verifyTwoFactor(), payload);\n}\n\nexport function confirmTwoFactor(payload: t.TVerify2FARequest): Promise<t.TVerify2FAResponse> {\n  return request.post(endpoints.confirmTwoFactor(), payload);\n}\n\nexport function disableTwoFactor(payload?: t.TDisable2FARequest): Promise<t.TDisable2FAResponse> {\n  return request.post(endpoints.disableTwoFactor(), payload);\n}\n\nexport function regenerateBackupCodes(): Promise<t.TRegenerateBackupCodesResponse> {\n  return request.post(endpoints.regenerateBackupCodes());\n}\n\nexport function verifyTwoFactorTemp(\n  payload: t.TVerify2FATempRequest,\n): Promise<t.TVerify2FATempResponse> {\n  return request.post(endpoints.verifyTwoFactorTemp(), payload);\n}\n\n/* Memories */\nexport const getMemories = (): Promise<q.MemoriesResponse> => {\n  return request.get(endpoints.memories());\n};\n\nexport const deleteMemory = (key: string): Promise<void> => {\n  return request.delete(endpoints.memory(key));\n};\n\nexport const updateMemory = (\n  key: string,\n  value: string,\n  originalKey?: string,\n): Promise<q.TUserMemory> => {\n  return request.patch(endpoints.memory(originalKey || key), { key, value });\n};\n\nexport const updateMemoryPreferences = (preferences: {\n  memories: boolean;\n}): Promise<{ updated: boolean; preferences: { memories: boolean } }> => {\n  return request.patch(endpoints.memoryPreferences(), preferences);\n};\n\nexport const createMemory = (data: {\n  key: string;\n  value: string;\n}): Promise<{ created: boolean; memory: q.TUserMemory }> => {\n  return request.post(endpoints.memories(), data);\n};\n\nexport function searchPrincipals(\n  params: q.PrincipalSearchParams,\n): Promise<q.PrincipalSearchResponse> {\n  return request.get(endpoints.searchPrincipals(params));\n}\n\nexport function getAccessRoles(\n  resourceType: permissions.ResourceType,\n): Promise<q.AccessRolesResponse> {\n  return request.get(endpoints.getAccessRoles(resourceType));\n}\n\nexport function getResourcePermissions(\n  resourceType: permissions.ResourceType,\n  resourceId: string,\n): Promise<permissions.TGetResourcePermissionsResponse> {\n  return request.get(endpoints.getResourcePermissions(resourceType, resourceId));\n}\n\nexport function updateResourcePermissions(\n  resourceType: permissions.ResourceType,\n  resourceId: string,\n  data: permissions.TUpdateResourcePermissionsRequest,\n): Promise<permissions.TUpdateResourcePermissionsResponse> {\n  return request.put(endpoints.updateResourcePermissions(resourceType, resourceId), data);\n}\n\nexport function getEffectivePermissions(\n  resourceType: permissions.ResourceType,\n  resourceId: string,\n): Promise<permissions.TEffectivePermissionsResponse> {\n  return request.get(endpoints.getEffectivePermissions(resourceType, resourceId));\n}\n\n// SharePoint Graph API Token\nexport function getGraphApiToken(params: q.GraphTokenParams): Promise<q.GraphTokenResponse> {\n  return request.get(endpoints.graphToken(params.scopes));\n}\n","import { z } from 'zod';\nimport _axios from 'axios';\nimport { URL } from 'url';\nimport crypto from 'crypto';\nimport { load } from 'js-yaml';\nimport type { ActionMetadata, ActionMetadataRuntime } from './types/agents';\nimport type { FunctionTool, Schema, Reference } from './types/assistants';\nimport { AuthTypeEnum, AuthorizationTypeEnum } from './types/agents';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { Tools } from './types/assistants';\n\nexport type ParametersSchema = {\n  type: string;\n  properties: Record<string, Reference | Schema>;\n  required: string[];\n  additionalProperties?: boolean;\n};\n\nexport type OpenAPISchema = OpenAPIV3.SchemaObject &\n  ParametersSchema & {\n    items?: OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject;\n  };\n\nexport type ApiKeyCredentials = {\n  api_key: string;\n  custom_auth_header?: string;\n  authorization_type?: AuthorizationTypeEnum;\n};\n\nexport type OAuthCredentials = {\n  tokenUrl: string;\n  clientId: string;\n  clientSecret: string;\n  scope: string;\n};\n\nexport type Credentials = ApiKeyCredentials | OAuthCredentials;\n\ntype MediaTypeObject =\n  | undefined\n  | {\n      [media: string]: OpenAPIV3.MediaTypeObject | undefined;\n    };\n\ntype RequestBodyObject = Omit<OpenAPIV3.RequestBodyObject, 'content'> & {\n  content: MediaTypeObject;\n};\n\nexport function sha1(input: string) {\n  return crypto.createHash('sha1').update(input).digest('hex');\n}\n\nexport function createURL(domain: string, path: string) {\n  const cleanDomain = domain.replace(/\\/$/, '');\n  const cleanPath = path.replace(/^\\//, '');\n  const fullURL = `${cleanDomain}/${cleanPath}`;\n  return new URL(fullURL).toString();\n}\n\nconst schemaTypeHandlers: Record<string, (schema: OpenAPISchema) => z.ZodTypeAny> = {\n  string: (schema) => {\n    if (schema.enum) {\n      return z.enum(schema.enum as [string, ...string[]]);\n    }\n\n    let stringSchema = z.string();\n    if (schema.minLength !== undefined) {\n      stringSchema = stringSchema.min(schema.minLength);\n    }\n    if (schema.maxLength !== undefined) {\n      stringSchema = stringSchema.max(schema.maxLength);\n    }\n    return stringSchema;\n  },\n  number: (schema) => {\n    let numberSchema = z.number();\n    if (schema.minimum !== undefined) {\n      numberSchema = numberSchema.min(schema.minimum);\n    }\n    if (schema.maximum !== undefined) {\n      numberSchema = numberSchema.max(schema.maximum);\n    }\n    return numberSchema;\n  },\n  integer: (schema) => (schemaTypeHandlers.number(schema) as z.ZodNumber).int(),\n  boolean: () => z.boolean(),\n  array: (schema) => {\n    if (schema.items) {\n      const zodSchema = openAPISchemaToZod(schema.items as OpenAPISchema);\n      if (zodSchema) {\n        return z.array(zodSchema);\n      }\n\n      return z.array(z.unknown());\n    }\n    return z.array(z.unknown());\n  },\n  object: (schema) => {\n    const shape: { [key: string]: z.ZodTypeAny } = {};\n    if (schema.properties) {\n      Object.entries(schema.properties).forEach(([key, value]) => {\n        const zodSchema = openAPISchemaToZod(value as OpenAPISchema);\n        shape[key] = zodSchema || z.unknown();\n        if (schema.required && schema.required.includes(key)) {\n          shape[key] = shape[key].describe(value.description || '');\n        } else {\n          shape[key] = shape[key].optional().describe(value.description || '');\n        }\n      });\n    }\n    return z.object(shape);\n  },\n};\n\nfunction openAPISchemaToZod(schema: OpenAPISchema): z.ZodTypeAny | undefined {\n  if (schema.type === 'object' && Object.keys(schema.properties || {}).length === 0) {\n    return undefined;\n  }\n\n  const handler = schemaTypeHandlers[schema.type as string] || (() => z.unknown());\n  return handler(schema);\n}\n\n/**\n * Class representing a function signature.\n */\nexport class FunctionSignature {\n  name: string;\n  description: string;\n  parameters: ParametersSchema;\n  strict: boolean;\n\n  constructor(name: string, description: string, parameters: ParametersSchema, strict?: boolean) {\n    this.name = name;\n    this.description = description;\n    this.parameters = parameters;\n    this.strict = strict ?? false;\n  }\n\n  toObjectTool(): FunctionTool {\n    const parameters = {\n      ...this.parameters,\n      additionalProperties: this.strict ? false : undefined,\n    };\n\n    return {\n      type: Tools.function,\n      function: {\n        name: this.name,\n        description: this.description,\n        parameters,\n        ...(this.strict ? { strict: this.strict } : {}),\n      },\n    };\n  }\n}\n\nclass RequestConfig {\n  constructor(\n    readonly domain: string,\n    readonly basePath: string,\n    readonly method: string,\n    readonly operation: string,\n    readonly isConsequential: boolean,\n    readonly contentType: string,\n    readonly parameterLocations?: Record<string, 'query' | 'path' | 'header' | 'body'>,\n  ) {}\n}\n\nclass RequestExecutor {\n  path: string;\n  params?: Record<string, unknown>;\n  private operationHash?: string;\n  private authHeaders: Record<string, string> = {};\n  private authToken?: string;\n\n  constructor(private config: RequestConfig) {\n    this.path = config.basePath;\n  }\n\n  setParams(params: Record<string, unknown>) {\n    this.operationHash = sha1(JSON.stringify(params));\n    this.params = { ...params } as Record<string, unknown>;\n    if (this.config.parameterLocations) {\n      //Substituting “Path” Parameters:\n      for (const [key, value] of Object.entries(params)) {\n        if (this.config.parameterLocations[key] === 'path') {\n          const paramPattern = `{${key}}`;\n          if (this.path.includes(paramPattern)) {\n            this.path = this.path.replace(paramPattern, encodeURIComponent(String(value)));\n            delete this.params[key];\n          }\n        }\n      }\n    } else {\n      // Fallback: if no locations are defined, perform path substitution for all keys.\n      for (const [key, value] of Object.entries(params)) {\n        const paramPattern = `{${key}}`;\n        if (this.path.includes(paramPattern)) {\n          this.path = this.path.replace(paramPattern, encodeURIComponent(String(value)));\n          delete this.params[key];\n        }\n      }\n    }\n    return this;\n  }\n\n  async setAuth(metadata: ActionMetadataRuntime) {\n    if (!metadata.auth) {\n      return this;\n    }\n\n    const {\n      type,\n      /* API Key */\n      authorization_type,\n      custom_auth_header,\n      /* OAuth */\n      authorization_url,\n      client_url,\n      scope,\n      token_exchange_method,\n    } = metadata.auth;\n\n    const {\n      /* API Key */\n      api_key,\n      /* OAuth */\n      oauth_client_id,\n      oauth_client_secret,\n      oauth_token_expires_at,\n      oauth_access_token = '',\n    } = metadata;\n\n    const isApiKey = api_key != null && api_key.length > 0 && type === AuthTypeEnum.ServiceHttp;\n    const isOAuth = !!(\n      oauth_client_id != null &&\n      oauth_client_id &&\n      oauth_client_secret != null &&\n      oauth_client_secret &&\n      type === AuthTypeEnum.OAuth &&\n      authorization_url != null &&\n      authorization_url &&\n      client_url != null &&\n      client_url &&\n      scope != null &&\n      scope &&\n      token_exchange_method\n    );\n\n    if (isApiKey && authorization_type === AuthorizationTypeEnum.Basic) {\n      const basicToken = Buffer.from(api_key).toString('base64');\n      this.authHeaders['Authorization'] = `Basic ${basicToken}`;\n    } else if (isApiKey && authorization_type === AuthorizationTypeEnum.Bearer) {\n      this.authHeaders['Authorization'] = `Bearer ${api_key}`;\n    } else if (\n      isApiKey &&\n      authorization_type === AuthorizationTypeEnum.Custom &&\n      custom_auth_header != null &&\n      custom_auth_header\n    ) {\n      this.authHeaders[custom_auth_header] = api_key;\n    } else if (isOAuth) {\n      // TODO: maybe doing it in a different way later on. but we want that the user needs to folllow the oauth flow.\n      // If we do not have a valid token, bail or ask user to sign in\n      const now = new Date();\n\n      // 1. Check if token is set\n      if (!oauth_access_token) {\n        throw new Error('No access token found. Please log in first.');\n      }\n\n      // 2. Check if token is expired\n      if (oauth_token_expires_at && now >= new Date(oauth_token_expires_at)) {\n        // Optionally check refresh_token logic, or just prompt user to re-login\n        throw new Error('Access token is expired. Please re-login.');\n      }\n\n      // If valid, use it\n      this.authToken = oauth_access_token;\n      this.authHeaders['Authorization'] = `Bearer ${this.authToken}`;\n    }\n    return this;\n  }\n\n  async execute() {\n    const url = createURL(this.config.domain, this.path);\n    const headers: Record<string, string> = {\n      ...this.authHeaders,\n      ...(this.config.contentType ? { 'Content-Type': this.config.contentType } : {}),\n    };\n    const method = this.config.method.toLowerCase();\n    const axios = _axios.create();\n\n    // Initialize separate containers for query and body parameters.\n    const queryParams: Record<string, unknown> = {};\n    const bodyParams: Record<string, unknown> = {};\n\n    if (this.config.parameterLocations && this.params) {\n      for (const key of Object.keys(this.params)) {\n        // Determine parameter placement; default to \"query\" for GET and \"body\" for others.\n        const loc: 'query' | 'path' | 'header' | 'body' =\n          this.config.parameterLocations[key] || (method === 'get' ? 'query' : 'body');\n\n        const val = this.params[key];\n        if (loc === 'query') {\n          queryParams[key] = val;\n        } else if (loc === 'header') {\n          headers[key] = String(val);\n        } else if (loc === 'body') {\n          bodyParams[key] = val;\n        }\n      }\n    } else if (this.params) {\n      Object.assign(queryParams, this.params);\n      Object.assign(bodyParams, this.params);\n    }\n\n    if (method === 'get') {\n      return axios.get(url, { headers, params: queryParams });\n    } else if (method === 'post') {\n      return axios.post(url, bodyParams, { headers, params: queryParams });\n    } else if (method === 'put') {\n      return axios.put(url, bodyParams, { headers, params: queryParams });\n    } else if (method === 'delete') {\n      return axios.delete(url, { headers, data: bodyParams, params: queryParams });\n    } else if (method === 'patch') {\n      return axios.patch(url, bodyParams, { headers, params: queryParams });\n    } else {\n      throw new Error(`Unsupported HTTP method: ${method}`);\n    }\n  }\n\n  getConfig() {\n    return this.config;\n  }\n}\n\nexport class ActionRequest {\n  private config: RequestConfig;\n\n  constructor(\n    domain: string,\n    path: string,\n    method: string,\n    operation: string,\n    isConsequential: boolean,\n    contentType: string,\n    parameterLocations?: Record<string, 'query' | 'path' | 'header' | 'body'>,\n  ) {\n    this.config = new RequestConfig(\n      domain,\n      path,\n      method,\n      operation,\n      isConsequential,\n      contentType,\n      parameterLocations,\n    );\n  }\n\n  // Add getters to maintain backward compatibility\n  get domain() {\n    return this.config.domain;\n  }\n  get path() {\n    return this.config.basePath;\n  }\n  get method() {\n    return this.config.method;\n  }\n  get operation() {\n    return this.config.operation;\n  }\n  get isConsequential() {\n    return this.config.isConsequential;\n  }\n  get contentType() {\n    return this.config.contentType;\n  }\n\n  createExecutor() {\n    return new RequestExecutor(this.config);\n  }\n\n  // Maintain backward compatibility by delegating to a new executor\n  setParams(params: Record<string, unknown>) {\n    const executor = this.createExecutor();\n    executor.setParams(params);\n    return executor;\n  }\n\n  async setAuth(metadata: ActionMetadata) {\n    const executor = this.createExecutor();\n    return executor.setAuth(metadata);\n  }\n\n  async execute() {\n    const executor = this.createExecutor();\n    return executor.execute();\n  }\n}\n\nexport function resolveRef<\n  T extends\n    | OpenAPIV3.ReferenceObject\n    | OpenAPIV3.SchemaObject\n    | OpenAPIV3.ParameterObject\n    | OpenAPIV3.RequestBodyObject,\n>(obj: T, components?: OpenAPIV3.ComponentsObject): Exclude<T, OpenAPIV3.ReferenceObject> {\n  if ('$ref' in obj && components) {\n    const refPath = obj.$ref.replace(/^#\\/components\\//, '').split('/');\n\n    let resolved: unknown = components as Record<string, unknown>;\n    for (const segment of refPath) {\n      if (typeof resolved === 'object' && resolved !== null && segment in resolved) {\n        resolved = (resolved as Record<string, unknown>)[segment];\n      } else {\n        throw new Error(`Could not resolve reference: ${obj.$ref}`);\n      }\n    }\n\n    return resolveRef(resolved as typeof obj, components) as Exclude<T, OpenAPIV3.ReferenceObject>;\n  }\n\n  return obj as Exclude<T, OpenAPIV3.ReferenceObject>;\n}\n\nfunction sanitizeOperationId(input: string) {\n  return input.replace(/[^a-zA-Z0-9_-]/g, '');\n}\n\n/**\n * Converts an OpenAPI spec to function signatures and request builders.\n */\nexport function openapiToFunction(\n  openapiSpec: OpenAPIV3.Document,\n  generateZodSchemas = false,\n): {\n  functionSignatures: FunctionSignature[];\n  requestBuilders: Record<string, ActionRequest>;\n  zodSchemas?: Record<string, z.ZodTypeAny>;\n} {\n  const functionSignatures: FunctionSignature[] = [];\n  const requestBuilders: Record<string, ActionRequest> = {};\n  const zodSchemas: Record<string, z.ZodTypeAny> = {};\n  const baseUrl = openapiSpec.servers?.[0]?.url ?? '';\n\n  // Iterate over each path and method in the OpenAPI spec\n  for (const [path, methods] of Object.entries(openapiSpec.paths)) {\n    for (const [method, operation] of Object.entries(methods as OpenAPIV3.PathsObject)) {\n      const paramLocations: Record<string, 'query' | 'path' | 'header' | 'body'> = {};\n      const operationObj = operation as OpenAPIV3.OperationObject & {\n        'x-openai-isConsequential'?: boolean;\n      } & {\n        'x-strict'?: boolean;\n      };\n\n      // Operation ID is used as the function name\n      const defaultOperationId = `${method}_${path}`;\n      const operationId = operationObj.operationId || sanitizeOperationId(defaultOperationId);\n      const description = operationObj.summary || operationObj.description || '';\n      const isStrict = operationObj['x-strict'] ?? false;\n\n      const parametersSchema: OpenAPISchema = {\n        type: 'object',\n        properties: {},\n        required: [],\n      };\n\n      if (operationObj.parameters) {\n        for (const param of operationObj.parameters ?? []) {\n          const resolvedParam = resolveRef(\n            param,\n            openapiSpec.components,\n          ) as OpenAPIV3.ParameterObject;\n\n          const paramName = resolvedParam.name;\n          if (!paramName || !resolvedParam.schema) {\n            continue;\n          }\n\n          const paramSchema = resolveRef(\n            resolvedParam.schema,\n            openapiSpec.components,\n          ) as OpenAPIV3.SchemaObject;\n\n          parametersSchema.properties[paramName] = paramSchema;\n          if (resolvedParam.required) {\n            parametersSchema.required.push(paramName);\n          }\n          // Record the parameter location from the OpenAPI \"in\" field.\n          paramLocations[paramName] =\n            resolvedParam.in === 'query' ||\n            resolvedParam.in === 'path' ||\n            resolvedParam.in === 'header' ||\n            resolvedParam.in === 'body'\n              ? resolvedParam.in\n              : 'query';\n        }\n      }\n\n      if (operationObj.requestBody) {\n        const requestBody = operationObj.requestBody as RequestBodyObject;\n        const content = requestBody.content;\n        const contentType = Object.keys(content ?? {})[0];\n        const schema = content?.[contentType]?.schema;\n        const resolvedSchema = resolveRef(\n          schema as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n          openapiSpec.components,\n        );\n        parametersSchema.properties = {\n          ...parametersSchema.properties,\n          ...resolvedSchema.properties,\n        };\n        if (resolvedSchema.required) {\n          parametersSchema.required.push(...resolvedSchema.required);\n        }\n        // Mark requestBody properties as belonging to the \"body\"\n        if (resolvedSchema.properties) {\n          for (const key in resolvedSchema.properties) {\n            paramLocations[key] = 'body';\n          }\n        }\n      }\n\n      const functionSignature = new FunctionSignature(\n        operationId,\n        description,\n        parametersSchema,\n        isStrict,\n      );\n      functionSignatures.push(functionSignature);\n\n      const actionRequest = new ActionRequest(\n        baseUrl,\n        path,\n        method,\n        operationId,\n        !!(operationObj['x-openai-isConsequential'] ?? false),\n        operationObj.requestBody ? 'application/json' : '',\n        paramLocations,\n      );\n\n      requestBuilders[operationId] = actionRequest;\n\n      if (generateZodSchemas && Object.keys(parametersSchema.properties).length > 0) {\n        const schema = openAPISchemaToZod(parametersSchema);\n        if (schema) {\n          zodSchemas[operationId] = schema;\n        }\n      }\n    }\n  }\n\n  return { functionSignatures, requestBuilders, zodSchemas };\n}\n\nexport type ValidationResult = {\n  status: boolean;\n  message: string;\n  spec?: OpenAPIV3.Document;\n};\n\n/**\n * Validates and parses an OpenAPI spec.\n */\nexport function validateAndParseOpenAPISpec(specString: string): ValidationResult {\n  try {\n    let parsedSpec;\n    try {\n      parsedSpec = JSON.parse(specString);\n    } catch {\n      parsedSpec = load(specString);\n    }\n\n    // Check for servers\n    if (\n      !parsedSpec.servers ||\n      !Array.isArray(parsedSpec.servers) ||\n      parsedSpec.servers.length === 0\n    ) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    if (!parsedSpec.servers[0].url) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    // Check for paths\n    const paths = parsedSpec.paths;\n    if (!paths || typeof paths !== 'object' || Object.keys(paths).length === 0) {\n      return { status: false, message: 'No paths found in the OpenAPI spec.' };\n    }\n\n    const components = parsedSpec.components?.schemas || {};\n    const messages = [];\n\n    for (const [path, methods] of Object.entries(paths)) {\n      for (const [httpMethod, operation] of Object.entries(methods as OpenAPIV3.PathItemObject)) {\n        // Ensure operation is a valid operation object\n        const { responses } = operation as OpenAPIV3.OperationObject | { responses: undefined };\n        if (typeof operation === 'object' && responses) {\n          for (const [statusCode, response] of Object.entries(responses)) {\n            const content = (response as OpenAPIV3.ResponseObject).content as MediaTypeObject;\n            if (content && content['application/json'] && content['application/json'].schema) {\n              const schema = content['application/json'].schema;\n              if ('$ref' in schema && typeof schema.$ref === 'string') {\n                const refName = schema.$ref.split('/').pop();\n                if (refName && !components[refName]) {\n                  messages.push(\n                    `In context=('paths', '${path}', '${httpMethod}', '${statusCode}', 'response', 'content', 'application/json', 'schema'), reference to unknown component ${refName}; using empty schema`,\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      status: true,\n      message: messages.join('\\n') || 'OpenAPI spec is valid.',\n      spec: parsedSpec,\n    };\n  } catch (error) {\n    console.error(error);\n    return { status: false, message: 'Error parsing OpenAPI spec.' };\n  }\n}\n","import {\n  Verbosity,\n  ImageDetail,\n  EModelEndpoint,\n  openAISettings,\n  googleSettings,\n  ReasoningEffort,\n  ReasoningSummary,\n  BedrockProviders,\n  anthropicSettings,\n} from './types';\nimport { SettingDefinition, SettingsConfiguration } from './generate';\n\n// Base definitions\nconst baseDefinitions: Record<string, SettingDefinition> = {\n  model: {\n    key: 'model',\n    label: 'com_ui_model',\n    labelCode: true,\n    type: 'string',\n    component: 'dropdown',\n    optionType: 'model',\n    selectPlaceholder: 'com_ui_select_model',\n    searchPlaceholder: 'com_ui_select_search_model',\n    searchPlaceholderCode: true,\n    selectPlaceholderCode: true,\n    columnSpan: 4,\n  },\n  temperature: {\n    key: 'temperature',\n    label: 'com_endpoint_temperature',\n    labelCode: true,\n    description: 'com_endpoint_openai_temp',\n    descriptionCode: true,\n    type: 'number',\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  topP: {\n    key: 'topP',\n    label: 'com_endpoint_top_p',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_topp',\n    descriptionCode: true,\n    type: 'number',\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  stop: {\n    key: 'stop',\n    label: 'com_endpoint_stop',\n    labelCode: true,\n    description: 'com_endpoint_openai_stop',\n    descriptionCode: true,\n    placeholder: 'com_endpoint_stop_placeholder',\n    placeholderCode: true,\n    type: 'array',\n    default: [],\n    component: 'tags',\n    optionType: 'conversation',\n    minTags: 0,\n    maxTags: 4,\n  },\n  imageDetail: {\n    key: 'imageDetail',\n    label: 'com_endpoint_plug_image_detail',\n    labelCode: true,\n    description: 'com_endpoint_openai_detail',\n    descriptionCode: true,\n    type: 'enum',\n    default: ImageDetail.auto,\n    component: 'slider',\n    options: [ImageDetail.low, ImageDetail.auto, ImageDetail.high],\n    enumMappings: {\n      [ImageDetail.low]: 'com_ui_low',\n      [ImageDetail.auto]: 'com_ui_auto',\n      [ImageDetail.high]: 'com_ui_high',\n    },\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n};\n\nconst createDefinition = (\n  base: Partial<SettingDefinition>,\n  overrides: Partial<SettingDefinition>,\n): SettingDefinition => {\n  return { ...base, ...overrides } as SettingDefinition;\n};\n\nexport const librechat = {\n  modelLabel: {\n    key: 'modelLabel',\n    label: 'com_endpoint_custom_name',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'input',\n    placeholder: 'com_endpoint_openai_custom_name_placeholder',\n    placeholderCode: true,\n    optionType: 'conversation',\n  } as const,\n  maxContextTokens: {\n    key: 'maxContextTokens',\n    label: 'com_endpoint_context_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    description: 'com_endpoint_context_info',\n    descriptionCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  } as const,\n  resendFiles: {\n    key: 'resendFiles',\n    label: 'com_endpoint_plug_resend_files',\n    labelCode: true,\n    description: 'com_endpoint_openai_resend_files',\n    descriptionCode: true,\n    type: 'boolean',\n    default: true,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  } as const,\n  promptPrefix: {\n    key: 'promptPrefix',\n    label: 'com_endpoint_prompt_prefix',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'textarea',\n    placeholder: 'com_endpoint_openai_prompt_prefix_placeholder',\n    placeholderCode: true,\n    optionType: 'model',\n  } as const,\n};\n\nconst openAIParams: Record<string, SettingDefinition> = {\n  chatGptLabel: {\n    ...librechat.modelLabel,\n    key: 'chatGptLabel',\n  },\n  promptPrefix: librechat.promptPrefix,\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: openAISettings.temperature.default,\n    range: {\n      min: openAISettings.temperature.min,\n      max: openAISettings.temperature.max,\n      step: openAISettings.temperature.step,\n    },\n  }),\n  top_p: createDefinition(baseDefinitions.topP, {\n    key: 'top_p',\n    default: openAISettings.top_p.default,\n    range: {\n      min: openAISettings.top_p.min,\n      max: openAISettings.top_p.max,\n      step: openAISettings.top_p.step,\n    },\n  }),\n  frequency_penalty: {\n    key: 'frequency_penalty',\n    label: 'com_endpoint_frequency_penalty',\n    labelCode: true,\n    description: 'com_endpoint_openai_freq',\n    descriptionCode: true,\n    type: 'number',\n    default: openAISettings.frequency_penalty.default,\n    range: {\n      min: openAISettings.frequency_penalty.min,\n      max: openAISettings.frequency_penalty.max,\n      step: openAISettings.frequency_penalty.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  presence_penalty: {\n    key: 'presence_penalty',\n    label: 'com_endpoint_presence_penalty',\n    labelCode: true,\n    description: 'com_endpoint_openai_pres',\n    descriptionCode: true,\n    type: 'number',\n    default: openAISettings.presence_penalty.default,\n    range: {\n      min: openAISettings.presence_penalty.min,\n      max: openAISettings.presence_penalty.max,\n      step: openAISettings.presence_penalty.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  max_tokens: {\n    key: 'max_tokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_openai_max_tokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  reasoning_effort: {\n    key: 'reasoning_effort',\n    label: 'com_endpoint_reasoning_effort',\n    labelCode: true,\n    description: 'com_endpoint_openai_reasoning_effort',\n    descriptionCode: true,\n    type: 'enum',\n    default: ReasoningEffort.none,\n    component: 'slider',\n    options: [\n      ReasoningEffort.none,\n      ReasoningEffort.minimal,\n      ReasoningEffort.low,\n      ReasoningEffort.medium,\n      ReasoningEffort.high,\n    ],\n    enumMappings: {\n      [ReasoningEffort.none]: 'com_ui_none',\n      [ReasoningEffort.minimal]: 'com_ui_minimal',\n      [ReasoningEffort.low]: 'com_ui_low',\n      [ReasoningEffort.medium]: 'com_ui_medium',\n      [ReasoningEffort.high]: 'com_ui_high',\n    },\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  useResponsesApi: {\n    key: 'useResponsesApi',\n    label: 'com_endpoint_use_responses_api',\n    labelCode: true,\n    description: 'com_endpoint_openai_use_responses_api',\n    descriptionCode: true,\n    type: 'boolean',\n    default: false,\n    component: 'switch',\n    optionType: 'model',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  web_search: {\n    key: 'web_search',\n    label: 'com_ui_web_search',\n    labelCode: true,\n    description: 'com_endpoint_openai_use_web_search',\n    descriptionCode: true,\n    type: 'boolean',\n    default: false,\n    component: 'switch',\n    optionType: 'model',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  reasoning_summary: {\n    key: 'reasoning_summary',\n    label: 'com_endpoint_reasoning_summary',\n    labelCode: true,\n    description: 'com_endpoint_openai_reasoning_summary',\n    descriptionCode: true,\n    type: 'enum',\n    default: ReasoningSummary.none,\n    component: 'slider',\n    options: [\n      ReasoningSummary.none,\n      ReasoningSummary.auto,\n      ReasoningSummary.concise,\n      ReasoningSummary.detailed,\n    ],\n    enumMappings: {\n      [ReasoningSummary.none]: 'com_ui_none',\n      [ReasoningSummary.auto]: 'com_ui_auto',\n      [ReasoningSummary.concise]: 'com_ui_concise',\n      [ReasoningSummary.detailed]: 'com_ui_detailed',\n    },\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  verbosity: {\n    key: 'verbosity',\n    label: 'com_endpoint_verbosity',\n    labelCode: true,\n    description: 'com_endpoint_openai_verbosity',\n    descriptionCode: true,\n    type: 'enum',\n    default: Verbosity.none,\n    component: 'slider',\n    options: [Verbosity.none, Verbosity.low, Verbosity.medium, Verbosity.high],\n    enumMappings: {\n      [Verbosity.none]: 'com_ui_none',\n      [Verbosity.low]: 'com_ui_low',\n      [Verbosity.medium]: 'com_ui_medium',\n      [Verbosity.high]: 'com_ui_high',\n    },\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  disableStreaming: {\n    key: 'disableStreaming',\n    label: 'com_endpoint_disable_streaming_label',\n    labelCode: true,\n    description: 'com_endpoint_disable_streaming',\n    descriptionCode: true,\n    type: 'boolean',\n    default: false,\n    component: 'switch',\n    optionType: 'model',\n    showDefault: false,\n    columnSpan: 2,\n  } as const,\n};\n\nconst anthropic: Record<string, SettingDefinition> = {\n  maxOutputTokens: {\n    key: 'maxOutputTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_anthropic_maxoutputtokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    range: {\n      min: anthropicSettings.maxOutputTokens.min,\n      max: anthropicSettings.maxOutputTokens.max,\n      step: anthropicSettings.maxOutputTokens.step,\n    },\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: anthropicSettings.temperature.default,\n    range: {\n      min: anthropicSettings.temperature.min,\n      max: anthropicSettings.temperature.max,\n      step: anthropicSettings.temperature.step,\n    },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: anthropicSettings.topP.default,\n    range: {\n      min: anthropicSettings.topP.min,\n      max: anthropicSettings.topP.max,\n      step: anthropicSettings.topP.step,\n    },\n  }),\n  topK: {\n    key: 'topK',\n    label: 'com_endpoint_top_k',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_topk',\n    descriptionCode: true,\n    type: 'number',\n    default: anthropicSettings.topK.default,\n    range: {\n      min: anthropicSettings.topK.min,\n      max: anthropicSettings.topK.max,\n      step: anthropicSettings.topK.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  promptCache: {\n    key: 'promptCache',\n    label: 'com_endpoint_prompt_cache',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_prompt_cache',\n    descriptionCode: true,\n    type: 'boolean',\n    default: anthropicSettings.promptCache.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinking: {\n    key: 'thinking',\n    label: 'com_endpoint_thinking',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_thinking',\n    descriptionCode: true,\n    type: 'boolean',\n    default: anthropicSettings.thinking.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinkingBudget: {\n    key: 'thinkingBudget',\n    label: 'com_endpoint_thinking_budget',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_thinking_budget',\n    descriptionCode: true,\n    type: 'number',\n    component: 'input',\n    default: anthropicSettings.thinkingBudget.default,\n    range: {\n      min: anthropicSettings.thinkingBudget.min,\n      max: anthropicSettings.thinkingBudget.max,\n      step: anthropicSettings.thinkingBudget.step,\n    },\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n  web_search: {\n    key: 'web_search',\n    label: 'com_ui_web_search',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_use_web_search',\n    descriptionCode: true,\n    type: 'boolean',\n    default: anthropicSettings.web_search.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n};\n\nconst bedrock: Record<string, SettingDefinition> = {\n  system: {\n    key: 'system',\n    label: 'com_endpoint_prompt_prefix',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'textarea',\n    placeholder: 'com_endpoint_openai_prompt_prefix_placeholder',\n    placeholderCode: true,\n    optionType: 'model',\n  },\n  region: {\n    key: 'region',\n    type: 'string',\n    label: 'com_ui_region',\n    labelCode: true,\n    component: 'combobox',\n    optionType: 'conversation',\n    selectPlaceholder: 'com_ui_select_region',\n    searchPlaceholder: 'com_ui_select_search_region',\n    searchPlaceholderCode: true,\n    selectPlaceholderCode: true,\n    columnSpan: 2,\n  },\n  maxTokens: {\n    key: 'maxTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_anthropic_maxoutputtokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 1,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topK: createDefinition(anthropic.topK, {\n    range: { min: 0, max: 500, step: 1 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.999,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst mistral: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.7,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst cohere: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.3,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.75,\n    range: { min: 0.01, max: 0.99, step: 0.01 },\n  }),\n};\n\nconst meta: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.5,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.9,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst google: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: googleSettings.temperature.default,\n    range: {\n      min: googleSettings.temperature.min,\n      max: googleSettings.temperature.max,\n      step: googleSettings.temperature.step,\n    },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: googleSettings.topP.default,\n    range: {\n      min: googleSettings.topP.min,\n      max: googleSettings.topP.max,\n      step: googleSettings.topP.step,\n    },\n  }),\n  topK: {\n    key: 'topK',\n    label: 'com_endpoint_top_k',\n    labelCode: true,\n    description: 'com_endpoint_google_topk',\n    descriptionCode: true,\n    type: 'number',\n    default: googleSettings.topK.default,\n    range: {\n      min: googleSettings.topK.min,\n      max: googleSettings.topK.max,\n      step: googleSettings.topK.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  maxOutputTokens: {\n    key: 'maxOutputTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_google_maxoutputtokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    default: googleSettings.maxOutputTokens.default,\n    range: {\n      min: googleSettings.maxOutputTokens.min,\n      max: googleSettings.maxOutputTokens.max,\n      step: googleSettings.maxOutputTokens.step,\n    },\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  thinking: {\n    key: 'thinking',\n    label: 'com_endpoint_thinking',\n    labelCode: true,\n    description: 'com_endpoint_google_thinking',\n    descriptionCode: true,\n    type: 'boolean',\n    default: googleSettings.thinking.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinkingBudget: {\n    key: 'thinkingBudget',\n    label: 'com_endpoint_thinking_budget',\n    labelCode: true,\n    description: 'com_endpoint_google_thinking_budget',\n    descriptionCode: true,\n    placeholder: 'com_ui_auto',\n    placeholderCode: true,\n    type: 'number',\n    component: 'input',\n    range: {\n      min: googleSettings.thinkingBudget.min,\n      max: googleSettings.thinkingBudget.max,\n      step: googleSettings.thinkingBudget.step,\n    },\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n  web_search: {\n    key: 'web_search',\n    label: 'com_endpoint_use_search_grounding',\n    labelCode: true,\n    description: 'com_endpoint_google_use_search_grounding',\n    descriptionCode: true,\n    type: 'boolean',\n    default: false,\n    component: 'switch',\n    optionType: 'model',\n    showDefault: false,\n    columnSpan: 2,\n  },\n};\n\nconst googleConfig: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  google.maxOutputTokens,\n  google.temperature,\n  google.topP,\n  google.topK,\n  librechat.resendFiles,\n  google.thinking,\n  google.thinkingBudget,\n  google.web_search,\n];\n\nconst googleCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst googleCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  google.maxOutputTokens,\n  google.temperature,\n  google.topP,\n  google.topK,\n  librechat.resendFiles,\n  google.thinking,\n  google.thinkingBudget,\n  google.web_search,\n];\n\nconst openAI: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  openAIParams.max_tokens,\n  openAIParams.temperature,\n  openAIParams.top_p,\n  openAIParams.frequency_penalty,\n  openAIParams.presence_penalty,\n  baseDefinitions.stop,\n  librechat.resendFiles,\n  baseDefinitions.imageDetail,\n  openAIParams.web_search,\n  openAIParams.reasoning_effort,\n  openAIParams.useResponsesApi,\n  openAIParams.reasoning_summary,\n  openAIParams.verbosity,\n  openAIParams.disableStreaming,\n];\n\nconst openAICol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst openAICol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  openAIParams.max_tokens,\n  openAIParams.temperature,\n  openAIParams.top_p,\n  openAIParams.frequency_penalty,\n  openAIParams.presence_penalty,\n  baseDefinitions.stop,\n  librechat.resendFiles,\n  baseDefinitions.imageDetail,\n  openAIParams.reasoning_effort,\n  openAIParams.reasoning_summary,\n  openAIParams.verbosity,\n  openAIParams.useResponsesApi,\n  openAIParams.web_search,\n  openAIParams.disableStreaming,\n];\n\nconst anthropicConfig: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  anthropic.maxOutputTokens,\n  anthropic.temperature,\n  anthropic.topP,\n  anthropic.topK,\n  librechat.resendFiles,\n  anthropic.promptCache,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n  anthropic.web_search,\n];\n\nconst anthropicCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst anthropicCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  anthropic.maxOutputTokens,\n  anthropic.temperature,\n  anthropic.topP,\n  anthropic.topK,\n  librechat.resendFiles,\n  anthropic.promptCache,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n  anthropic.web_search,\n];\n\nconst bedrockAnthropic: SettingsConfiguration = [\n  librechat.modelLabel,\n  bedrock.system,\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  bedrock.temperature,\n  bedrock.topP,\n  bedrock.topK,\n  baseDefinitions.stop,\n  librechat.resendFiles,\n  bedrock.region,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n];\n\nconst bedrockMistral: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  mistral.temperature,\n  mistral.topP,\n  librechat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockCohere: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  cohere.temperature,\n  cohere.topP,\n  librechat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockGeneral: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  meta.temperature,\n  meta.topP,\n  librechat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockAnthropicCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  bedrock.system,\n  baseDefinitions.stop,\n];\n\nconst bedrockAnthropicCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  bedrock.temperature,\n  bedrock.topP,\n  bedrock.topK,\n  librechat.resendFiles,\n  bedrock.region,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n];\n\nconst bedrockMistralCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst bedrockMistralCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  mistral.temperature,\n  mistral.topP,\n  librechat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockCohereCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst bedrockCohereCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  cohere.temperature,\n  cohere.topP,\n  librechat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockGeneralCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst bedrockGeneralCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  meta.temperature,\n  meta.topP,\n  librechat.resendFiles,\n  bedrock.region,\n];\n\nexport const paramSettings: Record<string, SettingsConfiguration | undefined> = {\n  [EModelEndpoint.openAI]: openAI,\n  [EModelEndpoint.azureOpenAI]: openAI,\n  [EModelEndpoint.custom]: openAI,\n  [EModelEndpoint.anthropic]: anthropicConfig,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Anthropic}`]: bedrockAnthropic,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.MistralAI}`]: bedrockMistral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Cohere}`]: bedrockCohere,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Meta}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.AI21}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Amazon}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.DeepSeek}`]: bedrockGeneral,\n  [EModelEndpoint.google]: googleConfig,\n};\n\nconst openAIColumns = {\n  col1: openAICol1,\n  col2: openAICol2,\n};\n\nconst bedrockGeneralColumns = {\n  col1: bedrockGeneralCol1,\n  col2: bedrockGeneralCol2,\n};\n\nexport const presetSettings: Record<\n  string,\n  | {\n      col1: SettingsConfiguration;\n      col2: SettingsConfiguration;\n    }\n  | undefined\n> = {\n  [EModelEndpoint.openAI]: openAIColumns,\n  [EModelEndpoint.azureOpenAI]: openAIColumns,\n  [EModelEndpoint.custom]: openAIColumns,\n  [EModelEndpoint.anthropic]: {\n    col1: anthropicCol1,\n    col2: anthropicCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Anthropic}`]: {\n    col1: bedrockAnthropicCol1,\n    col2: bedrockAnthropicCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.MistralAI}`]: {\n    col1: bedrockMistralCol1,\n    col2: bedrockMistralCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Cohere}`]: {\n    col1: bedrockCohereCol1,\n    col2: bedrockCohereCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Meta}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.AI21}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Amazon}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.DeepSeek}`]: bedrockGeneralColumns,\n  [EModelEndpoint.google]: {\n    col1: googleCol1,\n    col2: googleCol2,\n  },\n};\n\nexport const agentParamSettings: Record<string, SettingsConfiguration | undefined> = Object.entries(\n  presetSettings,\n).reduce<Record<string, SettingsConfiguration | undefined>>((acc, [key, value]) => {\n  if (value) {\n    acc[key] = value.col2;\n  }\n  return acc;\n}, {});\n","import type * as t from './types';\nimport { EndpointURLs } from './config';\nimport * as s from './schemas';\n\nexport default function createPayload(submission: t.TSubmission) {\n  const {\n    isEdited,\n    userMessage,\n    isContinued,\n    isTemporary,\n    isRegenerate,\n    conversation,\n    editedContent,\n    ephemeralAgent,\n    endpointOption,\n  } = submission;\n  const { conversationId } = s.tConvoUpdateSchema.parse(conversation);\n  const { endpoint: _e, endpointType } = endpointOption as {\n    endpoint: s.EModelEndpoint;\n    endpointType?: s.EModelEndpoint;\n  };\n\n  const endpoint = _e as s.EModelEndpoint;\n  let server = `${EndpointURLs[s.EModelEndpoint.agents]}/${endpoint}`;\n  if (s.isAssistantsEndpoint(endpoint)) {\n    server =\n      EndpointURLs[(endpointType ?? endpoint) as 'assistants' | 'azureAssistants'] +\n      (isEdited ? '/modify' : '');\n  }\n\n  const payload: t.TPayload = {\n    ...userMessage,\n    ...endpointOption,\n    endpoint,\n    isTemporary,\n    isRegenerate,\n    editedContent,\n    conversationId,\n    isContinued: !!(isEdited && isContinued),\n    ephemeralAgent: s.isAssistantsEndpoint(endpoint) ? undefined : ephemeralAgent,\n  };\n\n  return { server, payload };\n}\n","import type { TCustomConfig } from '../src/config';\nimport { OCRStrategy } from '../src/config';\n\nexport function loadOCRConfig(config: TCustomConfig['ocr']): TCustomConfig['ocr'] {\n  const baseURL = config?.baseURL ?? '';\n  const apiKey = config?.apiKey ?? '';\n  const mistralModel = config?.mistralModel ?? '';\n  return {\n    apiKey,\n    baseURL,\n    mistralModel,\n    strategy: config?.strategy ?? OCRStrategy.MISTRAL_OCR,\n  };\n}\n"],"names":["Tools","EToolResources","AnnotationTypes","StepStatus","MessageContentTypes","RunStatus","envVarRegex","extractEnvVariable","value","trimmed","trim","singleMatch","match","varName","process","env","regex","result","matches","exec","push","fullMatch","index","i","length","_a","envValue","substring","FilePurpose","AssistantStreamEvents","FEEDBACK_RATINGS","FEEDBACK_REASON_KEYS","FEEDBACK_TAGS","key","label","direction","icon","feedbackTagKeySchema","z","enum","feedbackRatingSchema","feedbackSchema","object","rating","tag","text","string","max","optional","AuthType","isUUID","uuid","EModelEndpoint","authTypeSchema","nativeEnum","BedrockProviders","paramEndpoints","Set","agents","openAI","bedrock","azureOpenAI","anthropic","custom","google","ImageDetail","ReasoningEffort","ReasoningSummary","Verbosity","getModelKey","endpoint","model","parts","split","provider","find","part","Object","values","includes","isAssistantsEndpoint","_endpoint","toLowerCase","endsWith","assistants","EAgent","imageDetailNumeric","low","auto","high","imageDetailValue","eImageDetailSchema","eReasoningEffortSchema","eReasoningSummarySchema","eVerbositySchema","defaultAgentFormValues","_b","agent","id","name","description","instructions","model_parameters","tools","projectIds","artifacts","isCollaborative","recursion_limit","undefined","execute_code","file_search","web_search","category","support_contact","email","ImageVisionTool","_c","type","function","parameters","properties","required","openAISettings","default","temperature","min","step","top_p","presence_penalty","frequency_penalty","resendFiles","maxContextTokens","max_tokens","imageDetail","googleSettings","maxOutputTokens","topP","topK","thinking","thinkingBudget","LEGACY_ANTHROPIC_MAX_OUTPUT","anthropicSettings","promptCache","reset","modelName","test","set","legacy","agentsSettings","endpointSettings","_d","eModelEndpointSchema","extendedModelEndpointSchema","union","tPluginAuthConfigSchema","authField","tPluginSchema","pluginKey","authConfig","array","authenticated","boolean","chatMenu","isButton","toolkit","tExampleSchema","input","content","output","agentOptionSettings","functions","options","classic","skipCompletion","eAgentOptionsSchema","tAgentOptionsSchema","number","tMessageSchema","messageId","clientId","nullable","conversationId","parentMessageId","responseMessageId","overrideParentMessageId","bg","title","or","literal","sender","generation","isCreatedByUser","error","clientTimestamp","createdAt","Date","toISOString","updatedAt","current","unfinished","searchResult","finish_reason","thread_id","iconURL","feedback","coerceNumber","transform","val","parseFloat","DocumentType","lazy","null","record","tConversationSchema","endpointType","isArchived","user","messages","modelLabel","userLabel","promptPrefix","system","context","examples","tags","file_ids","reasoning_effort","reasoning_summary","verbosity","useResponsesApi","disableStreaming","assistant_id","agent_id","region","maxTokens","additionalModelRequestFields","additional_instructions","append_current_datetime","presetOverride","unknown","stop","greeting","spec","expiredAt","resendImages","agentOptions","chatGptLabel","tPresetSchema","omit","merge","presetId","defaultPreset","order","tConvoUpdateSchema","tQueryParamsSchema","pick","tSharedLinkSchema","shareId","isPublic","tConversationTagSchema","_id","count","position","googleBaseSchema","googleSchema","obj","removeNullishValues","catch","googleGenConfigSchema","presencePenalty","frequencyPenalty","stopSequences","thinkingConfig","includeThoughts","strip","gptPluginsBaseSchema","gptPluginsSchema","__assign","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","removeEmptyStrings","newObj","keys","forEach","FileSources","assistantSchema","compactAssistantSchema","agentsBaseSchema","agentsSchema","openAIBaseSchema","openAISchema","compactGoogleSchema","anthropicBaseSchema","anthropicSchema","compactPluginsSchema","tBannerSchema","bannerId","message","displayFrom","displayTo","compactAgentsBaseSchema","compactAgentsSchema","tModelSpecSchema","preset","showIconInMenu","showIconInHeader","authType","specsConfigSchema","enforce","prioritize","list","addedEndpoints","supportsFiles","azureAssistants","excelFileTypes","fullMimeTypesList","__spreadArray","codeInterpreterMimeTypesList","excelMimeTypes","textMimeTypes","applicationMimeTypes","imageMimeTypes","supportedMimeTypes","codeInterpreterMimeTypes","megabyte","mbToBytes","mb","defaultSizeLimit","assistantsFileConfig","fileLimit","fileSizeLimit","totalSizeLimit","disabled","fileConfig","endpoints","serverFileSizeLimit","avatarSizeLimit","clientImageResize","enabled","maxWidth","maxHeight","quality","checkType","fileType","supportedTypes","some","supportedMimeTypesSchema","any","refine","mimeTypes","every","mimeType","RegExp","endpointFileConfigSchema","fileConfigSchema","imageGeneration","percentage","px","convertStringsToRegex","patterns","reduce","acc","pattern","console","concat","FileContext","AuthTypeEnum","AuthorizationTypeEnum","TokenExchangeMethodEnum","SettingsViews","BaseOptionsSchema","startup","iconPath","timeout","initTimeout","serverInstructions","requiresOAuth","oauth","authorization_url","url","token_url","client_id","client_secret","scope","redirect_uri","token_exchange_method","grant_types_supported","token_endpoint_auth_methods_supported","response_types_supported","code_challenge_methods_supported","customUserVars","StdioOptionsSchema","extend","command","args","processedEnv","_i","entries","stderr","WebSocketOptionsSchema","pipe","protocol","URL","SSEOptionsSchema","headers","StreamableHTTPOptionsSchema","MCPOptionsSchema","MCPServersSchema","defaultSocialLogins","defaultRetrievalModels","excludedKeys","fileSourceSchema","fileStrategiesSchema","avatar","image","document","getSchemaDefaults","schema","shape","map","ZodDefault","_def","defaultValue","fromEntries","Capabilities","AgentCapabilities","modelConfigSchema","deploymentName","version","azureBaseSchema","apiKey","serverless","instanceName","addParams","dropParams","forcePrompt","baseURL","additionalHeaders","azureGroupSchema","group","models","and","azureGroupConfigsSchema","RateLimitPrefix","defaultAssistantsVersion","baseEndpointSchema","streamRate","titlePrompt","titleModel","titleConvo","titleMethod","titleEndpoint","titlePromptTemplate","bedrockEndpointSchema","availableRegions","assistantEndpointSchema","disableBuilder","pollIntervalMs","timeoutMs","supportedIds","excludedIds","privateAssistants","retrievalModels","capabilities","code_interpreter","image_vision","retrieval","actions","fetch","userIdQuery","defaultAgentCapabilities","chain","ocr","agentsEndpointSchema","recursionLimit","maxRecursionLimit","maxCitations","maxCitationsPerFile","minRelevanceScore","allowedProviders","endpointSchema","safeParse","success","join","summarize","summaryModel","modelDisplayLabel","customParams","defaultParamsEndpoint","paramDefinitions","strict","customOrder","directEndpoint","titleMessageRole","azureEndpointSchema","groups","plugins","partial","ttsOpenaiSchema","voices","ttsAzureOpenAISchema","apiVersion","ttsElevenLabsSchema","websocketUrl","voice_settings","similarity_boost","stability","style","use_speaker_boost","pronunciation_dictionary_locators","ttsLocalaiSchema","backend","ttsSchema","openai","elevenlabs","localai","sttOpenaiSchema","sttAzureOpenAISchema","sttSchema","speechTab","conversationMode","advancedMode","speechToText","engineSTT","languageSTT","autoTranscribeAudio","decibelValue","autoSendText","textToSpeech","engineTTS","voice","languageTTS","automaticPlayback","playbackRate","cacheTTS","EImageOutputType","rateLimitSchema","fileUploads","ipMax","ipWindowInMinutes","userMax","userWindowInMinutes","conversationsImport","tts","stt","OCRStrategy","SearchCategories","SearchProviders","ScraperTypes","RerankerTypes","SafeSearchTypes","termsOfServiceSchema","externalUrl","openNewTab","modalAcceptance","modalTitle","modalContent","mcpServersSchema","placeholder","interfaceSchema","privacyPolicy","termsOfService","customWelcome","mcpServers","endpointsMenu","modelSelect","sidePanel","multiConvo","bookmarks","memories","presets","prompts","temporaryChat","temporaryChatRetention","runCode","webSearch","peoplePicker","users","roles","marketplace","use","fileSearch","fileCitations","turnstileOptionsSchema","language","size","turnstileSchema","siteKey","KnownEndpoints","webSearchSchema","serperApiKey","searxngInstanceUrl","searxngApiKey","firecrawlApiKey","firecrawlApiUrl","jinaApiKey","cohereApiKey","searchProvider","scraperType","rerankerType","scraperTimeout","safeSearch","MODERATE","firecrawlOptions","formats","includeTags","excludeTags","waitFor","maxAge","mobile","skipTlsVerification","blockAds","removeBase64Images","parsePDF","storeInCache","zeroDataRetention","location","country","languages","onlyMainContent","changeTrackingOptions","modes","prompt","ocrSchema","mistralModel","strategy","MISTRAL_OCR","balanceSchema","startBalance","autoRefillEnabled","refillIntervalValue","refillIntervalUnit","refillAmount","memorySchema","validKeys","tokenLimit","charLimit","personalize","messageWindowSize","configSchema","cache","memory","secureImageLinks","imageOutputType","PNG","includedTools","filteredTools","interface","turnstile","fileStrategy","local","fileStrategies","allowedDomains","registration","socialLogins","balance","speech","rateLimits","modelSpecs","all","gptPlugins","data","FetchTokenConfig","VisionModes","defaultEndpoints","chatGPTBrowser","alternateName","ollama","deepseek","xai","sharedOpenAIModels","bedrockModels","defaultModels","openAIModels","initialModelsConfig","initial","filter","str","EndpointURLs","modularEndpoints","supportsBalanceCheck","visionModels","InfiniteCollections","Time","CacheKeys","ViolationTypes","ErrorTypes","AuthKeys","ImageDetailCost","SettingsTabValues","STTProviders","TTSProviders","Constants","LocalStorageKeys","ForkOptions","CohereConstants","SystemCategories","imageGenTools","ContentTypes","StepTypes","ToolCallTypes","providerEndpointMap","bedrockInputSchema","s.tConversationSchema","_obj","budget_tokens","s.removeNullishValues","bedrockInputParser","catchall","knownKeys","additionalFields","typedData","anthropic_beta","endpointSchemas","getEnabledEndpoints","endpointsEnv","ENDPOINTS","enabledEndpoints","errorsToString","errors","field","path","getFirstDefinedValue","possibleValues","returnValue","possibleValues_1","extractGPTVersion","modelStr","gptMatch","suffix","extractOmniVersion","omniMatch","compactEndpointSchemas","SEPARATORS","ArtifactModes","ComponentTypes","SettingTypes","OptionTypes","utils","accordian","alertDialog","alert","badge","breadcrumb","button","calendar","card","carousel","checkbox","collapsible","dialog","drawer","dropdownMenu","hoverCard","menuBar","navigationMenu","pagination","popover","progress","radioGroup","select","separator","skeleton","slider","switchComponent","table","tabs","textarea","toast","toaster","toggleGroup","toggle","tooltip","useToast","shadcnComponents","essentialShadcnComponents","requiredSettingFields","ZodTypeToSettingType","ZodString","ZodNumber","ZodBoolean","PermissionTypes","Permissions","SystemRoles","promptPermissionsSchema","SHARED_GLOBAL","USE","CREATE","bookmarkPermissionsSchema","memoryPermissionsSchema","UPDATE","READ","OPT_OUT","agentPermissionsSchema","multiConvoPermissionsSchema","temporaryChatPermissionsSchema","runCodePermissionsSchema","webSearchPermissionsSchema","peoplePickerPermissionsSchema","VIEW_USERS","VIEW_GROUPS","VIEW_ROLES","marketplacePermissionsSchema","fileSearchPermissionsSchema","fileCitationsPermissionsSchema","permissionsSchema","PROMPTS","BOOKMARKS","MEMORIES","AGENTS","MULTI_CONVO","TEMPORARY_CHAT","RUN_CODE","WEB_SEARCH","PEOPLE_PICKER","MARKETPLACE","FILE_SEARCH","FILE_CITATIONS","DATE_RANGE","PrincipalType","PrincipalModel","ResourceType","PermissionBits","AccessRoleIds","roleSchema","permissions","roleDefaults","ADMIN","USER","parse","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_1","_2","_3","_4","_5","_6","QueryKeys","principalSchema","source","idOnTheSource","accessRoleId","memberCount","accessRoleSchema","resourceType","AGENT","permBits","permissionEntrySchema","principalType","principalId","principalName","role","grantedBy","grantedAt","inheritedFrom","resourcePermissionsResponseSchema","resourceId","updateResourcePermissionsRequestSchema","updated","removed","public","publicAccessRoleId","updateResourcePermissionsResponseSchema","results","principals","getResourcePermissionsResponseSchema","effectivePermissionsResponseSchema","permissionBits","MutationKeys","setTokenHeader","token","axios","defaults","common","buildQuery","params","query","Array","isArray","v","encodeURIComponent","String","rest","__rest","shareRoot","shareMessages","getSharedLinks","pageSize","sortBy","sortDirection","search","cursor","keysEndpoint","conversationsRoot","conversations","updateConversation","isAvatar","images","queryParams","URLSearchParams","toString","getPromptGroup","getPrompt","postPrompt","updatePromptGroup","deletePromptGroup","getRole","roleName","conversationTags","_post","post","JSON","stringify","sent","isRefreshing","failedQueue","refreshToken","retry","endpoints.refreshToken","dispatchTokenUpdatedEvent","window","dispatchEvent","CustomEvent","detail","processQueue","prom","reject","resolve","interceptors","response","__awaiter","originalRequest","config","Promise","status","_retry","warn","err_1","href","log","err_2","request","get","getResponse","postMultiPart","formData","postTTS","responseType","put","delete","deleteWithOptions","patch","groupId","payload","endpoints.addPromptToGroup","endpoints.addTagToConversation","endpoints.updateConversation","arg","toolId","toolParams","endpoints.agents","serverName","endpoints.cancelMCPOAuth","endpoints.assistants","endpoints.conversationTags","endpoints.postPrompt","endpoints.createSharedLink","action_id","endpoints.memory","endpoints.deletePrompt","endpoints.deletePromptGroup","endpoints.shareMessages","endpoints.getAccessRoles","agentId","endpoints.agentFiles","s.isAssistantsEndpoint","config.defaultAssistantsVersion","Accept","endpoints.conversationById","endpoints.conversations","endpoints.getEffectivePermissions","userId","file_id","scopes","endpoints.mcpAuthValues","endpoints.mcpServerConnectionStatus","config.Constants","NEW_CONVO","PENDING_CONVO","endpoints.messages","endpoints.getPrompt","endpoints.getPromptGroup","endpoints.getPromptGroupsWithFilters","endpoints.getPromptsWithFilters","variables","limit","skip","endpoints.getResourcePermissions","endpoints.getRole","endpoints.getSharedLink","endpoints.getSharedLinks","endpoints.mcpReinitialize","version_index","endpoints.revertAgentVersion","endpoints.revokeUserKey","q","types","endpoints.searchPrincipals","body","updates","endpoints.feedback","originalKey","preferences","Error","endpoints.updatePromptGroup","endpoints.updateResourcePermissions","endpoints.updateSharedLink","endpoints.images","signal","requestConfig","endpoints.userKeyQuery","sha1","crypto","createHash","update","digest","createURL","domain","cleanDomain","replace","cleanPath","fullURL","schemaTypeHandlers","stringSchema","minLength","maxLength","numberSchema","minimum","maximum","integer","int","items","zodSchema","openAPISchemaToZod","describe","FunctionSignature","this","prototype","toObjectTool","additionalProperties","RequestConfig","basePath","method","operation","isConsequential","contentType","parameterLocations","RequestExecutor","authHeaders","setParams","operationHash","paramPattern","setAuth","metadata","auth","authorization_type","custom_auth_header","client_url","api_key","oauth_client_id","oauth_client_secret","oauth_token_expires_at","oauth_access_token","isApiKey","ServiceHttp","isOAuth","OAuth","Basic","basicToken","Buffer","from","Bearer","Custom","now","authToken","execute","_axios","create","bodyParams","loc","assign","getConfig","ActionRequest","defineProperty","createExecutor","executor","resolveRef","components","resolved","refPath_1","$ref","segment","sanitizeOperationId","baseDefinitions","labelCode","component","optionType","selectPlaceholder","searchPlaceholder","searchPlaceholderCode","selectPlaceholderCode","columnSpan","descriptionCode","placeholderCode","minTags","maxTags","enumMappings","createDefinition","base","overrides","librechat","showDefault","openAIParams","range","none","minimal","medium","concise","detailed","mistral","cohere","meta","googleConfig","googleCol1","googleCol2","openAICol1","openAICol2","anthropicConfig","anthropicCol1","anthropicCol2","bedrockAnthropic","bedrockMistral","bedrockCohere","bedrockGeneral","bedrockAnthropicCol1","bedrockAnthropicCol2","bedrockMistralCol1","bedrockMistralCol2","bedrockCohereCol1","bedrockCohereCol2","bedrockGeneralCol1","bedrockGeneralCol2","paramSettings","Anthropic","MistralAI","Cohere","Meta","AI21","Amazon","DeepSeek","openAIColumns","col1","col2","bedrockGeneralColumns","presetSettings","agentParamSettings","agentFiles","AGENT_VIEWER","VIEW","AGENT_EDITOR","EDIT","AGENT_OWNER","DELETE","updatedData","Math","floor","configureThinking","azure","c","cs","cpp","h","md","php","py","rb","tex","js","sh","ts","tar","zip","yml","yaml","tsv","submission","isEdited","userMessage","isContinued","isTemporary","isRegenerate","conversation","editedContent","ephemeralAgent","endpointOption","s.tConvoUpdateSchema","server","s.EModelEndpoint","assistant","conversation_starters","separators","lastIndex","separators_1","lastIndexOf","settings","schemaFields","settings_1","setting","minText","maxText","Number","Boolean","Enum","ZodArray","customGoogle","customOpenAI","possibleValues_2","_mdl","_cgl","_ml","endpointKey","modelKey","requiredPermission","tool","has","groupName","groupConfig","groupMap","firstModelName","modelDetails","azureOptions","azureOpenAIApiVersion","azureOpenAIApiKey","azureOpenAIApiInstanceName","azureOpenAIApiDeploymentName","modelGroupMap","modelConfig","result_1","apiKeyValue","dynamic","mergedConfig","dynamicEndpoint","mergedEndpoint","openapiSpec","generateZodSchemas","functionSignatures","requestBuilders","zodSchemas","baseUrl","servers","paths","methods","paramLocations","operationObj","defaultOperationId","operationId","summary","isStrict","parametersSchema","resolvedParam","paramName","paramSchema","in","requestBody","resolvedSchema","apply","functionSignature","actionRequest","endpointsConfig","endpointKeys","defaultCustomIndex","indexOf","accumulatedConfig","currentEndpointKey","isCustom","convo","secondaryModels","contentParts","skipReasoning","contentParts_1","TEXT","textValue","THINK","think","currentDate","dayjs","format","dayNumber","day","combinedDate","currentDatetime","isoDatetime","current_date","current_user","iso_datetime","current_datetime","specString","parsedSpec","load","schemas","httpMethod","responses","statusCode","refName","pop","configs","isValid","modelNames","groupDeploymentName","groupVersion","modelDeploymentName","modelVersion","columnsSet","settings_2","columns","code","ZodIssueCode","add","next","settings_3","requiredSettingFields_1","settingTypes","Tags","Input","Textarea","Slider","includeInput","round","Checkbox","Switch","Dropdown","Combobox","conversationSchema","zodType","typeName","isNaN","option","ZodError","additionalModels","availableModels","visionModel"],"mappings":"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"}